// <auto-generated />
using System;
using EP.TicTacToe.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EP.TicTacToe.Data.Migrations.GameDbMigrations
{
    [DbContext(typeof(TicTacDbContext))]
    partial class TicTacDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("EP.TicTacToe.Data.Models.CellDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MapId");

                    b.Property<int?>("StepId");

                    b.Property<char?>("TicTac");

                    b.Property<int>("X");

                    b.Property<int>("Y");

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.HasIndex("StepId")
                        .IsUnique();

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("EP.TicTacToe.Data.Models.GameDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("EP.TicTacToe.Data.Models.MapDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GameId");

                    b.Property<int>("Size");

                    b.HasKey("Id");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("EP.TicTacToe.Data.Models.PlayerDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("EP.TicTacToe.Data.Models.PlayerGameDb", b =>
                {
                    b.Property<int>("PlayerId");

                    b.Property<int>("GameId");

                    b.HasKey("PlayerId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("PlayerGames");
                });

            modelBuilder.Entity("EP.TicTacToe.Data.Models.StepDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GameId");

                    b.Property<int>("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("EP.TicTacToe.Data.Models.CellDb", b =>
                {
                    b.HasOne("EP.TicTacToe.Data.Models.MapDb", "MapDb")
                        .WithMany("Cells")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EP.TicTacToe.Data.Models.StepDb", "StepDb")
                        .WithOne("Cell")
                        .HasForeignKey("EP.TicTacToe.Data.Models.CellDb", "StepId");
                });

            modelBuilder.Entity("EP.TicTacToe.Data.Models.MapDb", b =>
                {
                    b.HasOne("EP.TicTacToe.Data.Models.GameDb", "Game")
                        .WithOne("Map")
                        .HasForeignKey("EP.TicTacToe.Data.Models.MapDb", "GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EP.TicTacToe.Data.Models.PlayerGameDb", b =>
                {
                    b.HasOne("EP.TicTacToe.Data.Models.GameDb", "Game")
                        .WithMany("PlayerGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EP.TicTacToe.Data.Models.PlayerDb", "Player")
                        .WithMany("PlayerGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EP.TicTacToe.Data.Models.StepDb", b =>
                {
                    b.HasOne("EP.TicTacToe.Data.Models.GameDb", "Game")
                        .WithMany("Steps")
                        .HasForeignKey("GameId");

                    b.HasOne("EP.TicTacToe.Data.Models.PlayerDb", "Player")
                        .WithMany("Steps")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
