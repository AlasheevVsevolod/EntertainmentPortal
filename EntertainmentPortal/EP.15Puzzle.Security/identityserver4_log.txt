2019-07-09 11:37:07.930 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 11:37:08.146 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 11:37:08.156 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 11:37:08.157 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 11:37:08.165 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 11:37:08.165 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 11:37:08.165 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 11:37:09.203 +03:00 [DBG] Login Url: /Account/Login
2019-07-09 11:37:09.207 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-09 11:37:09.207 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-09 11:37:09.208 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-09 11:37:09.208 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-09 11:37:09.208 +03:00 [DBG] Error Url: /home/error
2019-07-09 11:37:09.208 +03:00 [DBG] Error Id Parameter: errorId
2019-07-09 11:37:42.138 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 11:37:42.147 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 11:37:42.147 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 11:37:42.158 +03:00 [DBG] Start authorize request
2019-07-09 11:37:42.172 +03:00 [DBG] No user present in authorize request
2019-07-09 11:37:42.180 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:37:42.215 +03:00 [ERR] Unknown client or not enabled: swagger
{"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDExOjM3OjQyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 11:37:42.234 +03:00 [ERR] Request validation failed
2019-07-09 11:37:42.235 +03:00 [INF] {"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDExOjM3OjQyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 11:37:42.249 +03:00 [INF] {"ClientId":"swagger","ClientName":null,"RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Unknown client or client not enabled","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLO492GNE657:00000002","TimeStamp":"2019-07-09T08:37:42.0000000Z","ProcessId":17608,"LocalIpAddress":"127.0.0.1:20754","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-09 11:38:53.100 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 11:38:53.101 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 11:38:53.102 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 11:38:53.102 +03:00 [DBG] Start authorize request
2019-07-09 11:38:53.103 +03:00 [DBG] No user present in authorize request
2019-07-09 11:38:53.103 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:38:53.103 +03:00 [ERR] Unknown client or not enabled: swagger
{"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDExOjM4OjUzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 11:38:53.103 +03:00 [ERR] Request validation failed
2019-07-09 11:38:53.104 +03:00 [INF] {"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDExOjM4OjUzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 11:38:53.104 +03:00 [INF] {"ClientId":"swagger","ClientName":null,"RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Unknown client or client not enabled","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLO492GNE658:00000001","TimeStamp":"2019-07-09T08:38:53.0000000Z","ProcessId":17608,"LocalIpAddress":"127.0.0.1:20754","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-09 11:41:44.084 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 11:41:44.174 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 11:41:44.181 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 11:41:44.181 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 11:41:44.182 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 11:41:44.182 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 11:41:44.182 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 11:41:44.705 +03:00 [DBG] Login Url: /Account/Login
2019-07-09 11:41:44.709 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-09 11:41:44.709 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-09 11:41:44.710 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-09 11:41:44.710 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-09 11:41:44.710 +03:00 [DBG] Error Url: /home/error
2019-07-09 11:41:44.711 +03:00 [DBG] Error Id Parameter: errorId
2019-07-09 11:42:13.713 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 11:42:13.723 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 11:42:13.723 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 11:42:13.729 +03:00 [DBG] Start authorize request
2019-07-09 11:42:13.741 +03:00 [DBG] No user present in authorize request
2019-07-09 11:42:13.748 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:42:13.783 +03:00 [ERR] Unknown client or not enabled: swagger
{"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDExOjQyOjEzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 11:42:13.804 +03:00 [ERR] Request validation failed
2019-07-09 11:42:13.804 +03:00 [INF] {"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDExOjQyOjEzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 11:42:13.816 +03:00 [INF] {"ClientId":"swagger","ClientName":null,"RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Unknown client or client not enabled","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLO4952R4BPD:00000002","TimeStamp":"2019-07-09T08:42:13.0000000Z","ProcessId":11440,"LocalIpAddress":"127.0.0.1:6271","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-09 11:48:26.948 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 11:48:27.031 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 11:48:27.036 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 11:48:27.036 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 11:48:27.036 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 11:48:27.036 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 11:48:27.036 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 11:48:27.412 +03:00 [DBG] Login Url: /Account/Login
2019-07-09 11:48:27.420 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-09 11:48:27.420 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-09 11:48:27.420 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-09 11:48:27.420 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-09 11:48:27.420 +03:00 [DBG] Error Url: /home/error
2019-07-09 11:48:27.420 +03:00 [DBG] Error Id Parameter: errorId
2019-07-09 11:51:15.315 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 11:51:15.332 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 11:51:15.333 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 11:51:15.342 +03:00 [DBG] Start authorize request
2019-07-09 11:51:15.359 +03:00 [DBG] No user present in authorize request
2019-07-09 11:51:15.367 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:51:15.396 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:51:15.455 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 11:51:15.476 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDExOjUxOjE1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDExOjUxOjE1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 11:51:15.508 +03:00 [INF] Showing login: User is not authenticated
2019-07-09 11:51:15.636 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:51:15.636 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:51:15.639 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 11:51:15.645 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:51:18.276 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 11:51:18.392 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:51:18.392 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:51:18.393 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 11:51:18.419 +03:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"818727","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO498QSBR5S:00000003","TimeStamp":"2019-07-09T08:51:18.0000000Z","ProcessId":3312,"LocalIpAddress":"127.0.0.1:46316","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-09 11:51:18.447 +03:00 [DBG] Augmenting SignInContext
2019-07-09 11:51:18.452 +03:00 [DBG] Adding idp claim with value: local
2019-07-09 11:51:18.453 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-09 11:51:18.487 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 11:51:18.490 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:51:18.538 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 11:51:18.539 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 11:51:18.540 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 11:51:18.551 +03:00 [DBG] Start authorize callback request
2019-07-09 11:51:18.559 +03:00 [DBG] User in authorize request: 818727
2019-07-09 11:51:18.559 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:51:18.559 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:51:18.560 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 11:51:18.560 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"818727","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDExOjUxOjE1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"248baf980652da120a8d4d230e75bc22","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDExOjUxOjE1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 11:51:18.563 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 11:51:18.590 +03:00 [DBG] user_consent grant with value: swagger|818727 not found in store.
2019-07-09 11:51:18.590 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 11:51:18.590 +03:00 [INF] Showing consent: User has not yet consented
2019-07-09 11:51:18.629 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:51:18.629 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:51:18.630 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 11:51:18.630 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:51:22.689 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 11:51:22.726 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:51:22.727 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:51:22.728 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 11:51:22.733 +03:00 [INF] {"SubjectId":"818727","ClientId":"swagger","RequestedScopes":["pyatnashki_api"],"GrantedScopes":["pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO498QSBR5S:00000007","TimeStamp":"2019-07-09T08:51:22.0000000Z","ProcessId":3312,"LocalIpAddress":"127.0.0.1:46316","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-09 11:51:22.772 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:51:22.800 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 11:51:22.802 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 11:51:22.802 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 11:51:22.802 +03:00 [DBG] Start authorize callback request
2019-07-09 11:51:22.809 +03:00 [DBG] User in authorize request: 818727
2019-07-09 11:51:22.810 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:51:22.810 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:51:22.811 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 11:51:22.811 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"818727","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDExOjUxOjE1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"248baf980652da120a8d4d230e75bc22","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDExOjUxOjE1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 11:51:22.811 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 11:51:22.811 +03:00 [DBG] user_consent grant with value: swagger|818727 not found in store.
2019-07-09 11:51:22.812 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 11:51:22.822 +03:00 [INF] User consented to scopes: ["pyatnashki_api"]
2019-07-09 11:51:22.830 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-09 11:51:22.849 +03:00 [DBG] Creating Implicit Flow response.
2019-07-09 11:51:22.872 +03:00 [DBG] Getting claims for access token for client: swagger
2019-07-09 11:51:22.873 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-09 11:51:22.882 +03:00 [DBG] Get profile called for subject 818727 from client Swagger Client with claim types [] via ClaimsProviderAccessToken
2019-07-09 11:51:22.885 +03:00 [DBG] Issued claims: []
2019-07-09 11:51:23.000 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":"818727","Scopes":"pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"access_token","TokenValue":"****Uy0Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO498QSBR5S:00000008","TimeStamp":"2019-07-09T08:51:22.0000000Z","ProcessId":3312,"LocalIpAddress":"127.0.0.1:46316","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-09 11:51:23.003 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"swagger","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","State":"VHVlIEp1bCAwOSAyMDE5IDExOjUxOjE1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","Scope":"pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-09 11:51:23.033 +03:00 [DBG] Augmenting SignInContext
2019-07-09 11:51:23.034 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 11:55:56.928 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 11:55:56.929 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 11:55:56.930 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 11:55:56.930 +03:00 [DBG] Start authorize request
2019-07-09 11:55:56.930 +03:00 [DBG] User in authorize request: 818727
2019-07-09 11:55:56.931 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:55:56.931 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:55:56.931 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 11:55:56.931 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"818727","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDExOjU1OjU2IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"248baf980652da120a8d4d230e75bc22","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDExOjU1OjU2IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 11:55:56.932 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 11:55:56.932 +03:00 [DBG] user_consent grant with value: swagger|818727 not found in store.
2019-07-09 11:55:56.932 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 11:55:56.932 +03:00 [INF] Showing consent: User has not yet consented
2019-07-09 11:55:56.948 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:55:56.948 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:55:56.948 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 11:55:56.948 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:56:25.858 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 11:56:25.860 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 11:56:25.860 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 11:56:25.860 +03:00 [DBG] Start authorize request
2019-07-09 11:56:25.861 +03:00 [DBG] No user present in authorize request
2019-07-09 11:56:25.861 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:56:25.861 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:56:25.861 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 11:56:25.861 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDExOjU2OjI1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDExOjU2OjI1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 11:56:25.862 +03:00 [INF] Showing login: User is not authenticated
2019-07-09 11:56:25.885 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:56:25.885 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:56:25.886 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 11:56:25.886 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:56:33.518 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-09 11:56:37.283 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 11:56:37.283 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:56:37.284 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 11:56:37.284 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 11:59:08.737 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 11:59:08.851 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 11:59:08.859 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 11:59:08.859 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 11:59:08.859 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 11:59:08.859 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 11:59:08.859 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 11:59:09.571 +03:00 [DBG] Login Url: /Account/Login
2019-07-09 11:59:09.575 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-09 11:59:09.576 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-09 11:59:09.576 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-09 11:59:09.577 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-09 11:59:09.578 +03:00 [DBG] Error Url: /home/error
2019-07-09 11:59:09.579 +03:00 [DBG] Error Id Parameter: errorId
2019-07-09 11:59:26.023 +03:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-07-09 11:59:27.773 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-09 12:02:20.276 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 12:02:20.329 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 12:02:20.332 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 12:02:20.333 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 12:02:20.333 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 12:02:20.333 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 12:02:20.334 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 12:02:20.880 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: The path in 'value' must start with '/'.
Parameter name: value
   at Microsoft.AspNetCore.Http.PathString..ctor(String value)
   at Microsoft.AspNetCore.Http.PathString.op_Implicit(String s)
   at ep._15puzzle.security.Startup.<>c.<ConfigureServices>b__7_2(GoogleOptions options) in C:\courses\entertainment-portal\EntertainmentPortal\EP.15Puzzle.Security\Startup.cs:line 74
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-09 12:02:58.920 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 12:02:59.015 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 12:02:59.022 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 12:02:59.023 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 12:02:59.023 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 12:02:59.023 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 12:02:59.023 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 12:02:59.586 +03:00 [DBG] Login Url: /Account/Login
2019-07-09 12:02:59.591 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-09 12:02:59.591 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-09 12:02:59.592 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-09 12:02:59.592 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-09 12:02:59.592 +03:00 [DBG] Error Url: /home/error
2019-07-09 12:02:59.592 +03:00 [DBG] Error Id Parameter: errorId
2019-07-09 12:03:07.733 +03:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-07-09 12:03:09.471 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-09 12:04:48.304 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 12:04:48.372 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 12:04:48.378 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 12:04:48.378 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 12:04:48.378 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 12:04:48.378 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 12:04:48.378 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 12:04:48.823 +03:00 [DBG] Login Url: /Account/Login
2019-07-09 12:04:48.826 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-09 12:04:48.826 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-09 12:04:48.826 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-09 12:04:48.826 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-09 12:04:48.826 +03:00 [DBG] Error Url: /home/error
2019-07-09 12:04:48.826 +03:00 [DBG] Error Id Parameter: errorId
2019-07-09 12:04:53.814 +03:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-07-09 12:04:55.714 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-09 12:05:02.111 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-09 12:05:02.188 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"0d4f41e7fd1343a4cf565f717323452532dad27cee26237d730749ced2344e61","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO49HVBT4G4:00000006","TimeStamp":"2019-07-09T09:05:02.0000000Z","ProcessId":5972,"LocalIpAddress":"127.0.0.1:2559","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-09 12:05:02.219 +03:00 [DBG] Augmenting SignInContext
2019-07-09 12:05:02.223 +03:00 [DBG] Adding amr claim with value: external
2019-07-09 12:05:02.234 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 12:05:02.241 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-09 12:07:11.624 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 12:07:11.679 +03:00 [INF] AuthenticationScheme: idsrv signed out.
2019-07-09 12:07:11.680 +03:00 [INF] {"SubjectId":"0d4f41e7fd1343a4cf565f717323452532dad27cee26237d730749ced2344e61","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLO49HVBT4G5:00000002","TimeStamp":"2019-07-09T09:07:11.0000000Z","ProcessId":5972,"LocalIpAddress":"127.0.0.1:2559","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-09 12:07:17.701 +03:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-07-09 12:07:20.964 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 12:07:21.006 +03:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"818727","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO49HVBT4G5:00000006","TimeStamp":"2019-07-09T09:07:21.0000000Z","ProcessId":5972,"LocalIpAddress":"127.0.0.1:2559","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-09 12:07:21.012 +03:00 [DBG] Augmenting SignInContext
2019-07-09 12:07:21.012 +03:00 [DBG] Adding idp claim with value: local
2019-07-09 12:07:21.012 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-09 12:07:21.013 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 12:07:27.810 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 12:07:27.812 +03:00 [INF] AuthenticationScheme: idsrv signed out.
2019-07-09 12:07:27.813 +03:00 [INF] {"SubjectId":"818727","DisplayName":"alice","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLO49HVBT4G5:00000009","TimeStamp":"2019-07-09T09:07:27.0000000Z","ProcessId":5972,"LocalIpAddress":"127.0.0.1:2559","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-09 12:11:10.382 +03:00 [INF] Error from RemoteAuthentication: The oauth state was missing or invalid..
2019-07-09 12:11:10.385 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: An error was encountered while handling the remote login. ---> System.Exception: The oauth state was missing or invalid.
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync() in C:\local\identity\server4\IdentityServer4\src\Hosting\FederatedSignOut\AuthenticationRequestHandlerWrapper.cs:line 38
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-09 12:11:43.793 +03:00 [INF] Error from RemoteAuthentication: The oauth state was missing or invalid..
2019-07-09 12:11:43.794 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: An error was encountered while handling the remote login. ---> System.Exception: The oauth state was missing or invalid.
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync() in C:\local\identity\server4\IdentityServer4\src\Hosting\FederatedSignOut\AuthenticationRequestHandlerWrapper.cs:line 38
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-09 12:14:56.162 +03:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-07-09 12:15:27.741 +03:00 [INF] Error from RemoteAuthentication: The oauth state was missing or invalid..
2019-07-09 12:15:27.742 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: An error was encountered while handling the remote login. ---> System.Exception: The oauth state was missing or invalid.
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync() in C:\local\identity\server4\IdentityServer4\src\Hosting\FederatedSignOut\AuthenticationRequestHandlerWrapper.cs:line 38
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-09 12:19:28.861 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 12:19:28.944 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 12:19:28.950 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 12:19:28.950 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 12:19:28.950 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 12:19:28.950 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 12:19:28.950 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 12:19:29.403 +03:00 [DBG] Login Url: /Account/Login
2019-07-09 12:19:29.407 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-09 12:19:29.408 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-09 12:19:29.408 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-09 12:19:29.408 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-09 12:19:29.408 +03:00 [DBG] Error Url: /home/error
2019-07-09 12:19:29.408 +03:00 [DBG] Error Id Parameter: errorId
2019-07-09 12:19:36.357 +03:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-07-09 12:20:16.743 +03:00 [INF] Error from RemoteAuthentication: The oauth state was missing or invalid..
2019-07-09 12:20:16.746 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: An error was encountered while handling the remote login. ---> System.Exception: The oauth state was missing or invalid.
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync() in C:\local\identity\server4\IdentityServer4\src\Hosting\FederatedSignOut\AuthenticationRequestHandlerWrapper.cs:line 38
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-09 12:25:20.907 +03:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-07-09 12:25:23.947 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 12:25:24.042 +03:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"818727","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO49Q5P4V9P:00000005","TimeStamp":"2019-07-09T09:25:24.0000000Z","ProcessId":8272,"LocalIpAddress":"127.0.0.1:6779","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-09 12:25:24.087 +03:00 [DBG] Augmenting SignInContext
2019-07-09 12:25:24.091 +03:00 [DBG] Adding idp claim with value: local
2019-07-09 12:25:24.091 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-09 12:25:24.108 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 12:25:29.075 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 12:25:29.103 +03:00 [INF] AuthenticationScheme: idsrv signed out.
2019-07-09 12:25:29.104 +03:00 [INF] {"SubjectId":"818727","DisplayName":"alice","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLO49Q5P4V9P:00000008","TimeStamp":"2019-07-09T09:25:29.0000000Z","ProcessId":8272,"LocalIpAddress":"127.0.0.1:6779","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-09 12:25:35.714 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-09 12:25:35.722 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-09 12:25:35.722 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-09 12:25:35.730 +03:00 [DBG] Start discovery request
2019-07-09 13:19:57.591 +03:00 [INF] Error from RemoteAuthentication: The oauth state was missing or invalid..
2019-07-09 13:19:57.594 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: An error was encountered while handling the remote login. ---> System.Exception: The oauth state was missing or invalid.
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync() in C:\local\identity\server4\IdentityServer4\src\Hosting\FederatedSignOut\AuthenticationRequestHandlerWrapper.cs:line 38
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-09 14:11:45.368 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 14:11:45.618 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 14:11:45.634 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 14:11:45.635 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 14:11:45.635 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 14:11:45.635 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 14:11:45.635 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 14:11:47.765 +03:00 [DBG] Login Url: /Account/Login
2019-07-09 14:11:47.770 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-09 14:11:47.770 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-09 14:11:47.770 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-09 14:11:47.770 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-09 14:11:47.770 +03:00 [DBG] Error Url: /home/error
2019-07-09 14:11:47.770 +03:00 [DBG] Error Id Parameter: errorId
2019-07-09 14:12:15.040 +03:00 [INF] Error from RemoteAuthentication: The oauth state was missing or invalid..
2019-07-09 14:12:15.042 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: An error was encountered while handling the remote login. ---> System.Exception: The oauth state was missing or invalid.
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync() in C:\local\identity\server4\IdentityServer4\src\Hosting\FederatedSignOut\AuthenticationRequestHandlerWrapper.cs:line 38
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-09 14:54:46.017 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 14:54:46.076 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 14:54:46.081 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 14:54:46.081 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 14:54:46.082 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 14:54:46.082 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 14:54:46.082 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 14:54:46.445 +03:00 [DBG] Login Url: /Account/Login
2019-07-09 14:54:46.449 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-09 14:54:46.449 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-09 14:54:46.450 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-09 14:54:46.450 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-09 14:54:46.450 +03:00 [DBG] Error Url: /home/error
2019-07-09 14:54:46.450 +03:00 [DBG] Error Id Parameter: errorId
2019-07-09 14:55:18.154 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 14:55:18.164 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 14:55:18.165 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 14:55:18.172 +03:00 [DBG] Start authorize request
2019-07-09 14:55:18.184 +03:00 [DBG] No user present in authorize request
2019-07-09 14:55:18.191 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:55:18.216 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:55:18.290 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:55:18.315 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE0OjU1OjE4IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE0OjU1OjE4IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 14:55:18.346 +03:00 [INF] Showing login: User is not authenticated
2019-07-09 14:55:18.427 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:55:18.428 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:55:18.428 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:55:18.433 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:56:22.732 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 14:56:22.804 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 14:56:22.809 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 14:56:22.809 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 14:56:22.809 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 14:56:22.809 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 14:56:22.809 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 14:56:23.305 +03:00 [DBG] Login Url: /Account/Login
2019-07-09 14:56:23.308 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-09 14:56:23.308 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-09 14:56:23.308 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-09 14:56:23.308 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-09 14:56:23.308 +03:00 [DBG] Error Url: /home/error
2019-07-09 14:56:23.308 +03:00 [DBG] Error Id Parameter: errorId
2019-07-09 14:57:13.124 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 14:57:13.134 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 14:57:13.136 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 14:57:13.142 +03:00 [DBG] Start authorize request
2019-07-09 14:57:13.153 +03:00 [DBG] No user present in authorize request
2019-07-09 14:57:13.160 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:57:13.183 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:57:13.264 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:57:13.287 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE0OjU3OjEzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE0OjU3OjEzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 14:57:13.318 +03:00 [INF] Showing login: User is not authenticated
2019-07-09 14:57:13.399 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:57:13.400 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:57:13.400 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:57:13.404 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:57:16.672 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-09 14:57:30.662 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:57:30.663 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:57:30.664 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:57:30.665 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:58:04.192 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-09 14:58:39.601 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 14:58:39.602 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 14:58:39.602 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 14:58:39.605 +03:00 [DBG] Start authorize request
2019-07-09 14:58:39.606 +03:00 [DBG] No user present in authorize request
2019-07-09 14:58:39.606 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:58:39.607 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:58:39.607 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:58:39.609 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE0OjU4OjM5IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE0OjU4OjM5IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 14:58:39.609 +03:00 [INF] Showing login: User is not authenticated
2019-07-09 14:58:39.645 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:58:39.645 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:58:39.646 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:58:39.646 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:58:40.884 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-09 14:59:19.830 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 14:59:19.831 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 14:59:19.831 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 14:59:19.831 +03:00 [DBG] Start authorize request
2019-07-09 14:59:19.831 +03:00 [DBG] No user present in authorize request
2019-07-09 14:59:19.832 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:59:19.832 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:59:19.832 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:59:19.833 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE0OjU5OjE5IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE0OjU5OjE5IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 14:59:19.833 +03:00 [INF] Showing login: User is not authenticated
2019-07-09 14:59:19.850 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:59:19.851 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:59:19.851 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:59:19.851 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:59:20.991 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-09 14:59:27.409 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-09 14:59:27.467 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO4CHRBND11:00000009","TimeStamp":"2019-07-09T11:59:27.0000000Z","ProcessId":5068,"LocalIpAddress":"127.0.0.1:6112","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-09 14:59:27.480 +03:00 [DBG] Augmenting SignInContext
2019-07-09 14:59:27.485 +03:00 [DBG] Adding amr claim with value: external
2019-07-09 14:59:27.491 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 14:59:27.500 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-09 14:59:27.500 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:59:27.500 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:59:27.501 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:59:27.503 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:59:27.511 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 14:59:27.514 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 14:59:27.514 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 14:59:27.526 +03:00 [DBG] Start authorize callback request
2019-07-09 14:59:27.535 +03:00 [DBG] User in authorize request: 6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877
2019-07-09 14:59:27.535 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:59:27.535 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:59:27.535 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:59:27.536 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE0OjU5OjE5IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"871ad940d912e9f24a71dd35feb2bd12","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE0OjU5OjE5IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 14:59:27.538 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 14:59:27.559 +03:00 [DBG] user_consent grant with value: swagger|6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877 not found in store.
2019-07-09 14:59:27.559 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 14:59:27.559 +03:00 [INF] Showing consent: User has not yet consented
2019-07-09 14:59:27.603 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:59:27.603 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:59:27.603 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:59:27.603 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:59:31.039 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 14:59:31.097 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:59:31.097 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:59:31.097 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:59:31.099 +03:00 [INF] {"SubjectId":"6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877","ClientId":"swagger","RequestedScopes":["pyatnashki_api"],"GrantedScopes":["pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO4CHRBND11:0000000D","TimeStamp":"2019-07-09T11:59:31.0000000Z","ProcessId":5068,"LocalIpAddress":"127.0.0.1:6112","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-09 14:59:31.127 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:59:31.135 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 14:59:31.136 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 14:59:31.136 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 14:59:31.136 +03:00 [DBG] Start authorize callback request
2019-07-09 14:59:31.147 +03:00 [DBG] User in authorize request: 6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877
2019-07-09 14:59:31.147 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 14:59:31.147 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 14:59:31.148 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 14:59:31.148 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE0OjU5OjE5IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"871ad940d912e9f24a71dd35feb2bd12","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE0OjU5OjE5IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 14:59:31.148 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 14:59:31.148 +03:00 [DBG] user_consent grant with value: swagger|6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877 not found in store.
2019-07-09 14:59:31.148 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 14:59:31.161 +03:00 [INF] User consented to scopes: ["pyatnashki_api"]
2019-07-09 14:59:31.168 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877
2019-07-09 14:59:31.189 +03:00 [DBG] Creating Implicit Flow response.
2019-07-09 14:59:31.207 +03:00 [DBG] Getting claims for access token for client: swagger
2019-07-09 14:59:31.208 +03:00 [DBG] Getting claims for access token for subject: 6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877
2019-07-09 14:59:31.214 +03:00 [DBG] Get profile called for subject 6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877 from client Swagger Client with claim types [] via ClaimsProviderAccessToken
2019-07-09 14:59:31.216 +03:00 [DBG] Issued claims: []
2019-07-09 14:59:31.317 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":"6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877","Scopes":"pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"access_token","TokenValue":"****z93A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4CHRBND11:0000000E","TimeStamp":"2019-07-09T11:59:31.0000000Z","ProcessId":5068,"LocalIpAddress":"127.0.0.1:6112","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-09 14:59:31.320 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6dad757e0b355efe0f7f407256e1acbc463ab3c03899d33855343e38ee2ce877","ClientId":"swagger","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","State":"VHVlIEp1bCAwOSAyMDE5IDE0OjU5OjE5IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","Scope":"pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-09 14:59:31.350 +03:00 [DBG] Augmenting SignInContext
2019-07-09 14:59:31.351 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 14:59:59.879 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-09 14:59:59.889 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-09 14:59:59.890 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-09 14:59:59.907 +03:00 [DBG] Start discovery request
2019-07-09 15:00:00.200 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-09 15:00:00.203 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-09 15:00:00.203 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-09 15:00:00.209 +03:00 [DBG] Start key discovery request
2019-07-09 15:12:20.283 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 15:12:20.284 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 15:12:20.284 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 15:12:20.284 +03:00 [DBG] Start authorize request
2019-07-09 15:12:20.284 +03:00 [DBG] No user present in authorize request
2019-07-09 15:12:20.284 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 15:12:20.284 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 15:12:20.286 +03:00 [ERR] Requested scope not allowed: openid
2019-07-09 15:12:20.296 +03:00 [ERR] Request validation failed
2019-07-09 15:12:20.296 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE1OjEyOjIwIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"openid profile pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE1OjEyOjIwIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 15:12:20.299 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Error":"unauthorized_client","ErrorDescription":"Invalid scope for client","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLO4CHRBND13:00000001","TimeStamp":"2019-07-09T12:12:20.0000000Z","ProcessId":5068,"LocalIpAddress":"127.0.0.1:6112","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-09 15:12:40.339 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 15:12:40.340 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 15:12:40.340 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 15:12:40.340 +03:00 [DBG] Start authorize request
2019-07-09 15:12:40.340 +03:00 [DBG] No user present in authorize request
2019-07-09 15:12:40.340 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 15:12:40.341 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 15:12:40.341 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 15:12:40.341 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE1OjEyOjQwIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE1OjEyOjQwIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 15:12:40.341 +03:00 [INF] Showing login: User is not authenticated
2019-07-09 15:12:40.355 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 15:12:40.355 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 15:12:40.356 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 15:12:40.356 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 15:12:45.408 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 15:12:45.409 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 15:12:45.410 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 15:12:45.411 +03:00 [DBG] Start authorize request
2019-07-09 15:12:45.411 +03:00 [DBG] No user present in authorize request
2019-07-09 15:12:45.411 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 15:12:45.411 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 15:12:45.413 +03:00 [ERR] Identity related scope requests, but no openid scope
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"profile","State":"VHVlIEp1bCAwOSAyMDE5IDE1OjEyOjQ1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"profile","state":"VHVlIEp1bCAwOSAyMDE5IDE1OjEyOjQ1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 15:12:45.414 +03:00 [ERR] Request validation failed
2019-07-09 15:12:45.414 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"profile","State":"VHVlIEp1bCAwOSAyMDE5IDE1OjEyOjQ1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"profile","state":"VHVlIEp1bCAwOSAyMDE5IDE1OjEyOjQ1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 15:12:45.414 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":null,"Scopes":"profile","GrantType":"implicit","Error":"invalid_scope","ErrorDescription":"Identity scopes requested, but openid scope is missing","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLO4CHRBND13:00000006","TimeStamp":"2019-07-09T12:12:45.0000000Z","ProcessId":5068,"LocalIpAddress":"127.0.0.1:6112","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-09 15:12:49.247 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 15:12:49.247 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 15:12:49.247 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 15:12:49.249 +03:00 [DBG] Start authorize request
2019-07-09 15:12:49.250 +03:00 [DBG] No user present in authorize request
2019-07-09 15:12:49.250 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 15:12:49.250 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 15:12:49.251 +03:00 [ERR] Requested scope not allowed: openid
2019-07-09 15:12:49.251 +03:00 [ERR] Request validation failed
2019-07-09 15:12:49.251 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid","State":"VHVlIEp1bCAwOSAyMDE5IDE1OjEyOjQ5IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"openid","state":"VHVlIEp1bCAwOSAyMDE5IDE1OjEyOjQ5IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 15:12:49.252 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid","GrantType":"implicit","Error":"unauthorized_client","ErrorDescription":"Invalid scope for client","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLO4CHRBND13:00000008","TimeStamp":"2019-07-09T12:12:49.0000000Z","ProcessId":5068,"LocalIpAddress":"127.0.0.1:6112","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-09 15:22:11.873 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 15:22:11.918 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 15:22:11.921 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 15:22:11.921 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 15:22:11.921 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 15:22:11.921 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 15:22:11.921 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 15:22:12.408 +03:00 [DBG] Login Url: /Account/Login
2019-07-09 15:22:12.411 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-09 15:22:12.411 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-09 15:22:12.411 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-09 15:22:12.411 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-09 15:22:12.411 +03:00 [DBG] Error Url: /home/error
2019-07-09 15:22:12.411 +03:00 [DBG] Error Id Parameter: errorId
2019-07-09 15:29:10.152 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-09 15:29:10.208 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-09 15:29:10.213 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-09 15:29:10.213 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-09 15:29:10.213 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-09 15:29:10.214 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-09 15:29:10.214 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-09 15:29:10.596 +03:00 [DBG] Login Url: /Account/Login
2019-07-09 15:29:10.600 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-09 15:29:10.600 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-09 15:29:10.600 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-09 15:29:10.600 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-09 15:29:10.600 +03:00 [DBG] Error Url: /home/error
2019-07-09 15:29:10.601 +03:00 [DBG] Error Id Parameter: errorId
2019-07-09 17:22:45.593 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 17:22:45.601 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 17:22:45.602 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 17:22:45.614 +03:00 [DBG] Start authorize request
2019-07-09 17:22:45.634 +03:00 [DBG] No user present in authorize request
2019-07-09 17:22:45.645 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:22:45.677 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:22:45.762 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:22:45.789 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjIyOjQ1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjIyOjQ1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:22:45.820 +03:00 [INF] Showing login: User is not authenticated
2019-07-09 17:22:45.921 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:22:45.922 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:22:45.923 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:22:45.928 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:22:48.131 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 17:22:48.319 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:22:48.319 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:22:48.319 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:22:48.368 +03:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"818727","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO4D45LA2H1:00000002","TimeStamp":"2019-07-09T14:22:48.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-09 17:22:48.397 +03:00 [DBG] Augmenting SignInContext
2019-07-09 17:22:48.402 +03:00 [DBG] Adding idp claim with value: local
2019-07-09 17:22:48.402 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-09 17:22:48.421 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 17:22:48.423 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:22:48.435 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 17:22:48.436 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 17:22:48.437 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 17:22:48.448 +03:00 [DBG] Start authorize callback request
2019-07-09 17:22:48.458 +03:00 [DBG] User in authorize request: 818727
2019-07-09 17:22:48.458 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:22:48.459 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:22:48.459 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:22:48.460 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"818727","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjIyOjQ1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d43e8e0ba7694f82786c287e67866e91","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjIyOjQ1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:22:48.462 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 17:22:48.500 +03:00 [DBG] user_consent grant with value: swagger|818727 not found in store.
2019-07-09 17:22:48.500 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 17:22:48.501 +03:00 [INF] Showing consent: User has not yet consented
2019-07-09 17:22:48.538 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:22:48.539 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:22:48.539 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:22:48.539 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:22:50.719 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 17:22:50.758 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:22:50.759 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:22:50.759 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:22:50.762 +03:00 [INF] {"SubjectId":"818727","ClientId":"swagger","RequestedScopes":["pyatnashki_api"],"GrantedScopes":["pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO4D45LA2GV:00000003","TimeStamp":"2019-07-09T14:22:50.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-09 17:22:50.816 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:22:50.827 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 17:22:50.827 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 17:22:50.828 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 17:22:50.828 +03:00 [DBG] Start authorize callback request
2019-07-09 17:22:50.834 +03:00 [DBG] User in authorize request: 818727
2019-07-09 17:22:50.834 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:22:50.835 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:22:50.835 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:22:50.835 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"818727","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjIyOjQ1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d43e8e0ba7694f82786c287e67866e91","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjIyOjQ1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:22:50.836 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 17:22:50.836 +03:00 [DBG] user_consent grant with value: swagger|818727 not found in store.
2019-07-09 17:22:50.836 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 17:22:50.848 +03:00 [INF] User consented to scopes: ["pyatnashki_api"]
2019-07-09 17:22:50.856 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-09 17:22:50.877 +03:00 [DBG] Creating Implicit Flow response.
2019-07-09 17:22:50.899 +03:00 [DBG] Getting claims for access token for client: swagger
2019-07-09 17:22:50.900 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-09 17:22:50.907 +03:00 [DBG] Get profile called for subject 818727 from client Swagger Client with claim types [] via ClaimsProviderAccessToken
2019-07-09 17:22:50.910 +03:00 [DBG] Issued claims: []
2019-07-09 17:22:51.055 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":"818727","Scopes":"pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"access_token","TokenValue":"****lGBw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2H2:00000003","TimeStamp":"2019-07-09T14:22:51.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-09 17:22:51.058 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"swagger","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjIyOjQ1IEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","Scope":"pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-09 17:22:51.082 +03:00 [DBG] Augmenting SignInContext
2019-07-09 17:22:51.083 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 17:22:57.388 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-09 17:22:57.393 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-09 17:22:57.394 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-09 17:22:57.403 +03:00 [DBG] Start discovery request
2019-07-09 17:22:57.674 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-09 17:22:57.677 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-09 17:22:57.677 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-09 17:22:57.687 +03:00 [DBG] Start key discovery request
2019-07-09 17:26:21.705 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 17:26:21.705 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 17:26:21.705 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 17:26:21.705 +03:00 [DBG] Start authorize request
2019-07-09 17:26:21.706 +03:00 [DBG] User in authorize request: 818727
2019-07-09 17:26:21.706 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:26:21.706 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:26:21.707 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:26:21.707 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"818727","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI2OjIxIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d43e8e0ba7694f82786c287e67866e91","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjI2OjIxIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:26:21.707 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 17:26:21.708 +03:00 [DBG] user_consent grant with value: swagger|818727 not found in store.
2019-07-09 17:26:21.708 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 17:26:21.708 +03:00 [INF] Showing consent: User has not yet consented
2019-07-09 17:26:21.723 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:26:21.724 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:26:21.724 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:26:21.724 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:26:24.078 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 17:26:24.081 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:26:24.081 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:26:24.081 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:26:24.083 +03:00 [INF] {"SubjectId":"818727","ClientId":"swagger","RequestedScopes":["pyatnashki_api"],"GrantedScopes":["pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO4D45LA2H4:00000003","TimeStamp":"2019-07-09T14:26:24.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-09 17:26:24.084 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:26:24.103 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 17:26:24.104 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 17:26:24.104 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 17:26:24.104 +03:00 [DBG] Start authorize callback request
2019-07-09 17:26:24.104 +03:00 [DBG] User in authorize request: 818727
2019-07-09 17:26:24.105 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:26:24.105 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:26:24.105 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:26:24.106 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"818727","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI2OjIxIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d43e8e0ba7694f82786c287e67866e91","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjI2OjIxIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:26:24.106 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 17:26:24.106 +03:00 [DBG] user_consent grant with value: swagger|818727 not found in store.
2019-07-09 17:26:24.106 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 17:26:24.106 +03:00 [INF] User consented to scopes: ["pyatnashki_api"]
2019-07-09 17:26:24.107 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-09 17:26:24.107 +03:00 [DBG] Creating Implicit Flow response.
2019-07-09 17:26:24.107 +03:00 [DBG] Getting claims for access token for client: swagger
2019-07-09 17:26:24.107 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-09 17:26:24.108 +03:00 [DBG] Get profile called for subject 818727 from client Swagger Client with claim types [] via ClaimsProviderAccessToken
2019-07-09 17:26:24.108 +03:00 [DBG] Issued claims: []
2019-07-09 17:26:24.117 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":"818727","Scopes":"pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"access_token","TokenValue":"****iiDw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2H4:00000004","TimeStamp":"2019-07-09T14:26:24.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-09 17:26:24.118 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"swagger","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI2OjIxIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","Scope":"pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-09 17:26:29.512 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-09 17:26:29.514 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-09 17:26:29.515 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-09 17:26:29.515 +03:00 [DBG] Start discovery request
2019-07-09 17:26:29.823 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-09 17:26:29.824 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-09 17:26:29.824 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-09 17:26:29.825 +03:00 [DBG] Start key discovery request
2019-07-09 17:28:11.127 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 17:28:11.128 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 17:28:11.128 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 17:28:11.128 +03:00 [DBG] Start authorize request
2019-07-09 17:28:11.128 +03:00 [DBG] No user present in authorize request
2019-07-09 17:28:11.128 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:28:11.128 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:28:11.129 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:28:11.130 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI4OjExIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjI4OjExIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:28:11.130 +03:00 [INF] Showing login: User is not authenticated
2019-07-09 17:28:11.142 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:28:11.142 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:28:11.143 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:28:11.143 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:28:17.024 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 17:28:17.027 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:28:17.028 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:28:17.028 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:28:17.030 +03:00 [INF] {"Username":"bob","Provider":null,"ProviderUserId":null,"SubjectId":"88421113","DisplayName":"bob","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO4D45LA2H5:00000003","TimeStamp":"2019-07-09T14:28:17.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-09 17:28:17.030 +03:00 [DBG] Augmenting SignInContext
2019-07-09 17:28:17.031 +03:00 [DBG] Adding idp claim with value: local
2019-07-09 17:28:17.031 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-09 17:28:17.031 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 17:28:17.032 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:28:17.048 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 17:28:17.049 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 17:28:17.049 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 17:28:17.049 +03:00 [DBG] Start authorize callback request
2019-07-09 17:28:17.049 +03:00 [DBG] User in authorize request: 88421113
2019-07-09 17:28:17.049 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:28:17.049 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:28:17.050 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:28:17.050 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"88421113","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI4OjExIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"57312b30d139472df0c420dad2bbb776","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjI4OjExIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:28:17.050 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 17:28:17.050 +03:00 [DBG] user_consent grant with value: swagger|88421113 not found in store.
2019-07-09 17:28:17.050 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 17:28:17.051 +03:00 [INF] Showing consent: User has not yet consented
2019-07-09 17:28:17.065 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:28:17.065 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:28:17.065 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:28:17.065 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:28:20.165 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 17:28:20.168 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:28:20.168 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:28:20.169 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:28:20.169 +03:00 [INF] {"SubjectId":"88421113","ClientId":"swagger","RequestedScopes":["pyatnashki_api"],"GrantedScopes":["pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO4D45LA2H5:00000006","TimeStamp":"2019-07-09T14:28:20.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-09 17:28:20.170 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:28:20.182 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 17:28:20.182 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 17:28:20.183 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 17:28:20.183 +03:00 [DBG] Start authorize callback request
2019-07-09 17:28:20.183 +03:00 [DBG] User in authorize request: 88421113
2019-07-09 17:28:20.184 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:28:20.184 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:28:20.184 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:28:20.185 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"88421113","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI4OjExIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"57312b30d139472df0c420dad2bbb776","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjI4OjExIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:28:20.185 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 17:28:20.185 +03:00 [DBG] user_consent grant with value: swagger|88421113 not found in store.
2019-07-09 17:28:20.185 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 17:28:20.185 +03:00 [INF] User consented to scopes: ["pyatnashki_api"]
2019-07-09 17:28:20.185 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 88421113
2019-07-09 17:28:20.185 +03:00 [DBG] Creating Implicit Flow response.
2019-07-09 17:28:20.185 +03:00 [DBG] Getting claims for access token for client: swagger
2019-07-09 17:28:20.186 +03:00 [DBG] Getting claims for access token for subject: 88421113
2019-07-09 17:28:20.186 +03:00 [DBG] Get profile called for subject 88421113 from client Swagger Client with claim types [] via ClaimsProviderAccessToken
2019-07-09 17:28:20.186 +03:00 [DBG] Issued claims: []
2019-07-09 17:28:20.195 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":"88421113","Scopes":"pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"access_token","TokenValue":"****8pgA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2H5:00000007","TimeStamp":"2019-07-09T14:28:20.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-09 17:28:20.196 +03:00 [INF] Authorize endpoint response
{"SubjectId":"88421113","ClientId":"swagger","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI4OjExIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","Scope":"pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-09 17:28:20.196 +03:00 [DBG] Augmenting SignInContext
2019-07-09 17:28:20.197 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 17:29:03.741 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 17:29:03.743 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 17:29:03.744 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 17:29:03.744 +03:00 [DBG] Start authorize request
2019-07-09 17:29:03.744 +03:00 [DBG] No user present in authorize request
2019-07-09 17:29:03.744 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:03.745 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:03.745 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:03.745 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjAzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjAzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:29:03.746 +03:00 [INF] Showing login: User is not authenticated
2019-07-09 17:29:03.757 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:03.757 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:03.758 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:03.758 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:05.437 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-09 17:29:10.391 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-09 17:29:10.428 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO4D45LA2H5:0000000C","TimeStamp":"2019-07-09T14:29:10.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-09 17:29:10.434 +03:00 [DBG] Augmenting SignInContext
2019-07-09 17:29:10.434 +03:00 [DBG] Adding amr claim with value: external
2019-07-09 17:29:10.434 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 17:29:10.442 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-09 17:29:10.442 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:10.443 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:10.443 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:10.443 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:10.457 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 17:29:10.457 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 17:29:10.457 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 17:29:10.457 +03:00 [DBG] Start authorize callback request
2019-07-09 17:29:10.458 +03:00 [DBG] User in authorize request: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-09 17:29:10.458 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:10.458 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:10.458 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:10.458 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjAzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad5d03ec3394f07a07a62c94ee3ed501","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjAzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:29:10.458 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 17:29:10.459 +03:00 [DBG] user_consent grant with value: swagger|6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630 not found in store.
2019-07-09 17:29:10.459 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 17:29:10.459 +03:00 [INF] Showing consent: User has not yet consented
2019-07-09 17:29:10.473 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:10.473 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:10.474 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:10.474 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:14.284 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 17:29:14.286 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:14.286 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:14.286 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:14.287 +03:00 [INF] {"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ClientId":"swagger","RequestedScopes":["pyatnashki_api"],"GrantedScopes":["pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO4D45LA2H5:0000000F","TimeStamp":"2019-07-09T14:29:14.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-09 17:29:14.287 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:14.300 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 17:29:14.301 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 17:29:14.301 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 17:29:14.301 +03:00 [DBG] Start authorize callback request
2019-07-09 17:29:14.302 +03:00 [DBG] User in authorize request: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-09 17:29:14.302 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:14.302 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:14.302 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:14.303 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjAzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad5d03ec3394f07a07a62c94ee3ed501","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjAzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:29:14.303 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 17:29:14.303 +03:00 [DBG] user_consent grant with value: swagger|6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630 not found in store.
2019-07-09 17:29:14.303 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 17:29:14.304 +03:00 [INF] User consented to scopes: ["pyatnashki_api"]
2019-07-09 17:29:14.304 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-09 17:29:14.304 +03:00 [DBG] Creating Implicit Flow response.
2019-07-09 17:29:14.304 +03:00 [DBG] Getting claims for access token for client: swagger
2019-07-09 17:29:14.304 +03:00 [DBG] Getting claims for access token for subject: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-09 17:29:14.304 +03:00 [DBG] Get profile called for subject 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630 from client Swagger Client with claim types [] via ClaimsProviderAccessToken
2019-07-09 17:29:14.306 +03:00 [DBG] Issued claims: []
2019-07-09 17:29:14.315 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","Scopes":"pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"access_token","TokenValue":"****ECkQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2H5:00000010","TimeStamp":"2019-07-09T14:29:14.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-09 17:29:14.316 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ClientId":"swagger","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjAzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","Scope":"pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-09 17:29:14.318 +03:00 [DBG] Augmenting SignInContext
2019-07-09 17:29:14.319 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 17:29:43.217 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-09 17:29:43.217 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-09 17:29:43.218 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-09 17:29:43.218 +03:00 [DBG] Start authorize request
2019-07-09 17:29:43.219 +03:00 [DBG] No user present in authorize request
2019-07-09 17:29:43.220 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:43.220 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:43.221 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:43.221 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjQzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjQzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:29:43.222 +03:00 [INF] Showing login: User is not authenticated
2019-07-09 17:29:43.244 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:43.244 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:43.244 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:43.245 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:49.254 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 17:29:49.256 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:49.256 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:49.256 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:49.257 +03:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"818727","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO4D45LA2H5:00000013","TimeStamp":"2019-07-09T14:29:49.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-09 17:29:49.258 +03:00 [DBG] Augmenting SignInContext
2019-07-09 17:29:49.259 +03:00 [DBG] Adding idp claim with value: local
2019-07-09 17:29:49.259 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-09 17:29:49.260 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-09 17:29:49.260 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:49.273 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 17:29:49.274 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 17:29:49.274 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 17:29:49.274 +03:00 [DBG] Start authorize callback request
2019-07-09 17:29:49.274 +03:00 [DBG] User in authorize request: 818727
2019-07-09 17:29:49.274 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:49.275 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:49.275 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:49.275 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"818727","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjQzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9cf187a72fae7dcc32d92e9fed439d12","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjQzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:29:49.276 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 17:29:49.276 +03:00 [DBG] user_consent grant with value: swagger|818727 not found in store.
2019-07-09 17:29:49.276 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 17:29:49.276 +03:00 [INF] Showing consent: User has not yet consented
2019-07-09 17:29:49.292 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:49.292 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:49.293 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:49.293 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:51.347 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-09 17:29:51.350 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:51.351 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:51.351 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:51.352 +03:00 [INF] {"SubjectId":"818727","ClientId":"swagger","RequestedScopes":["pyatnashki_api"],"GrantedScopes":["pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO4D45LA2H5:00000016","TimeStamp":"2019-07-09T14:29:51.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-09 17:29:51.353 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:51.364 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-09 17:29:51.365 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-09 17:29:51.365 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-09 17:29:51.365 +03:00 [DBG] Start authorize callback request
2019-07-09 17:29:51.366 +03:00 [DBG] User in authorize request: 818727
2019-07-09 17:29:51.367 +03:00 [DBG] Start authorize request protocol validation
2019-07-09 17:29:51.367 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-09 17:29:51.367 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-09 17:29:51.367 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"818727","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjQzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"9cf187a72fae7dcc32d92e9fed439d12","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjQzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-09 17:29:51.368 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-09 17:29:51.368 +03:00 [DBG] user_consent grant with value: swagger|818727 not found in store.
2019-07-09 17:29:51.368 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-09 17:29:51.368 +03:00 [INF] User consented to scopes: ["pyatnashki_api"]
2019-07-09 17:29:51.368 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-09 17:29:51.368 +03:00 [DBG] Creating Implicit Flow response.
2019-07-09 17:29:51.368 +03:00 [DBG] Getting claims for access token for client: swagger
2019-07-09 17:29:51.368 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-09 17:29:51.368 +03:00 [DBG] Get profile called for subject 818727 from client Swagger Client with claim types [] via ClaimsProviderAccessToken
2019-07-09 17:29:51.370 +03:00 [DBG] Issued claims: []
2019-07-09 17:29:51.380 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":"818727","Scopes":"pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"access_token","TokenValue":"****0Bmg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2H5:00000017","TimeStamp":"2019-07-09T14:29:51.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-09 17:29:51.380 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"swagger","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","State":"VHVlIEp1bCAwOSAyMDE5IDE3OjI5OjQzIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","Scope":"pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-09 17:29:51.381 +03:00 [DBG] Augmenting SignInContext
2019-07-09 17:29:51.381 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 13:43:34.581 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.588 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.756 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.756 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.757 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.757 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.758 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.758 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.760 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.760 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.769 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.770 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.777 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 13:43:34.777 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:35.932 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:15:36.019 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:15:36.019 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:15:36.037 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:15:36.040 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:15:36.040 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:15:36.041 +03:00 [DBG] Start discovery request
2019-07-10 14:15:36.119 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.119 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.119 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:15:36.120 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:15:36.120 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:15:36.120 +03:00 [DBG] Start authorize request
2019-07-10 14:15:36.124 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.124 +03:00 [DBG] No user present in authorize request
2019-07-10 14:15:36.124 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:15:36.125 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:15:36.128 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:15:36.134 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"b0d0c7a06fd04d11b565c9b7183e8ecc","UiLocales":null,"Nonce":"41849712b58244dc906da1a0095f8ea6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"b0d0c7a06fd04d11b565c9b7183e8ecc","nonce":"41849712b58244dc906da1a0095f8ea6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:15:36.134 +03:00 [INF] Showing login: User is not authenticated
2019-07-10 14:15:36.153 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.153 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.163 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.163 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:15:36.164 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:15:36.165 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:15:36.165 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:15:36.264 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.264 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.265 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.265 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.265 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.265 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.266 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.268 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.372 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.373 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.901 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:15:36.905 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:16:06.140 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 14:16:06.141 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:16:06.141 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:16:06.187 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:16:06.188 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:06.188 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:06.189 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:06.212 +03:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"818727","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO4D45LA2HF:00000002","TimeStamp":"2019-07-10T11:16:06.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-10 14:16:06.228 +03:00 [DBG] Augmenting SignInContext
2019-07-10 14:16:06.229 +03:00 [DBG] Adding idp claim with value: local
2019-07-10 14:16:06.229 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-10 14:16:06.229 +03:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-10 14:16:06.254 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 14:16:06.254 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:06.279 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 14:16:06.280 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 14:16:06.280 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 14:16:06.287 +03:00 [DBG] Start authorize callback request
2019-07-10 14:16:06.355 +03:00 [DBG] User in authorize request: 818727
2019-07-10 14:16:06.355 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:06.356 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:06.356 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:06.364 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"b0d0c7a06fd04d11b565c9b7183e8ecc","UiLocales":null,"Nonce":"41849712b58244dc906da1a0095f8ea6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"af20d0ceaefbf88019b907036489a9c4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"b0d0c7a06fd04d11b565c9b7183e8ecc","nonce":"41849712b58244dc906da1a0095f8ea6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:16:06.373 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:16:06.373 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 14:16:06.373 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 14:16:06.373 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 14:16:06.416 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:06.416 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:06.431 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:06.431 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:21.254 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 14:16:21.265 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:21.266 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:21.267 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:21.267 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO4D45LA2HC:00000003","TimeStamp":"2019-07-10T11:16:21.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 14:16:21.268 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:21.277 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 14:16:21.278 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 14:16:21.278 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 14:16:21.278 +03:00 [DBG] Start authorize callback request
2019-07-10 14:16:21.281 +03:00 [DBG] User in authorize request: 818727
2019-07-10 14:16:21.281 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:21.281 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:21.282 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:21.282 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"b0d0c7a06fd04d11b565c9b7183e8ecc","UiLocales":null,"Nonce":"41849712b58244dc906da1a0095f8ea6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"af20d0ceaefbf88019b907036489a9c4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"b0d0c7a06fd04d11b565c9b7183e8ecc","nonce":"41849712b58244dc906da1a0095f8ea6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:16:21.282 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:16:21.282 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 14:16:21.282 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 14:16:21.286 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 14:16:21.286 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-10 14:16:21.286 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 14:16:21.286 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 14:16:21.286 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 14:16:21.286 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 14:16:21.286 +03:00 [DBG] Issued claims: []
2019-07-10 14:16:21.335 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 14:16:21.335 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 14:16:21.347 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****rfgw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****YZxg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2HF:00000003","TimeStamp":"2019-07-10T11:16:21.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 14:16:21.347 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/deck","State":"b0d0c7a06fd04d11b565c9b7183e8ecc","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 14:16:21.348 +03:00 [DBG] Augmenting SignInContext
2019-07-10 14:16:21.349 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 14:16:26.396 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:16:26.402 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:16:26.403 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:16:26.404 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:16:26.404 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:16:26.405 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:16:26.405 +03:00 [DBG] Start discovery request
2019-07-10 14:16:26.452 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:16:26.453 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:16:26.454 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:16:26.454 +03:00 [DBG] Start authorize request
2019-07-10 14:16:26.455 +03:00 [DBG] User in authorize request: 818727
2019-07-10 14:16:26.455 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:26.455 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:26.456 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:26.456 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"521dbc078a6d497c82f48e6af25ddd0d","UiLocales":null,"Nonce":"4870637a58b44a43a6f9482ac1227430","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"af20d0ceaefbf88019b907036489a9c4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"521dbc078a6d497c82f48e6af25ddd0d","nonce":"4870637a58b44a43a6f9482ac1227430"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:16:26.456 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:16:26.456 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 14:16:26.457 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 14:16:26.457 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 14:16:26.469 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:26.469 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:26.470 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:26.470 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:31.833 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 14:16:31.839 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:31.839 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:31.840 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:31.840 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO4D45LA2HC:00000004","TimeStamp":"2019-07-10T11:16:31.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 14:16:31.841 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:31.860 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 14:16:31.860 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 14:16:31.860 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 14:16:31.860 +03:00 [DBG] Start authorize callback request
2019-07-10 14:16:31.861 +03:00 [DBG] User in authorize request: 818727
2019-07-10 14:16:31.861 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:31.861 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:31.862 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:31.862 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"521dbc078a6d497c82f48e6af25ddd0d","UiLocales":null,"Nonce":"4870637a58b44a43a6f9482ac1227430","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"af20d0ceaefbf88019b907036489a9c4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"521dbc078a6d497c82f48e6af25ddd0d","nonce":"4870637a58b44a43a6f9482ac1227430"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:16:31.862 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:16:31.863 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 14:16:31.863 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 14:16:31.864 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 14:16:31.864 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-10 14:16:31.864 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 14:16:31.864 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 14:16:31.865 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 14:16:31.865 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 14:16:31.865 +03:00 [DBG] Issued claims: []
2019-07-10 14:16:31.874 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 14:16:31.875 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 14:16:31.885 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****9ySA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vYIA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2HF:00000004","TimeStamp":"2019-07-10T11:16:31.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 14:16:31.886 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/deck","State":"521dbc078a6d497c82f48e6af25ddd0d","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 14:16:46.348 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:16:46.348 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:16:46.350 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:16:46.350 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:16:46.351 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:16:46.351 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:16:46.351 +03:00 [DBG] Start discovery request
2019-07-10 14:16:46.395 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:16:46.396 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:16:46.397 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:16:46.397 +03:00 [DBG] Start authorize request
2019-07-10 14:16:46.397 +03:00 [DBG] User in authorize request: 818727
2019-07-10 14:16:46.397 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:46.397 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:46.399 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:46.399 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"a838c5f5e011453fa53f0b883bf4c1ed","UiLocales":null,"Nonce":"64f48e0edebd4c10a243cf3013a441b6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"af20d0ceaefbf88019b907036489a9c4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"a838c5f5e011453fa53f0b883bf4c1ed","nonce":"64f48e0edebd4c10a243cf3013a441b6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:16:46.399 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:16:46.400 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 14:16:46.400 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 14:16:46.400 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 14:16:46.413 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:46.413 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:46.414 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:46.414 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:53.441 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 14:16:53.445 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:53.445 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:53.445 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:53.447 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO4D45LA2HC:00000005","TimeStamp":"2019-07-10T11:16:53.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 14:16:53.448 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:53.466 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 14:16:53.466 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 14:16:53.466 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 14:16:53.466 +03:00 [DBG] Start authorize callback request
2019-07-10 14:16:53.471 +03:00 [DBG] User in authorize request: 818727
2019-07-10 14:16:53.471 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:53.471 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:53.472 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:53.472 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"a838c5f5e011453fa53f0b883bf4c1ed","UiLocales":null,"Nonce":"64f48e0edebd4c10a243cf3013a441b6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"af20d0ceaefbf88019b907036489a9c4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"a838c5f5e011453fa53f0b883bf4c1ed","nonce":"64f48e0edebd4c10a243cf3013a441b6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:16:53.472 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:16:53.472 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 14:16:53.473 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 14:16:53.473 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 14:16:53.473 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 14:16:53.473 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 818727
2019-07-10 14:16:53.516 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 14:16:53.516 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 14:16:53.516 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 14:16:53.516 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 14:16:53.516 +03:00 [DBG] Issued claims: []
2019-07-10 14:16:53.525 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 14:16:53.525 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 14:16:53.533 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****RR5A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****sQLQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2HF:00000005","TimeStamp":"2019-07-10T11:16:53.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 14:16:53.533 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/deck","State":"a838c5f5e011453fa53f0b883bf4c1ed","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 14:16:54.935 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:16:54.938 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:16:54.940 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:16:54.941 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:16:54.941 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:16:54.941 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:16:54.941 +03:00 [DBG] Start discovery request
2019-07-10 14:16:54.975 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:16:54.976 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:16:54.976 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:16:54.976 +03:00 [DBG] Start authorize request
2019-07-10 14:16:54.976 +03:00 [DBG] User in authorize request: 818727
2019-07-10 14:16:54.976 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:54.976 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:54.977 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:54.978 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"88574a0dc7694dce9c12d409a8d1be47","UiLocales":null,"Nonce":"36511ccff90d410f8ca79cc2d0af7dba","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"af20d0ceaefbf88019b907036489a9c4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"88574a0dc7694dce9c12d409a8d1be47","nonce":"36511ccff90d410f8ca79cc2d0af7dba"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:16:54.978 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:16:54.993 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-10 14:16:54.995 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 14:16:54.995 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 14:16:54.995 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 14:16:54.996 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 14:16:54.996 +03:00 [DBG] Issued claims: []
2019-07-10 14:16:55.004 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 14:16:55.005 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 14:16:55.012 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****KxKQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****JzJA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2HB:00000008","TimeStamp":"2019-07-10T11:16:55.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 14:16:55.012 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/deck","State":"88574a0dc7694dce9c12d409a8d1be47","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 14:16:56.417 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:16:56.419 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:16:56.420 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:16:56.423 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:16:56.423 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:16:56.423 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:16:56.423 +03:00 [DBG] Start discovery request
2019-07-10 14:16:56.456 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:16:56.456 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:16:56.457 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:16:56.457 +03:00 [DBG] Start authorize request
2019-07-10 14:16:56.458 +03:00 [DBG] User in authorize request: 818727
2019-07-10 14:16:56.458 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:16:56.458 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:16:56.459 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:16:56.459 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"bdd72bcd8d2f47ce871b65e4d247278c","UiLocales":null,"Nonce":"72ef5906e45440f4801bb44fa755524c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"af20d0ceaefbf88019b907036489a9c4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"bdd72bcd8d2f47ce871b65e4d247278c","nonce":"72ef5906e45440f4801bb44fa755524c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:16:56.460 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:16:56.473 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-10 14:16:56.473 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 14:16:56.473 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 14:16:56.473 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 14:16:56.474 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 14:16:56.474 +03:00 [DBG] Issued claims: []
2019-07-10 14:16:56.483 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 14:16:56.483 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 14:16:56.493 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****gMbw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****UnhQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2HC:00000006","TimeStamp":"2019-07-10T11:16:56.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 14:16:56.493 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/deck","State":"bdd72bcd8d2f47ce871b65e4d247278c","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 14:23:32.304 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:23:32.304 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:23:32.304 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:23:32.305 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:23:32.305 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:23:32.305 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:23:32.305 +03:00 [DBG] Start discovery request
2019-07-10 14:23:32.344 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:23:32.344 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:23:32.346 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:23:32.346 +03:00 [DBG] Start authorize request
2019-07-10 14:23:32.346 +03:00 [DBG] No user present in authorize request
2019-07-10 14:23:32.346 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:23:32.346 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:23:32.347 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:23:32.347 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"8c949663d97f4833adebc95bc94d076c","UiLocales":null,"Nonce":"7b31acee0efd4e9fb21f91ef525005f0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"8c949663d97f4833adebc95bc94d076c","nonce":"7b31acee0efd4e9fb21f91ef525005f0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:23:32.347 +03:00 [INF] Showing login: User is not authenticated
2019-07-10 14:23:32.360 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:23:32.360 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:23:32.361 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:23:32.361 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:23:51.448 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-10 14:23:57.018 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-10 14:23:57.032 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO4D45LA2HG:00000006","TimeStamp":"2019-07-10T11:23:57.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-10 14:23:57.032 +03:00 [DBG] Augmenting SignInContext
2019-07-10 14:23:57.032 +03:00 [DBG] Adding amr claim with value: external
2019-07-10 14:23:57.033 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 14:23:57.034 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-10 14:23:57.035 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:23:57.035 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:23:57.036 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:23:57.036 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:23:57.065 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 14:23:57.065 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 14:23:57.065 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 14:23:57.065 +03:00 [DBG] Start authorize callback request
2019-07-10 14:23:57.066 +03:00 [DBG] User in authorize request: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-10 14:23:57.066 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:23:57.066 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:23:57.066 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:23:57.067 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"8c949663d97f4833adebc95bc94d076c","UiLocales":null,"Nonce":"7b31acee0efd4e9fb21f91ef525005f0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"450d2b651eaa1a0f1cec6dc77e2d78d3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"8c949663d97f4833adebc95bc94d076c","nonce":"7b31acee0efd4e9fb21f91ef525005f0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:23:57.067 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:23:57.067 +03:00 [DBG] user_consent grant with value: spa|6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630 not found in store.
2019-07-10 14:23:57.067 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 14:23:57.067 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 14:23:57.080 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:23:57.081 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:23:57.081 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:23:57.081 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:24:07.604 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 14:24:07.606 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:24:07.607 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:24:07.607 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:24:07.607 +03:00 [INF] {"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO4D45LA2HG:00000009","TimeStamp":"2019-07-10T11:24:07.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 14:24:07.608 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:24:07.618 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 14:24:07.619 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 14:24:07.619 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 14:24:07.619 +03:00 [DBG] Start authorize callback request
2019-07-10 14:24:07.620 +03:00 [DBG] User in authorize request: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-10 14:24:07.620 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:24:07.621 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:24:07.622 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:24:07.622 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"8c949663d97f4833adebc95bc94d076c","UiLocales":null,"Nonce":"7b31acee0efd4e9fb21f91ef525005f0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"450d2b651eaa1a0f1cec6dc77e2d78d3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"8c949663d97f4833adebc95bc94d076c","nonce":"7b31acee0efd4e9fb21f91ef525005f0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:24:07.623 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:24:07.623 +03:00 [DBG] user_consent grant with value: spa|6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630 not found in store.
2019-07-10 14:24:07.623 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 14:24:07.623 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 14:24:07.623 +03:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 14:24:07.623 +03:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-10 14:24:07.632 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 14:24:07.633 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 14:24:07.633 +03:00 [DBG] Getting claims for access token for subject: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-10 14:24:07.633 +03:00 [DBG] Get profile called for subject 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 14:24:07.633 +03:00 [DBG] Issued claims: []
2019-07-10 14:24:07.642 +03:00 [DBG] Getting claims for identity token for subject: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630 and client: spa
2019-07-10 14:24:07.642 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 14:24:07.651 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","Endpoint":"Authorize","SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****bQ8A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****KRvA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2HG:0000000A","TimeStamp":"2019-07-10T11:24:07.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 14:24:07.651 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ClientId":"spa","RedirectUri":"http://localhost:4200/deck","State":"8c949663d97f4833adebc95bc94d076c","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 14:24:07.652 +03:00 [DBG] Augmenting SignInContext
2019-07-10 14:24:07.652 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 14:24:56.486 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:24:56.488 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:24:56.488 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:24:56.488 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:24:56.488 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:24:56.489 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:24:56.489 +03:00 [DBG] Start discovery request
2019-07-10 14:24:56.560 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:24:56.561 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:24:56.561 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:24:56.561 +03:00 [DBG] Start authorize request
2019-07-10 14:24:56.561 +03:00 [DBG] User in authorize request: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-10 14:24:56.561 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:24:56.562 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:24:56.563 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:24:56.563 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"67e60d146ece46a8bde600c960a182de","UiLocales":null,"Nonce":"802ecb8b5db44dd09f4fa34bb7dfb416","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"450d2b651eaa1a0f1cec6dc77e2d78d3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"67e60d146ece46a8bde600c960a182de","nonce":"802ecb8b5db44dd09f4fa34bb7dfb416"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:24:56.563 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:24:56.577 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-10 14:24:56.577 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 14:24:56.577 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 14:24:56.577 +03:00 [DBG] Getting claims for access token for subject: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-10 14:24:56.577 +03:00 [DBG] Get profile called for subject 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 14:24:56.577 +03:00 [DBG] Issued claims: []
2019-07-10 14:24:56.587 +03:00 [DBG] Getting claims for identity token for subject: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630 and client: spa
2019-07-10 14:24:56.587 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 14:24:56.596 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","Endpoint":"Authorize","SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****xAPg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****lSig","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2HG:0000000C","TimeStamp":"2019-07-10T11:24:56.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 14:24:56.597 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ClientId":"spa","RedirectUri":"http://localhost:4200/deck","State":"67e60d146ece46a8bde600c960a182de","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 14:26:51.206 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:26:51.206 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:26:51.207 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:26:51.207 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:26:51.207 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:26:51.208 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:26:51.208 +03:00 [DBG] Start discovery request
2019-07-10 14:26:51.267 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:26:51.267 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:26:51.267 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:26:51.267 +03:00 [DBG] Start authorize request
2019-07-10 14:26:51.267 +03:00 [DBG] User in authorize request: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-10 14:26:51.267 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:26:51.268 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:26:51.268 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:26:51.269 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"f23fe325779c43249b4c961a5a20e127","UiLocales":null,"Nonce":"2f5ac029e3d0475cbf0e6a9825c36df9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"450d2b651eaa1a0f1cec6dc77e2d78d3","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/deck","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"f23fe325779c43249b4c961a5a20e127","nonce":"2f5ac029e3d0475cbf0e6a9825c36df9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:26:51.269 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:26:51.281 +03:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-07-10 14:26:51.281 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 14:26:51.281 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 14:26:51.281 +03:00 [DBG] Getting claims for access token for subject: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-10 14:26:51.282 +03:00 [DBG] Get profile called for subject 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 14:26:51.282 +03:00 [DBG] Issued claims: []
2019-07-10 14:26:51.294 +03:00 [DBG] Getting claims for identity token for subject: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630 and client: spa
2019-07-10 14:26:51.294 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 14:26:51.305 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/deck","Endpoint":"Authorize","SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ghZQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Ccgw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO4D45LA2HH:00000002","TimeStamp":"2019-07-10T11:26:51.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 14:26:51.307 +03:00 [INF] Authorize endpoint response
{"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ClientId":"spa","RedirectUri":"http://localhost:4200/deck","State":"f23fe325779c43249b4c961a5a20e127","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 14:27:19.081 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:27:19.083 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:27:19.083 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:27:19.084 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:27:19.084 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:27:19.084 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:27:19.084 +03:00 [DBG] Start discovery request
2019-07-10 14:27:19.142 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:27:19.142 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:27:19.143 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:27:19.143 +03:00 [DBG] Start authorize request
2019-07-10 14:27:19.143 +03:00 [DBG] User in authorize request: 6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630
2019-07-10 14:27:19.144 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:27:19.144 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:27:19.147 +03:00 [ERR] Invalid redirect_uri: http://localhost:4200/login
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"ac83cef8f2174f73ade22ee6512bdafc","nonce":"b581c4cf7121417785aa1a3341217771"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:27:19.156 +03:00 [ERR] Request validation failed
2019-07-10 14:27:19.157 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"ac83cef8f2174f73ade22ee6512bdafc","nonce":"b581c4cf7121417785aa1a3341217771"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:27:19.161 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"6b030722ab080e62c489479069a0ce272787983925400aeff3779cab7b5ff630","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLO4D45LA2HH:00000004","TimeStamp":"2019-07-10T11:27:19.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-10 14:28:44.506 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:28:44.506 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:28:44.506 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:28:44.507 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:28:44.507 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:28:44.507 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:28:44.507 +03:00 [DBG] Start discovery request
2019-07-10 14:28:44.551 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:28:44.552 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:28:44.552 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:28:44.552 +03:00 [DBG] Start authorize request
2019-07-10 14:28:44.552 +03:00 [DBG] No user present in authorize request
2019-07-10 14:28:44.552 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:28:44.552 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:28:44.553 +03:00 [ERR] Invalid redirect_uri: http://localhost:4200/login
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"a83f6da0cdb54cb08cac658010bd6ebc","nonce":"fbcb482db1074d12854cddfb70d13f1b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:28:44.553 +03:00 [ERR] Request validation failed
2019-07-10 14:28:44.553 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"a83f6da0cdb54cb08cac658010bd6ebc","nonce":"fbcb482db1074d12854cddfb70d13f1b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:28:44.554 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLO4D45LA2HH:00000008","TimeStamp":"2019-07-10T11:28:44.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-10 14:30:54.690 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:30:54.690 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:30:54.691 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:30:54.691 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:30:54.691 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:30:54.691 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:30:54.691 +03:00 [DBG] Start discovery request
2019-07-10 14:30:54.744 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:30:54.744 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:30:54.745 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:30:54.745 +03:00 [DBG] Start authorize request
2019-07-10 14:30:54.745 +03:00 [DBG] No user present in authorize request
2019-07-10 14:30:54.745 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:30:54.745 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:30:54.746 +03:00 [ERR] Invalid redirect_uri: http://localhost:4200/login
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"6f3b2426be814d1881fecf32e0bc670a","nonce":"48195abefad94550ad7990c2aef1ce3c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:30:54.746 +03:00 [ERR] Request validation failed
2019-07-10 14:30:54.746 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"6f3b2426be814d1881fecf32e0bc670a","nonce":"48195abefad94550ad7990c2aef1ce3c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:30:54.749 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLO4D45LA2HI:00000003","TimeStamp":"2019-07-10T11:30:54.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-10 14:32:16.109 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:32:16.110 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:32:16.110 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:32:16.111 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:32:16.111 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:32:16.111 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:32:16.111 +03:00 [DBG] Start discovery request
2019-07-10 14:32:16.156 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:32:16.156 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:32:16.156 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:32:16.156 +03:00 [DBG] Start authorize request
2019-07-10 14:32:16.156 +03:00 [DBG] No user present in authorize request
2019-07-10 14:32:16.156 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:32:16.157 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:32:16.157 +03:00 [ERR] Invalid redirect_uri: http://localhost:4200/login
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"4f3c8ea4ca0b4967b732fcd31f068785","nonce":"36afc9fd9e704bd88d149c5ba4937d6d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:32:16.157 +03:00 [ERR] Request validation failed
2019-07-10 14:32:16.157 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/deck"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"4f3c8ea4ca0b4967b732fcd31f068785","nonce":"36afc9fd9e704bd88d149c5ba4937d6d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:32:16.158 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLO4D45LA2HJ:00000004","TimeStamp":"2019-07-10T11:32:16.0000000Z","ProcessId":1252,"LocalIpAddress":"127.0.0.1:29299","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-10 14:34:36.742 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-10 14:34:36.796 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-10 14:34:36.802 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-10 14:34:36.803 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-10 14:34:36.803 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-10 14:34:36.803 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-10 14:34:36.803 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-10 14:34:37.427 +03:00 [DBG] Login Url: /Account/Login
2019-07-10 14:34:37.430 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-10 14:34:37.430 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-10 14:34:37.430 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-10 14:34:37.430 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-10 14:34:37.430 +03:00 [DBG] Error Url: /home/error
2019-07-10 14:34:37.430 +03:00 [DBG] Error Id Parameter: errorId
2019-07-10 14:34:44.551 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:34:44.558 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:34:44.558 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:34:44.562 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:34:44.574 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:34:44.574 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:34:44.579 +03:00 [DBG] Start discovery request
2019-07-10 14:34:44.656 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:34:44.662 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:34:44.662 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:34:44.670 +03:00 [DBG] Start authorize request
2019-07-10 14:34:44.693 +03:00 [DBG] No user present in authorize request
2019-07-10 14:34:44.701 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:34:44.731 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:44.789 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:34:44.808 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"ab4ea128a47742ebb7eebf42055ae43f","UiLocales":null,"Nonce":"3bd155b4135a4e429ae8e86f5c6954e9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"ab4ea128a47742ebb7eebf42055ae43f","nonce":"3bd155b4135a4e429ae8e86f5c6954e9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:34:44.844 +03:00 [INF] Showing login: User is not authenticated
2019-07-10 14:34:44.925 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:34:44.926 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:44.926 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:34:44.930 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:49.817 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 14:34:49.899 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:34:49.899 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:49.900 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:34:49.921 +03:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"818727","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO55ABC09EQ:00000005","TimeStamp":"2019-07-10T11:34:49.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-10 14:34:49.942 +03:00 [DBG] Augmenting SignInContext
2019-07-10 14:34:49.946 +03:00 [DBG] Adding idp claim with value: local
2019-07-10 14:34:49.946 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-10 14:34:49.961 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 14:34:49.963 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:49.972 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 14:34:49.973 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 14:34:49.973 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 14:34:49.983 +03:00 [DBG] Start authorize callback request
2019-07-10 14:34:49.991 +03:00 [DBG] User in authorize request: 818727
2019-07-10 14:34:49.991 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:34:49.991 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:49.992 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:34:49.993 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"ab4ea128a47742ebb7eebf42055ae43f","UiLocales":null,"Nonce":"3bd155b4135a4e429ae8e86f5c6954e9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"ab4ea128a47742ebb7eebf42055ae43f","nonce":"3bd155b4135a4e429ae8e86f5c6954e9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:34:49.995 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:34:50.023 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 14:34:50.024 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 14:34:50.024 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 14:34:50.058 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:34:50.058 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:50.058 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:34:50.059 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:52.644 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 14:34:52.670 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:34:52.670 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:52.670 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:34:52.673 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO55ABC09EQ:00000008","TimeStamp":"2019-07-10T11:34:52.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 14:34:52.696 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:52.706 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 14:34:52.707 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 14:34:52.707 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 14:34:52.707 +03:00 [DBG] Start authorize callback request
2019-07-10 14:34:52.714 +03:00 [DBG] User in authorize request: 818727
2019-07-10 14:34:52.714 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:34:52.715 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:52.716 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:34:52.716 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"ab4ea128a47742ebb7eebf42055ae43f","UiLocales":null,"Nonce":"3bd155b4135a4e429ae8e86f5c6954e9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"ab4ea128a47742ebb7eebf42055ae43f","nonce":"3bd155b4135a4e429ae8e86f5c6954e9"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:34:52.716 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:34:52.717 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 14:34:52.717 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 14:34:52.731 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 14:34:52.738 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-10 14:34:52.755 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 14:34:52.774 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 14:34:52.775 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 14:34:52.782 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 14:34:52.783 +03:00 [DBG] Issued claims: []
2019-07-10 14:34:52.915 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 14:34:52.915 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 14:34:52.932 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Pt2Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****jvng","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO55ABC09EQ:00000009","TimeStamp":"2019-07-10T11:34:52.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 14:34:52.935 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/login","State":"ab4ea128a47742ebb7eebf42055ae43f","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 14:34:52.961 +03:00 [DBG] Augmenting SignInContext
2019-07-10 14:34:52.962 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 14:34:53.833 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 14:34:53.833 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 14:34:53.834 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 14:34:53.834 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 14:34:53.838 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 14:34:53.848 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 14:34:53.849 +03:00 [DBG] Start discovery request
2019-07-10 14:34:53.895 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 14:34:53.895 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 14:34:53.896 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 14:34:53.896 +03:00 [DBG] Start authorize request
2019-07-10 14:34:53.896 +03:00 [DBG] User in authorize request: 818727
2019-07-10 14:34:53.896 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:34:53.896 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:53.898 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:34:53.898 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"2546f0ade0ef4f3fb4de3e5b348e5dce","UiLocales":null,"Nonce":"214aaede754d40fe8492c539c9cd09cb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"2546f0ade0ef4f3fb4de3e5b348e5dce","nonce":"214aaede754d40fe8492c539c9cd09cb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 14:34:53.898 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 14:34:53.898 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 14:34:53.898 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 14:34:53.899 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 14:34:53.915 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 14:34:53.916 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 14:34:53.916 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 14:34:53.916 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:10:34.302 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 15:10:34.307 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 15:10:34.308 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 15:10:34.309 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 15:10:34.309 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 15:10:34.310 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 15:10:34.310 +03:00 [DBG] Start discovery request
2019-07-10 15:10:34.355 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 15:10:34.355 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 15:10:34.355 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 15:10:34.355 +03:00 [DBG] Start authorize request
2019-07-10 15:10:34.356 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:10:34.356 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:10:34.356 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:10:34.357 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:10:34.358 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"4206a4648b174b33aa7685309ac149c1","UiLocales":null,"Nonce":"90da7c16eecc4b05bd85f5773ad6255e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"4206a4648b174b33aa7685309ac149c1","nonce":"90da7c16eecc4b05bd85f5773ad6255e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:10:34.358 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:10:34.359 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:10:34.359 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:10:34.359 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 15:10:34.374 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:10:34.375 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:10:34.375 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:10:34.375 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:10:37.780 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 15:10:37.784 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:10:37.784 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:10:37.785 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:10:37.786 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO55ABC09ER:00000004","TimeStamp":"2019-07-10T12:10:37.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 15:10:37.786 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:10:37.797 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 15:10:37.798 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 15:10:37.799 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 15:10:37.799 +03:00 [DBG] Start authorize callback request
2019-07-10 15:10:37.800 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:10:37.800 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:10:37.800 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:10:37.800 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:10:37.801 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"4206a4648b174b33aa7685309ac149c1","UiLocales":null,"Nonce":"90da7c16eecc4b05bd85f5773ad6255e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"4206a4648b174b33aa7685309ac149c1","nonce":"90da7c16eecc4b05bd85f5773ad6255e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:10:37.801 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:10:37.801 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:10:37.801 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:10:37.801 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 15:10:37.801 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-10 15:10:37.802 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 15:10:37.802 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 15:10:37.802 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 15:10:37.804 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 15:10:37.804 +03:00 [DBG] Issued claims: []
2019-07-10 15:10:37.813 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 15:10:37.813 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 15:10:37.821 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****69-g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****KUMg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO55ABC09ER:00000005","TimeStamp":"2019-07-10T12:10:37.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 15:10:37.822 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/login","State":"4206a4648b174b33aa7685309ac149c1","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 15:10:38.329 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 15:10:38.331 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 15:10:38.331 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 15:10:38.332 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 15:10:38.332 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 15:10:38.332 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 15:10:38.332 +03:00 [DBG] Start discovery request
2019-07-10 15:10:38.395 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 15:10:38.396 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 15:10:38.396 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 15:10:38.397 +03:00 [DBG] Start authorize request
2019-07-10 15:10:38.397 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:10:38.397 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:10:38.398 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:10:38.398 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:10:38.398 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"49a023a0eb3249989672c428349806ad","UiLocales":null,"Nonce":"e81f68c11cc240b488807b6197165ea0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"49a023a0eb3249989672c428349806ad","nonce":"e81f68c11cc240b488807b6197165ea0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:10:38.398 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:10:38.398 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:10:38.399 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:10:38.399 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 15:10:38.411 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:10:38.411 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:10:38.412 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:10:38.412 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:13:01.776 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 15:13:01.778 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 15:13:01.778 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 15:13:01.778 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 15:13:01.779 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 15:13:01.779 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 15:13:01.779 +03:00 [DBG] Start discovery request
2019-07-10 15:13:01.851 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 15:13:01.851 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 15:13:01.851 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 15:13:01.852 +03:00 [DBG] Start authorize request
2019-07-10 15:13:01.853 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:13:01.853 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:13:01.853 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:13:01.854 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:13:01.854 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"a6d4add5c69e483c83aac7107cbea862","UiLocales":null,"Nonce":"06de17799fe546d18124d631508ad080","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"a6d4add5c69e483c83aac7107cbea862","nonce":"06de17799fe546d18124d631508ad080"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:13:01.854 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:13:01.854 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:13:01.855 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:13:01.855 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 15:13:01.886 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:13:01.886 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:13:01.887 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:13:01.887 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:13:06.717 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 15:13:06.719 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:13:06.720 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:13:06.720 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:13:06.720 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO55ABC09F0:00000002","TimeStamp":"2019-07-10T12:13:06.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 15:13:06.721 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:13:06.735 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 15:13:06.736 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 15:13:06.736 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 15:13:06.736 +03:00 [DBG] Start authorize callback request
2019-07-10 15:13:06.737 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:13:06.737 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:13:06.737 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:13:06.737 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:13:06.738 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"a6d4add5c69e483c83aac7107cbea862","UiLocales":null,"Nonce":"06de17799fe546d18124d631508ad080","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"a6d4add5c69e483c83aac7107cbea862","nonce":"06de17799fe546d18124d631508ad080"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:13:06.738 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:13:06.738 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:13:06.738 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:13:06.738 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 15:13:06.738 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-10 15:13:06.738 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 15:13:06.739 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 15:13:06.739 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 15:13:06.739 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 15:13:06.739 +03:00 [DBG] Issued claims: []
2019-07-10 15:13:06.749 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 15:13:06.749 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 15:13:06.757 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****YWXQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****GEmg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO55ABC09EV:00000002","TimeStamp":"2019-07-10T12:13:06.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 15:13:06.758 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/login","State":"a6d4add5c69e483c83aac7107cbea862","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 15:18:01.615 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 15:18:01.615 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 15:18:01.616 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 15:18:01.616 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 15:18:01.617 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 15:18:01.618 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 15:18:01.618 +03:00 [DBG] Start discovery request
2019-07-10 15:18:01.670 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 15:18:01.670 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 15:18:01.670 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 15:18:01.671 +03:00 [DBG] Start authorize request
2019-07-10 15:18:01.671 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:18:01.672 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:18:01.672 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:18:01.672 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:18:01.672 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"ef19ed8580c84341b552e7b462f63179","UiLocales":null,"Nonce":"ea1e2b6b04684b1eade2e6dc6a3702b8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"ef19ed8580c84341b552e7b462f63179","nonce":"ea1e2b6b04684b1eade2e6dc6a3702b8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:18:01.673 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:18:01.673 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:18:01.673 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:18:01.673 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 15:18:01.686 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:18:01.686 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:18:01.687 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:18:01.687 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:18:03.787 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 15:18:03.790 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:18:03.791 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:18:03.791 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:18:03.791 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO55ABC09F1:00000004","TimeStamp":"2019-07-10T12:18:03.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 15:18:03.792 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:18:03.802 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 15:18:03.803 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 15:18:03.805 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 15:18:03.805 +03:00 [DBG] Start authorize callback request
2019-07-10 15:18:03.806 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:18:03.807 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:18:03.807 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:18:03.808 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:18:03.808 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"ef19ed8580c84341b552e7b462f63179","UiLocales":null,"Nonce":"ea1e2b6b04684b1eade2e6dc6a3702b8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"ef19ed8580c84341b552e7b462f63179","nonce":"ea1e2b6b04684b1eade2e6dc6a3702b8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:18:03.808 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:18:03.808 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:18:03.808 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:18:03.808 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 15:18:03.809 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-10 15:18:03.809 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 15:18:03.809 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 15:18:03.809 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 15:18:03.809 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 15:18:03.809 +03:00 [DBG] Issued claims: []
2019-07-10 15:18:03.818 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 15:18:03.818 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 15:18:03.826 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****kq0A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Frbg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO55ABC09F1:00000005","TimeStamp":"2019-07-10T12:18:03.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 15:18:03.827 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/login","State":"ef19ed8580c84341b552e7b462f63179","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 15:18:04.388 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 15:18:04.389 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 15:18:04.389 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 15:18:04.391 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 15:18:04.392 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 15:18:04.392 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 15:18:04.392 +03:00 [DBG] Start discovery request
2019-07-10 15:18:04.453 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 15:18:04.453 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 15:18:04.453 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 15:18:04.454 +03:00 [DBG] Start authorize request
2019-07-10 15:18:04.454 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:18:04.455 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:18:04.455 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:18:04.455 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:18:04.456 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"4af54eae85c948b185bc390aa48e1c1f","UiLocales":null,"Nonce":"387075f3c41049bf872ef5ff0d249c3f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"4af54eae85c948b185bc390aa48e1c1f","nonce":"387075f3c41049bf872ef5ff0d249c3f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:18:04.456 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:18:04.456 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:18:04.456 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:18:04.456 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 15:18:04.480 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:18:04.480 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:18:04.481 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:18:04.481 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:09.504 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 15:26:09.504 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 15:26:09.504 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 15:26:09.505 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 15:26:09.505 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 15:26:09.505 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 15:26:09.505 +03:00 [DBG] Start discovery request
2019-07-10 15:26:09.549 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 15:26:09.550 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 15:26:09.552 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 15:26:09.552 +03:00 [DBG] Start authorize request
2019-07-10 15:26:09.552 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:26:09.553 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:26:09.553 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:09.553 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:26:09.554 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"0748a2385dc8497d9f1c941e52151588","UiLocales":null,"Nonce":"ed06862e415c4cc1a23498974a14589a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"0748a2385dc8497d9f1c941e52151588","nonce":"ed06862e415c4cc1a23498974a14589a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:26:09.554 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:26:09.554 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:26:09.555 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:26:09.555 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 15:26:09.569 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:26:09.570 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:09.570 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:26:09.570 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:14.575 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 15:26:14.578 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:26:14.578 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:14.578 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:26:14.579 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO55ABC09F2:00000004","TimeStamp":"2019-07-10T12:26:14.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 15:26:14.579 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:14.591 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 15:26:14.591 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 15:26:14.592 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 15:26:14.592 +03:00 [DBG] Start authorize callback request
2019-07-10 15:26:14.592 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:26:14.592 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:26:14.592 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:14.593 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:26:14.593 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"0748a2385dc8497d9f1c941e52151588","UiLocales":null,"Nonce":"ed06862e415c4cc1a23498974a14589a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"0748a2385dc8497d9f1c941e52151588","nonce":"ed06862e415c4cc1a23498974a14589a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:26:14.593 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:26:14.593 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:26:14.593 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:26:14.594 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 15:26:14.594 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-10 15:26:14.594 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 15:26:14.594 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 15:26:14.594 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 15:26:14.594 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 15:26:14.594 +03:00 [DBG] Issued claims: []
2019-07-10 15:26:14.603 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 15:26:14.603 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 15:26:14.612 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****dR3g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****dCmg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO55ABC09F2:00000005","TimeStamp":"2019-07-10T12:26:14.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 15:26:14.612 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/login","State":"0748a2385dc8497d9f1c941e52151588","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 15:26:15.560 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 15:26:15.560 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 15:26:15.560 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 15:26:15.562 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 15:26:15.562 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 15:26:15.562 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 15:26:15.562 +03:00 [DBG] Start discovery request
2019-07-10 15:26:15.621 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 15:26:15.622 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 15:26:15.622 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 15:26:15.622 +03:00 [DBG] Start authorize request
2019-07-10 15:26:15.622 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:26:15.622 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:26:15.623 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:15.623 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:26:15.623 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"bbbeb35123e44453b904db19eb8e3db8","UiLocales":null,"Nonce":"01778cf3d1c6440788dafefc81096e7d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"bbbeb35123e44453b904db19eb8e3db8","nonce":"01778cf3d1c6440788dafefc81096e7d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:26:15.623 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:26:15.624 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:26:15.624 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:26:15.624 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 15:26:15.651 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:26:15.651 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:15.652 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:26:15.652 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:46.887 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 15:26:46.889 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:26:46.889 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:46.890 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:26:46.890 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO55ABC09F2:0000000A","TimeStamp":"2019-07-10T12:26:46.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 15:26:46.892 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:46.909 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 15:26:46.909 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 15:26:46.909 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 15:26:46.910 +03:00 [DBG] Start authorize callback request
2019-07-10 15:26:46.910 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:26:46.910 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:26:46.911 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:26:46.911 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:26:46.911 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"bbbeb35123e44453b904db19eb8e3db8","UiLocales":null,"Nonce":"01778cf3d1c6440788dafefc81096e7d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"bbbeb35123e44453b904db19eb8e3db8","nonce":"01778cf3d1c6440788dafefc81096e7d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:26:46.911 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:26:46.911 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:26:46.911 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:26:46.912 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 15:26:46.912 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-10 15:26:46.912 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 15:26:46.912 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 15:26:46.912 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 15:26:46.912 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 15:26:46.912 +03:00 [DBG] Issued claims: []
2019-07-10 15:26:46.921 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 15:26:46.921 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 15:26:46.930 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****-FQA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vw7Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO55ABC09F2:0000000B","TimeStamp":"2019-07-10T12:26:46.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 15:26:46.931 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/login","State":"bbbeb35123e44453b904db19eb8e3db8","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 15:27:09.721 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 15:27:09.722 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 15:27:09.723 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 15:27:09.724 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 15:27:09.724 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 15:27:09.724 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 15:27:09.724 +03:00 [DBG] Start discovery request
2019-07-10 15:27:09.801 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 15:27:09.802 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 15:27:09.802 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 15:27:09.803 +03:00 [DBG] Start authorize request
2019-07-10 15:27:09.803 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:27:09.804 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:27:09.804 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:27:09.804 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:27:09.808 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"04522104e6a540c7a39cab61c10465c0","UiLocales":null,"Nonce":"b4b5728f4af0442e8f378ca83b908374","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"04522104e6a540c7a39cab61c10465c0","nonce":"b4b5728f4af0442e8f378ca83b908374"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:27:09.809 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:27:09.809 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:27:09.809 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:27:09.809 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 15:27:09.836 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:27:09.836 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:27:09.837 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:27:09.837 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:27:13.410 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 15:27:13.416 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:27:13.417 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:27:13.418 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:27:13.419 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO55ABC09F3:00000002","TimeStamp":"2019-07-10T12:27:13.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 15:27:13.420 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:27:13.436 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 15:27:13.436 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 15:27:13.436 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 15:27:13.437 +03:00 [DBG] Start authorize callback request
2019-07-10 15:27:13.437 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:27:13.437 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:27:13.437 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:27:13.438 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:27:13.438 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"04522104e6a540c7a39cab61c10465c0","UiLocales":null,"Nonce":"b4b5728f4af0442e8f378ca83b908374","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"04522104e6a540c7a39cab61c10465c0","nonce":"b4b5728f4af0442e8f378ca83b908374"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:27:13.438 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:27:13.439 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:27:13.439 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:27:13.439 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 15:27:13.439 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-10 15:27:13.439 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 15:27:13.439 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 15:27:13.439 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 15:27:13.440 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 15:27:13.440 +03:00 [DBG] Issued claims: []
2019-07-10 15:27:13.449 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 15:27:13.449 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 15:27:13.458 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****L2ug","$type":"Token"},{"TokenType":"access_token","TokenValue":"****bOpA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO55ABC09F2:00000010","TimeStamp":"2019-07-10T12:27:13.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 15:27:13.458 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/login","State":"04522104e6a540c7a39cab61c10465c0","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 15:27:44.132 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 15:27:44.133 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 15:27:44.133 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 15:27:44.134 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 15:27:44.135 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 15:27:44.135 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 15:27:44.135 +03:00 [DBG] Start discovery request
2019-07-10 15:27:44.214 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 15:27:44.215 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 15:27:44.215 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 15:27:44.215 +03:00 [DBG] Start authorize request
2019-07-10 15:27:44.215 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:27:44.216 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:27:44.216 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:27:44.216 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:27:44.217 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"1a0b5727ed0145b1a46ee112309918e9","UiLocales":null,"Nonce":"0f0261650c224946a636055df0af41b8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"1a0b5727ed0145b1a46ee112309918e9","nonce":"0f0261650c224946a636055df0af41b8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:27:44.217 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:27:44.217 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:27:44.217 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:27:44.217 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 15:27:44.264 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:27:44.264 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:27:44.265 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:27:44.265 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:27:47.390 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 15:27:47.393 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:27:47.393 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:27:47.394 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:27:47.394 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO55ABC09F4:00000005","TimeStamp":"2019-07-10T12:27:47.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 15:27:47.395 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:27:47.409 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 15:27:47.409 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 15:27:47.409 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 15:27:47.409 +03:00 [DBG] Start authorize callback request
2019-07-10 15:27:47.410 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:27:47.410 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:27:47.410 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:27:47.410 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:27:47.410 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"1a0b5727ed0145b1a46ee112309918e9","UiLocales":null,"Nonce":"0f0261650c224946a636055df0af41b8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"1a0b5727ed0145b1a46ee112309918e9","nonce":"0f0261650c224946a636055df0af41b8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:27:47.411 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:27:47.411 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:27:47.411 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:27:47.411 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 15:27:47.411 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-10 15:27:47.411 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 15:27:47.411 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 15:27:47.411 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 15:27:47.412 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 15:27:47.412 +03:00 [DBG] Issued claims: []
2019-07-10 15:27:47.420 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 15:27:47.420 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 15:27:47.429 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****DafA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****6YDQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO55ABC09F3:00000004","TimeStamp":"2019-07-10T12:27:47.0000000Z","ProcessId":9844,"LocalIpAddress":"127.0.0.1:7961","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 15:27:47.429 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/login","State":"1a0b5727ed0145b1a46ee112309918e9","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 15:28:06.667 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 15:28:06.668 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 15:28:06.669 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 15:28:06.669 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 15:28:06.669 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 15:28:06.669 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 15:28:06.669 +03:00 [DBG] Start discovery request
2019-07-10 15:28:06.747 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 15:28:06.748 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 15:28:06.748 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 15:28:06.748 +03:00 [DBG] Start authorize request
2019-07-10 15:28:06.748 +03:00 [DBG] User in authorize request: 818727
2019-07-10 15:28:06.748 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:28:06.748 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:28:06.749 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:28:06.749 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/login","AllowedRedirectUris":["http://localhost:4200/login"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"3ce4fbd73482496db8793e6144195d30","UiLocales":null,"Nonce":"457ac99028fb47f08b143fa894e9046e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"db6f8ff60f0e136fa904a485a603d7b4","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/login","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"3ce4fbd73482496db8793e6144195d30","nonce":"457ac99028fb47f08b143fa894e9046e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 15:28:06.749 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 15:28:06.749 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 15:28:06.749 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 15:28:06.750 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 15:28:06.765 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 15:28:06.766 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 15:28:06.766 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 15:28:06.766 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:11.582 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-10 16:16:11.686 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-10 16:16:11.695 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-10 16:16:11.695 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-10 16:16:11.695 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-10 16:16:11.696 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-10 16:16:11.696 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-10 16:16:12.365 +03:00 [DBG] Login Url: /Account/Login
2019-07-10 16:16:12.369 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-10 16:16:12.369 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-10 16:16:12.369 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-10 16:16:12.369 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-10 16:16:12.369 +03:00 [DBG] Error Url: /home/error
2019-07-10 16:16:12.369 +03:00 [DBG] Error Id Parameter: errorId
2019-07-10 16:16:43.644 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 16:16:43.654 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 16:16:43.654 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 16:16:43.659 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 16:16:43.666 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 16:16:43.666 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 16:16:43.672 +03:00 [DBG] Start discovery request
2019-07-10 16:16:43.764 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 16:16:43.768 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 16:16:43.768 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 16:16:43.776 +03:00 [DBG] Start authorize request
2019-07-10 16:16:43.788 +03:00 [DBG] No user present in authorize request
2019-07-10 16:16:43.796 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 16:16:43.827 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:43.884 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 16:16:43.909 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"948a0f3cdfbc40f9bc1963bd05b39d0e","UiLocales":null,"Nonce":"4d3a8d714d82438da51e609c902f9cae","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"948a0f3cdfbc40f9bc1963bd05b39d0e","nonce":"4d3a8d714d82438da51e609c902f9cae"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 16:16:43.952 +03:00 [INF] Showing login: User is not authenticated
2019-07-10 16:16:44.033 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 16:16:44.034 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:44.034 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 16:16:44.039 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:47.767 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 16:16:47.849 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 16:16:47.849 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:47.850 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 16:16:47.893 +03:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"818727","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO5733PH009:00000005","TimeStamp":"2019-07-10T13:16:47.0000000Z","ProcessId":20360,"LocalIpAddress":"127.0.0.1:43562","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-10 16:16:47.917 +03:00 [DBG] Augmenting SignInContext
2019-07-10 16:16:47.923 +03:00 [DBG] Adding idp claim with value: local
2019-07-10 16:16:47.923 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-10 16:16:47.950 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 16:16:47.956 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:47.967 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 16:16:47.969 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 16:16:47.971 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 16:16:47.990 +03:00 [DBG] Start authorize callback request
2019-07-10 16:16:48.002 +03:00 [DBG] User in authorize request: 818727
2019-07-10 16:16:48.004 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 16:16:48.004 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:48.005 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 16:16:48.005 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"948a0f3cdfbc40f9bc1963bd05b39d0e","UiLocales":null,"Nonce":"4d3a8d714d82438da51e609c902f9cae","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bc606639b0500d620a3dfa1761b09f82","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"948a0f3cdfbc40f9bc1963bd05b39d0e","nonce":"4d3a8d714d82438da51e609c902f9cae"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 16:16:48.009 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 16:16:48.049 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 16:16:48.050 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 16:16:48.050 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 16:16:48.110 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 16:16:48.110 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:48.110 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 16:16:48.111 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:51.174 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 16:16:51.201 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 16:16:51.201 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:51.201 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 16:16:51.203 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO5733PH009:00000008","TimeStamp":"2019-07-10T13:16:51.0000000Z","ProcessId":20360,"LocalIpAddress":"127.0.0.1:43562","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 16:16:51.222 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:51.231 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 16:16:51.232 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 16:16:51.232 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 16:16:51.232 +03:00 [DBG] Start authorize callback request
2019-07-10 16:16:51.238 +03:00 [DBG] User in authorize request: 818727
2019-07-10 16:16:51.238 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 16:16:51.238 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:51.239 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 16:16:51.240 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"948a0f3cdfbc40f9bc1963bd05b39d0e","UiLocales":null,"Nonce":"4d3a8d714d82438da51e609c902f9cae","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bc606639b0500d620a3dfa1761b09f82","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"948a0f3cdfbc40f9bc1963bd05b39d0e","nonce":"4d3a8d714d82438da51e609c902f9cae"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 16:16:51.240 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 16:16:51.240 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-10 16:16:51.240 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 16:16:51.253 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 16:16:51.262 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-10 16:16:51.274 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 16:16:51.290 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 16:16:51.291 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-10 16:16:51.297 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 16:16:51.299 +03:00 [DBG] Issued claims: []
2019-07-10 16:16:51.425 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-10 16:16:51.425 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 16:16:51.438 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****HCZw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****OvcA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO5733PH009:00000009","TimeStamp":"2019-07-10T13:16:51.0000000Z","ProcessId":20360,"LocalIpAddress":"127.0.0.1:43562","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 16:16:51.441 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"948a0f3cdfbc40f9bc1963bd05b39d0e","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 16:16:51.465 +03:00 [DBG] Augmenting SignInContext
2019-07-10 16:16:51.466 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 16:16:52.694 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 16:16:52.696 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 16:16:52.696 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 16:16:52.697 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 16:16:52.697 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 16:16:52.697 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 16:16:52.697 +03:00 [DBG] Start discovery request
2019-07-10 16:16:52.762 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-10 16:16:52.763 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 16:16:52.763 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 16:16:52.764 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-10 16:16:52.764 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-10 16:16:52.765 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-10 16:16:52.773 +03:00 [DBG] Start key discovery request
2019-07-10 16:16:52.842 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-10 16:16:52.842 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 16:16:52.842 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 16:16:52.860 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-10 16:16:52.860 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 16:16:52.861 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 16:16:52.862 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-10 16:16:52.867 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-10 16:16:52.868 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-10 16:16:52.888 +03:00 [DBG] Start userinfo request
2019-07-10 16:16:52.896 +03:00 [DBG] Bearer token found in header
2019-07-10 16:16:53.030 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:53.036 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 16:16:53.037 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-10 16:16:53.038 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-10 16:16:53.040 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562764611,"exp":1562768211,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"818727","auth_time":1562764607,"idp":"local","scope":["openid","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-10 16:16:53.042 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-10 16:16:53.052 +03:00 [DBG] Creating userinfo response
2019-07-10 16:16:53.064 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-10 16:16:53.071 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-10 16:16:53.078 +03:00 [DBG] Requested claim types: sub name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-10 16:16:53.079 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-10 16:16:53.080 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-10 16:16:53.084 +03:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2019-07-10 16:16:53.084 +03:00 [INF] Profile service returned the following claim types: name given_name family_name website
2019-07-10 16:16:53.085 +03:00 [DBG] End userinfo request
2019-07-10 16:16:53.132 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-10 16:16:53.133 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-10 16:16:53.133 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-10 16:16:53.136 +03:00 [DBG] Rendering check session result
2019-07-10 16:17:02.700 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 16:17:02.701 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 16:17:02.701 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 16:17:02.701 +03:00 [DBG] Start discovery request
2019-07-10 16:17:02.889 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-10 16:17:02.890 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-10 16:17:02.890 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-10 16:17:02.890 +03:00 [DBG] Start key discovery request
2019-07-10 16:26:39.281 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 16:26:39.281 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 16:26:39.281 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 16:26:39.281 +03:00 [DBG] Start discovery request
2019-07-10 16:26:51.720 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-10 16:26:51.722 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-10 16:26:51.723 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-10 16:26:51.726 +03:00 [DBG] Start userinfo request
2019-07-10 16:26:51.726 +03:00 [DBG] Bearer token not found
2019-07-10 16:26:51.726 +03:00 [ERR] No access token found.
2019-07-10 16:34:52.758 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 16:34:52.758 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 16:34:52.758 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 16:34:52.758 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 16:34:52.759 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 16:34:52.759 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 16:34:52.759 +03:00 [DBG] Start discovery request
2019-07-10 16:34:52.954 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-10 16:34:52.954 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-10 16:34:52.954 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-10 16:34:52.954 +03:00 [DBG] Rendering check session result
2019-07-10 16:35:02.195 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 16:35:02.196 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 16:35:02.196 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 16:35:02.196 +03:00 [DBG] Start discovery request
2019-07-10 16:35:02.887 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-10 16:35:02.887 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-10 16:35:02.887 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-10 16:35:02.888 +03:00 [DBG] Start key discovery request
2019-07-10 16:35:07.706 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 16:35:07.707 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 16:35:07.707 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 16:35:07.707 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 16:35:07.707 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 16:35:07.707 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 16:35:07.708 +03:00 [DBG] Start discovery request
2019-07-10 16:35:07.940 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-10 16:35:07.940 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-10 16:35:07.940 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-10 16:35:07.940 +03:00 [DBG] Rendering check session result
2019-07-10 16:53:15.262 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 16:53:15.263 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 16:53:15.263 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 16:53:15.263 +03:00 [DBG] Start discovery request
2019-07-10 17:01:42.745 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-10 17:01:42.833 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-10 17:01:42.839 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-10 17:01:42.840 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-10 17:01:42.840 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-10 17:01:42.840 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-10 17:01:42.840 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-10 17:01:44.031 +03:00 [DBG] Login Url: /Account/Login
2019-07-10 17:01:44.037 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-10 17:01:44.038 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-10 17:01:44.039 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-10 17:01:44.039 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-10 17:01:44.039 +03:00 [DBG] Error Url: /home/error
2019-07-10 17:01:44.039 +03:00 [DBG] Error Id Parameter: errorId
2019-07-10 17:02:20.966 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-10 17:02:21.051 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-10 17:02:21.058 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-10 17:02:21.058 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-10 17:02:21.058 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-10 17:02:21.058 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-10 17:02:21.058 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-10 17:02:21.765 +03:00 [DBG] Login Url: /Account/Login
2019-07-10 17:02:21.771 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-10 17:02:21.771 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-10 17:02:21.772 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-10 17:02:21.772 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-10 17:02:21.772 +03:00 [DBG] Error Url: /home/error
2019-07-10 17:02:21.773 +03:00 [DBG] Error Id Parameter: errorId
2019-07-10 17:05:53.765 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 17:05:53.772 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 17:05:53.773 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 17:05:53.782 +03:00 [DBG] Start discovery request
2019-07-10 17:05:54.178 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-10 17:05:54.180 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-10 17:05:54.180 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-10 17:05:54.190 +03:00 [DBG] Start key discovery request
2019-07-10 17:10:24.689 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-10 17:10:24.742 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-10 17:10:24.746 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-10 17:10:24.746 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-10 17:10:24.746 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-10 17:10:24.747 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-10 17:10:24.747 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-10 17:10:25.396 +03:00 [DBG] Login Url: /Account/Login
2019-07-10 17:10:25.400 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-10 17:10:25.400 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-10 17:10:25.400 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-10 17:10:25.400 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-10 17:10:25.400 +03:00 [DBG] Error Url: /home/error
2019-07-10 17:10:25.400 +03:00 [DBG] Error Id Parameter: errorId
2019-07-10 17:10:30.455 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-10 17:10:30.529 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-10 17:10:30.536 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-10 17:10:30.536 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-10 17:10:30.536 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-10 17:10:30.536 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-10 17:10:30.536 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-10 17:10:31.257 +03:00 [DBG] Login Url: /Account/Login
2019-07-10 17:10:31.262 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-10 17:10:31.262 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-10 17:10:31.262 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-10 17:10:31.262 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-10 17:10:31.262 +03:00 [DBG] Error Url: /home/error
2019-07-10 17:10:31.262 +03:00 [DBG] Error Id Parameter: errorId
2019-07-10 17:10:54.456 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 17:10:54.463 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 17:10:54.464 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 17:10:54.473 +03:00 [DBG] Start discovery request
2019-07-10 17:10:54.715 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-10 17:10:54.716 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-10 17:10:54.716 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-10 17:10:54.721 +03:00 [DBG] Start key discovery request
2019-07-10 17:12:18.917 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 17:12:18.918 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 17:12:18.918 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 17:12:18.919 +03:00 [DBG] Start discovery request
2019-07-10 17:12:19.189 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-10 17:12:19.192 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-10 17:12:19.192 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-10 17:12:19.192 +03:00 [DBG] Start key discovery request
2019-07-10 17:14:21.247 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 17:14:21.251 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 17:14:21.251 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 17:14:21.253 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 17:14:21.253 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 17:14:21.254 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 17:14:21.254 +03:00 [DBG] Start discovery request
2019-07-10 17:14:21.283 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 17:14:21.294 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 17:14:21.295 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 17:14:21.306 +03:00 [DBG] Start authorize request
2019-07-10 17:14:21.333 +03:00 [DBG] No user present in authorize request
2019-07-10 17:14:21.341 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:14:21.369 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:21.419 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:14:21.440 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"6e78698a64dd431194ced23891c323a0","UiLocales":null,"Nonce":"f90f21cd60c349cb8863ff70f95df66c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"6e78698a64dd431194ced23891c323a0","nonce":"f90f21cd60c349cb8863ff70f95df66c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 17:14:21.469 +03:00 [INF] Showing login: User is not authenticated
2019-07-10 17:14:21.559 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:14:21.559 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:21.560 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:14:21.565 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:23.772 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-10 17:14:28.450 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-10 17:14:28.528 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO581F0814J:00000006","TimeStamp":"2019-07-10T14:14:28.0000000Z","ProcessId":20012,"LocalIpAddress":"127.0.0.1:20167","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-10 17:14:28.545 +03:00 [DBG] Augmenting SignInContext
2019-07-10 17:14:28.551 +03:00 [DBG] Adding amr claim with value: external
2019-07-10 17:14:28.556 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 17:14:28.567 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-10 17:14:28.567 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:14:28.568 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:28.568 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:14:28.570 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:28.584 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 17:14:28.585 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 17:14:28.585 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 17:14:28.596 +03:00 [DBG] Start authorize callback request
2019-07-10 17:14:28.603 +03:00 [DBG] User in authorize request: 96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e
2019-07-10 17:14:28.603 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:14:28.603 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:28.604 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:14:28.604 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"6e78698a64dd431194ced23891c323a0","UiLocales":null,"Nonce":"f90f21cd60c349cb8863ff70f95df66c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4c790794376d7abfac44e8b14b6908c5","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"6e78698a64dd431194ced23891c323a0","nonce":"f90f21cd60c349cb8863ff70f95df66c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 17:14:28.606 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 17:14:28.634 +03:00 [DBG] user_consent grant with value: spa|96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e not found in store.
2019-07-10 17:14:28.634 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 17:14:28.634 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 17:14:28.673 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:14:28.673 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:28.673 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:14:28.674 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:31.791 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 17:14:31.860 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:14:31.860 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:31.861 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:14:31.863 +03:00 [INF] {"SubjectId":"96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO581F0814J:00000009","TimeStamp":"2019-07-10T14:14:31.0000000Z","ProcessId":20012,"LocalIpAddress":"127.0.0.1:20167","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 17:14:31.879 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:31.887 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 17:14:31.887 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 17:14:31.888 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 17:14:31.888 +03:00 [DBG] Start authorize callback request
2019-07-10 17:14:31.893 +03:00 [DBG] User in authorize request: 96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e
2019-07-10 17:14:31.893 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:14:31.894 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:31.894 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:14:31.895 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"6e78698a64dd431194ced23891c323a0","UiLocales":null,"Nonce":"f90f21cd60c349cb8863ff70f95df66c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4c790794376d7abfac44e8b14b6908c5","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"6e78698a64dd431194ced23891c323a0","nonce":"f90f21cd60c349cb8863ff70f95df66c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 17:14:31.895 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 17:14:31.895 +03:00 [DBG] user_consent grant with value: spa|96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e not found in store.
2019-07-10 17:14:31.895 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 17:14:31.909 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 17:14:31.916 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e
2019-07-10 17:14:31.931 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 17:14:31.946 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 17:14:31.947 +03:00 [DBG] Getting claims for access token for subject: 96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e
2019-07-10 17:14:31.952 +03:00 [DBG] Get profile called for subject 96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 17:14:31.954 +03:00 [DBG] Issued claims: []
2019-07-10 17:14:32.059 +03:00 [DBG] Getting claims for identity token for subject: 96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e and client: spa
2019-07-10 17:14:32.059 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 17:14:32.074 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****S37A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****x_oA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO581F0814J:0000000A","TimeStamp":"2019-07-10T14:14:32.0000000Z","ProcessId":20012,"LocalIpAddress":"127.0.0.1:20167","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 17:14:32.077 +03:00 [INF] Authorize endpoint response
{"SubjectId":"96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"6e78698a64dd431194ced23891c323a0","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 17:14:32.099 +03:00 [DBG] Augmenting SignInContext
2019-07-10 17:14:32.100 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 17:14:33.411 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 17:14:33.413 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 17:14:33.414 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 17:14:33.418 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 17:14:33.419 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 17:14:33.419 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 17:14:33.419 +03:00 [DBG] Start discovery request
2019-07-10 17:14:33.485 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-10 17:14:33.485 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 17:14:33.485 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 17:14:33.486 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-10 17:14:33.486 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-10 17:14:33.487 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-10 17:14:33.487 +03:00 [DBG] Start key discovery request
2019-07-10 17:14:33.537 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-10 17:14:33.538 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 17:14:33.538 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 17:14:33.570 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-10 17:14:33.570 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 17:14:33.570 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 17:14:33.571 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-10 17:14:33.587 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-10 17:14:33.587 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-10 17:14:33.601 +03:00 [DBG] Start userinfo request
2019-07-10 17:14:33.606 +03:00 [DBG] Bearer token found in header
2019-07-10 17:14:33.702 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:33.707 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:14:33.708 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-10 17:14:33.709 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-10 17:14:33.711 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562768071,"exp":1562771671,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e","auth_time":1562768068,"idp":"Google","scope":["openid","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-10 17:14:33.713 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-10 17:14:33.724 +03:00 [DBG] Creating userinfo response
2019-07-10 17:14:33.731 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-10 17:14:33.735 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-10 17:14:33.740 +03:00 [DBG] Requested claim types: sub name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-10 17:14:33.740 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-10 17:14:33.741 +03:00 [DBG] Get profile called for subject 96fed127cbcb97448cef7b55a1124ff989a8937de1128e531183b09da189f09e from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-10 17:14:33.745 +03:00 [DBG] Issued claims: ["name","given_name","family_name"]
2019-07-10 17:14:33.746 +03:00 [INF] Profile service returned the following claim types: name given_name family_name
2019-07-10 17:14:33.746 +03:00 [DBG] End userinfo request
2019-07-10 17:14:33.795 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-10 17:14:33.796 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-10 17:14:33.796 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-10 17:14:33.798 +03:00 [DBG] Rendering check session result
2019-07-10 17:28:12.151 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-10 17:28:12.205 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-10 17:28:12.208 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-10 17:28:12.208 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-10 17:28:12.209 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-10 17:28:12.210 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-10 17:28:12.210 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-10 17:28:12.633 +03:00 [DBG] Login Url: /Account/Login
2019-07-10 17:28:12.636 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-10 17:28:12.636 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-10 17:28:12.636 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-10 17:28:12.637 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-10 17:28:12.637 +03:00 [DBG] Error Url: /home/error
2019-07-10 17:28:12.637 +03:00 [DBG] Error Id Parameter: errorId
2019-07-10 17:28:14.634 +03:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-07-10 17:28:18.016 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-10 17:28:20.385 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-10 17:28:20.466 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO58BBBLT7M:00000006","TimeStamp":"2019-07-10T14:28:20.0000000Z","ProcessId":17304,"LocalIpAddress":"127.0.0.1:22708","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-10 17:28:20.506 +03:00 [DBG] Augmenting SignInContext
2019-07-10 17:28:20.511 +03:00 [DBG] Adding amr claim with value: external
2019-07-10 17:28:20.523 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 17:28:20.535 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-10 17:28:50.013 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 17:28:50.033 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 17:28:50.033 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 17:28:50.036 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 17:28:50.041 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 17:28:50.041 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 17:28:50.046 +03:00 [DBG] Start discovery request
2019-07-10 17:28:50.111 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-10 17:28:50.111 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-10 17:28:50.112 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-10 17:28:50.114 +03:00 [DBG] Rendering check session result
2019-07-10 17:29:45.145 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 17:29:45.145 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 17:29:45.145 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 17:29:45.145 +03:00 [DBG] Start discovery request
2019-07-10 17:29:45.396 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-10 17:29:45.397 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-10 17:29:45.397 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-10 17:29:45.405 +03:00 [DBG] Start key discovery request
2019-07-10 17:30:06.902 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 17:30:06.953 +03:00 [INF] AuthenticationScheme: idsrv signed out.
2019-07-10 17:30:06.954 +03:00 [INF] {"SubjectId":"e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLO58BBBLT7M:0000000D","TimeStamp":"2019-07-10T14:30:06.0000000Z","ProcessId":17304,"LocalIpAddress":"127.0.0.1:22708","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-10 17:30:44.959 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 17:30:44.959 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 17:30:44.959 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 17:30:44.960 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 17:30:44.960 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 17:30:44.960 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 17:30:44.960 +03:00 [DBG] Start discovery request
2019-07-10 17:30:45.004 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-10 17:30:45.011 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-10 17:30:45.012 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-10 17:30:45.017 +03:00 [DBG] Start authorize request
2019-07-10 17:30:45.026 +03:00 [DBG] No user present in authorize request
2019-07-10 17:30:45.033 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:30:45.056 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:45.108 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:30:45.121 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"607a69b0f840414880eb7edb14ec6628","UiLocales":null,"Nonce":"a1475abbdc39420c912cbc0257205347","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"607a69b0f840414880eb7edb14ec6628","nonce":"a1475abbdc39420c912cbc0257205347"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 17:30:45.138 +03:00 [INF] Showing login: User is not authenticated
2019-07-10 17:30:45.156 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:30:45.157 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:45.158 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:30:45.161 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:47.559 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-10 17:30:48.961 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-10 17:30:48.970 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO58BBBLT7M:00000013","TimeStamp":"2019-07-10T14:30:48.0000000Z","ProcessId":17304,"LocalIpAddress":"127.0.0.1:22708","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-10 17:30:48.971 +03:00 [DBG] Augmenting SignInContext
2019-07-10 17:30:48.971 +03:00 [DBG] Adding amr claim with value: external
2019-07-10 17:30:48.971 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 17:30:48.972 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-10 17:30:48.972 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:30:48.972 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:48.972 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:30:48.975 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:48.991 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 17:30:48.992 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 17:30:48.993 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 17:30:49.009 +03:00 [DBG] Start authorize callback request
2019-07-10 17:30:49.016 +03:00 [DBG] User in authorize request: e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847
2019-07-10 17:30:49.016 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:30:49.016 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:49.017 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:30:49.017 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"607a69b0f840414880eb7edb14ec6628","UiLocales":null,"Nonce":"a1475abbdc39420c912cbc0257205347","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e8e1b1f9148c0e14eed470ada740af7f","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"607a69b0f840414880eb7edb14ec6628","nonce":"a1475abbdc39420c912cbc0257205347"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 17:30:49.020 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 17:30:49.050 +03:00 [DBG] user_consent grant with value: spa|e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847 not found in store.
2019-07-10 17:30:49.050 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 17:30:49.050 +03:00 [INF] Showing consent: User has not yet consented
2019-07-10 17:30:49.083 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:30:49.084 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:49.085 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:30:49.085 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:52.900 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-10 17:30:52.928 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:30:52.928 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:52.929 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:30:52.932 +03:00 [INF] {"SubjectId":"e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO58BBBLT7M:00000016","TimeStamp":"2019-07-10T14:30:52.0000000Z","ProcessId":17304,"LocalIpAddress":"127.0.0.1:22708","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-10 17:30:52.953 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:52.965 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-10 17:30:52.966 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-10 17:30:52.966 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-10 17:30:52.966 +03:00 [DBG] Start authorize callback request
2019-07-10 17:30:52.972 +03:00 [DBG] User in authorize request: e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847
2019-07-10 17:30:52.972 +03:00 [DBG] Start authorize request protocol validation
2019-07-10 17:30:52.972 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:52.972 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-10 17:30:52.973 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"607a69b0f840414880eb7edb14ec6628","UiLocales":null,"Nonce":"a1475abbdc39420c912cbc0257205347","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e8e1b1f9148c0e14eed470ada740af7f","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"607a69b0f840414880eb7edb14ec6628","nonce":"a1475abbdc39420c912cbc0257205347"},"$type":"AuthorizeRequestValidationLog"}
2019-07-10 17:30:52.973 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-10 17:30:52.973 +03:00 [DBG] user_consent grant with value: spa|e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847 not found in store.
2019-07-10 17:30:52.973 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-10 17:30:52.994 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-10 17:30:53.003 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847
2019-07-10 17:30:53.020 +03:00 [DBG] Creating Implicit Flow response.
2019-07-10 17:30:53.037 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-10 17:30:53.038 +03:00 [DBG] Getting claims for access token for subject: e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847
2019-07-10 17:30:53.043 +03:00 [DBG] Get profile called for subject e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-10 17:30:53.046 +03:00 [DBG] Issued claims: []
2019-07-10 17:30:53.146 +03:00 [DBG] Getting claims for identity token for subject: e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847 and client: spa
2019-07-10 17:30:53.146 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-10 17:30:53.163 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ul7w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****McRQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO58BBBLT7M:00000017","TimeStamp":"2019-07-10T14:30:53.0000000Z","ProcessId":17304,"LocalIpAddress":"127.0.0.1:22708","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-10 17:30:53.166 +03:00 [INF] Authorize endpoint response
{"SubjectId":"e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"607a69b0f840414880eb7edb14ec6628","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-10 17:30:53.187 +03:00 [DBG] Augmenting SignInContext
2019-07-10 17:30:53.187 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-10 17:30:54.080 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-10 17:30:54.082 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 17:30:54.082 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 17:30:54.082 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-10 17:30:54.083 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-10 17:30:54.083 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-10 17:30:54.083 +03:00 [DBG] Start discovery request
2019-07-10 17:30:54.156 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-10 17:30:54.156 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 17:30:54.156 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 17:30:54.157 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-10 17:30:54.157 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-10 17:30:54.157 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-10 17:30:54.157 +03:00 [DBG] Start key discovery request
2019-07-10 17:30:54.218 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-10 17:30:54.219 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 17:30:54.219 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 17:30:54.228 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-10 17:30:54.228 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-10 17:30:54.229 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-10 17:30:54.230 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-10 17:30:54.236 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-10 17:30:54.237 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-10 17:30:54.254 +03:00 [DBG] Start userinfo request
2019-07-10 17:30:54.263 +03:00 [DBG] Bearer token found in header
2019-07-10 17:30:54.381 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:54.394 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-10 17:30:54.394 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-10 17:30:54.395 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-10 17:30:54.398 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562769053,"exp":1562772653,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847","auth_time":1562769048,"idp":"Facebook","scope":["openid","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-10 17:30:54.400 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-10 17:30:54.409 +03:00 [DBG] Creating userinfo response
2019-07-10 17:30:54.415 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-10 17:30:54.420 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-10 17:30:54.424 +03:00 [DBG] Requested claim types: sub name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-10 17:30:54.424 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-10 17:30:54.424 +03:00 [DBG] Get profile called for subject e48791eef2b4db715d55f12e92e902b3ef84b6d4aebd6965f267c37b3b696847 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-10 17:30:54.426 +03:00 [DBG] Issued claims: ["name","given_name","family_name"]
2019-07-10 17:30:54.426 +03:00 [INF] Profile service returned the following claim types: name given_name family_name
2019-07-10 17:30:54.427 +03:00 [DBG] End userinfo request
2019-07-10 17:30:54.480 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-10 17:30:54.480 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-10 17:30:54.480 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-10 17:30:54.481 +03:00 [DBG] Rendering check session result
2019-07-11 09:38:22.573 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-11 09:38:22.734 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-11 09:38:22.743 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-11 09:38:22.743 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-11 09:38:22.743 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-11 09:38:22.743 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-11 09:38:22.743 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-11 09:38:23.790 +03:00 [DBG] Login Url: /Account/Login
2019-07-11 09:38:23.796 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-11 09:38:23.796 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-11 09:38:23.796 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-11 09:38:23.796 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-11 09:38:23.796 +03:00 [DBG] Error Url: /home/error
2019-07-11 09:38:23.796 +03:00 [DBG] Error Id Parameter: errorId
2019-07-11 09:39:22.771 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 09:39:22.779 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 09:39:22.780 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 09:39:22.788 +03:00 [DBG] Start authorize request
2019-07-11 09:39:22.803 +03:00 [DBG] No user present in authorize request
2019-07-11 09:39:22.811 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 09:39:22.835 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 09:39:22.899 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 09:39:22.921 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VGh1IEp1bCAxMSAyMDE5IDA5OjM5OjIyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VGh1IEp1bCAxMSAyMDE5IDA5OjM5OjIyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 09:39:22.951 +03:00 [INF] Showing login: User is not authenticated
2019-07-11 09:39:23.078 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 09:39:23.079 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 09:39:23.079 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 09:39:23.084 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 09:39:26.977 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-11 09:39:27.057 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 09:39:27.057 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 09:39:27.057 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 09:39:27.075 +03:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"818727","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO5P9FIKSGN:00000004","TimeStamp":"2019-07-11T06:39:27.0000000Z","ProcessId":12832,"LocalIpAddress":"127.0.0.1:41453","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-11 09:39:27.096 +03:00 [DBG] Augmenting SignInContext
2019-07-11 09:39:27.101 +03:00 [DBG] Adding idp claim with value: local
2019-07-11 09:39:27.101 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-11 09:39:27.117 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-11 09:39:27.119 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 09:39:27.128 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-11 09:39:27.130 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-11 09:39:27.130 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-11 09:39:27.140 +03:00 [DBG] Start authorize callback request
2019-07-11 09:39:27.147 +03:00 [DBG] User in authorize request: 818727
2019-07-11 09:39:27.147 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 09:39:27.148 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 09:39:27.148 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 09:39:27.148 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"818727","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VGh1IEp1bCAxMSAyMDE5IDA5OjM5OjIyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"186186eef63ff2513dae1e90daa5c5c5","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VGh1IEp1bCAxMSAyMDE5IDA5OjM5OjIyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 09:39:27.150 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 09:39:27.171 +03:00 [DBG] user_consent grant with value: swagger|818727 not found in store.
2019-07-11 09:39:27.172 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 09:39:27.172 +03:00 [INF] Showing consent: User has not yet consented
2019-07-11 09:39:27.208 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 09:39:27.208 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 09:39:27.208 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 09:39:27.208 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 09:39:29.327 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-11 09:39:29.360 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 09:39:29.360 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 09:39:29.360 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 09:39:29.362 +03:00 [INF] {"SubjectId":"818727","ClientId":"swagger","RequestedScopes":["pyatnashki_api"],"GrantedScopes":["pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO5P9FIKSGN:00000006","TimeStamp":"2019-07-11T06:39:29.0000000Z","ProcessId":12832,"LocalIpAddress":"127.0.0.1:41453","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-11 09:39:29.395 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 09:39:29.402 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-11 09:39:29.403 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-11 09:39:29.403 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-11 09:39:29.404 +03:00 [DBG] Start authorize callback request
2019-07-11 09:39:29.412 +03:00 [DBG] User in authorize request: 818727
2019-07-11 09:39:29.412 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 09:39:29.412 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 09:39:29.412 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 09:39:29.412 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"818727","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VGh1IEp1bCAxMSAyMDE5IDA5OjM5OjIyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"186186eef63ff2513dae1e90daa5c5c5","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VGh1IEp1bCAxMSAyMDE5IDA5OjM5OjIyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 09:39:29.413 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 09:39:29.413 +03:00 [DBG] user_consent grant with value: swagger|818727 not found in store.
2019-07-11 09:39:29.413 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 09:39:29.424 +03:00 [INF] User consented to scopes: ["pyatnashki_api"]
2019-07-11 09:39:29.431 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-11 09:39:29.446 +03:00 [DBG] Creating Implicit Flow response.
2019-07-11 09:39:29.463 +03:00 [DBG] Getting claims for access token for client: swagger
2019-07-11 09:39:29.464 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-11 09:39:29.469 +03:00 [DBG] Get profile called for subject 818727 from client Swagger Client with claim types [] via ClaimsProviderAccessToken
2019-07-11 09:39:29.472 +03:00 [DBG] Issued claims: []
2019-07-11 09:39:29.605 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":"818727","Scopes":"pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"access_token","TokenValue":"****GQKg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO5P9FIKSGR:00000005","TimeStamp":"2019-07-11T06:39:29.0000000Z","ProcessId":12832,"LocalIpAddress":"127.0.0.1:41453","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-11 09:39:29.608 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"swagger","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","State":"VGh1IEp1bCAxMSAyMDE5IDA5OjM5OjIyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","Scope":"pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-11 09:39:29.632 +03:00 [DBG] Augmenting SignInContext
2019-07-11 09:39:29.632 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-11 09:39:35.627 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 09:39:35.631 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 09:39:35.631 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 09:39:35.643 +03:00 [DBG] Start discovery request
2019-07-11 09:39:35.950 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-11 09:39:35.953 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-11 09:39:35.953 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-11 09:39:35.962 +03:00 [DBG] Start key discovery request
2019-07-11 11:11:57.641 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-11 11:11:57.680 +03:00 [INF] AuthenticationScheme: idsrv signed out.
2019-07-11 11:11:57.681 +03:00 [INF] {"SubjectId":"818727","DisplayName":"alice","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLO5P9FIKSGT:00000003","TimeStamp":"2019-07-11T08:11:57.0000000Z","ProcessId":12832,"LocalIpAddress":"127.0.0.1:41453","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-11 11:11:57.861 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-11 11:11:57.867 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-11 11:11:57.867 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-11 11:11:57.879 +03:00 [DBG] Processing signout callback request
2019-07-11 11:11:57.904 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 11:11:57.904 +03:00 [DBG] No client front-channel logout URLs
2019-07-11 11:11:57.905 +03:00 [DBG] No client back-channel logout URLs
2019-07-11 11:11:57.905 +03:00 [INF] Successful signout callback.
2019-07-11 11:11:57.905 +03:00 [DBG] No client front-channel iframe urls
2019-07-11 11:11:57.905 +03:00 [DBG] No client back-channel iframe urls
2019-07-11 11:12:17.445 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 11:12:17.445 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 11:12:17.445 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 11:12:17.446 +03:00 [DBG] Start discovery request
2019-07-11 11:12:17.812 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-11 11:12:17.812 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-11 11:12:17.812 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-11 11:12:17.812 +03:00 [DBG] Start key discovery request
2019-07-11 11:12:52.218 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 11:12:52.219 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 11:12:52.219 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 11:12:52.220 +03:00 [DBG] Start authorize request
2019-07-11 11:12:52.220 +03:00 [DBG] No user present in authorize request
2019-07-11 11:12:52.220 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 11:12:52.221 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 11:12:52.224 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 11:12:52.224 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VGh1IEp1bCAxMSAyMDE5IDExOjEyOjUyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VGh1IEp1bCAxMSAyMDE5IDExOjEyOjUyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 11:12:52.225 +03:00 [INF] Showing login: User is not authenticated
2019-07-11 11:12:52.250 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 11:12:52.251 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 11:12:52.251 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 11:12:52.252 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 11:12:59.961 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-11 11:13:05.216 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-11 11:13:05.261 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO5P9FIKSGT:0000000B","TimeStamp":"2019-07-11T08:13:05.0000000Z","ProcessId":12832,"LocalIpAddress":"127.0.0.1:41453","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-11 11:13:05.269 +03:00 [DBG] Augmenting SignInContext
2019-07-11 11:13:05.272 +03:00 [DBG] Adding amr claim with value: external
2019-07-11 11:13:05.273 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-11 11:13:05.273 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-11 11:13:05.273 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 11:13:05.274 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 11:13:05.274 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 11:13:05.274 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 11:13:05.296 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-11 11:13:05.296 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-11 11:13:05.297 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-11 11:13:05.297 +03:00 [DBG] Start authorize callback request
2019-07-11 11:13:05.297 +03:00 [DBG] User in authorize request: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 11:13:05.297 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 11:13:05.298 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 11:13:05.299 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 11:13:05.299 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VGh1IEp1bCAxMSAyMDE5IDExOjEyOjUyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f70dd3395ec6a193c476ee67962b60b6","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VGh1IEp1bCAxMSAyMDE5IDExOjEyOjUyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 11:13:05.299 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 11:13:05.300 +03:00 [DBG] user_consent grant with value: swagger|c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247 not found in store.
2019-07-11 11:13:05.300 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 11:13:05.300 +03:00 [INF] Showing consent: User has not yet consented
2019-07-11 11:13:05.316 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 11:13:05.316 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 11:13:05.316 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 11:13:05.317 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 11:13:17.697 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-11 11:13:17.700 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 11:13:17.701 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 11:13:17.701 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 11:13:17.702 +03:00 [INF] {"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ClientId":"swagger","RequestedScopes":["pyatnashki_api"],"GrantedScopes":["pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO5P9FIKSGT:0000000E","TimeStamp":"2019-07-11T08:13:17.0000000Z","ProcessId":12832,"LocalIpAddress":"127.0.0.1:41453","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-11 11:13:17.703 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 11:13:17.712 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-11 11:13:17.712 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-11 11:13:17.712 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-11 11:13:17.713 +03:00 [DBG] Start authorize callback request
2019-07-11 11:13:17.714 +03:00 [DBG] User in authorize request: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 11:13:17.715 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 11:13:17.715 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 11:13:17.715 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 11:13:17.716 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","AllowedRedirectUris":["https://localhost:44380/swagger/oauth2-redirect.html"],"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"pyatnashki_api","State":"VGh1IEp1bCAxMSAyMDE5IDExOjEyOjUyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f70dd3395ec6a193c476ee67962b60b6","Raw":{"response_type":"token","client_id":"swagger","redirect_uri":"https://localhost:44380/swagger/oauth2-redirect.html","scope":"pyatnashki_api","state":"VGh1IEp1bCAxMSAyMDE5IDExOjEyOjUyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","realm":"realm"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 11:13:17.716 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 11:13:17.716 +03:00 [DBG] user_consent grant with value: swagger|c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247 not found in store.
2019-07-11 11:13:17.716 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 11:13:17.717 +03:00 [INF] User consented to scopes: ["pyatnashki_api"]
2019-07-11 11:13:17.718 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 11:13:17.718 +03:00 [DBG] Creating Implicit Flow response.
2019-07-11 11:13:17.718 +03:00 [DBG] Getting claims for access token for client: swagger
2019-07-11 11:13:17.718 +03:00 [DBG] Getting claims for access token for subject: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 11:13:17.719 +03:00 [DBG] Get profile called for subject c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247 from client Swagger Client with claim types [] via ClaimsProviderAccessToken
2019-07-11 11:13:17.719 +03:00 [DBG] Issued claims: []
2019-07-11 11:13:17.728 +03:00 [INF] {"ClientId":"swagger","ClientName":"Swagger Client","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","Scopes":"pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"access_token","TokenValue":"****sSmw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO5P9FIKSGT:0000000F","TimeStamp":"2019-07-11T08:13:17.0000000Z","ProcessId":12832,"LocalIpAddress":"127.0.0.1:41453","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-11 11:13:17.729 +03:00 [INF] Authorize endpoint response
{"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ClientId":"swagger","RedirectUri":"https://localhost:44380/swagger/oauth2-redirect.html","State":"VGh1IEp1bCAxMSAyMDE5IDExOjEyOjUyIEdNVCswMzAwICjQnNC+0YHQutCy0LAsINGB0YLQsNC90LTQsNGA0YLQvdC+0LUg0LLRgNC10LzRjyk=","Scope":"pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-11 11:13:17.729 +03:00 [DBG] Augmenting SignInContext
2019-07-11 11:13:17.730 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-11 11:15:22.597 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 11:15:22.602 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 11:15:22.602 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 11:15:22.604 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 11:15:22.605 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 11:15:22.605 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 11:15:22.605 +03:00 [DBG] Start discovery request
2019-07-11 11:15:22.632 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 11:15:22.632 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 11:15:22.633 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 11:15:22.633 +03:00 [DBG] Start authorize request
2019-07-11 11:15:22.634 +03:00 [DBG] User in authorize request: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 11:15:22.634 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 11:15:22.635 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 11:15:22.636 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 11:15:22.637 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"60a8ce953a7b4c97a5883ce0545fe980","UiLocales":null,"Nonce":"e0dcf1293f9b4c1c967861c307a10fee","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f70dd3395ec6a193c476ee67962b60b6","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"60a8ce953a7b4c97a5883ce0545fe980","nonce":"e0dcf1293f9b4c1c967861c307a10fee"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 11:15:22.637 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 11:15:22.637 +03:00 [DBG] user_consent grant with value: spa|c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247 not found in store.
2019-07-11 11:15:22.638 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 11:15:22.638 +03:00 [INF] Showing consent: User has not yet consented
2019-07-11 11:15:22.649 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 11:15:22.649 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 11:15:22.650 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 11:15:22.650 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 11:15:53.978 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-11 11:15:53.981 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 11:15:53.981 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 11:15:53.981 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 11:15:53.982 +03:00 [INF] {"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO5P9FIKSGU:00000004","TimeStamp":"2019-07-11T08:15:53.0000000Z","ProcessId":12832,"LocalIpAddress":"127.0.0.1:41453","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-11 11:15:53.983 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 11:15:53.993 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-11 11:15:53.994 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-11 11:15:53.995 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-11 11:15:53.995 +03:00 [DBG] Start authorize callback request
2019-07-11 11:15:53.996 +03:00 [DBG] User in authorize request: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 11:15:53.996 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 11:15:53.996 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 11:15:53.997 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 11:15:53.997 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"60a8ce953a7b4c97a5883ce0545fe980","UiLocales":null,"Nonce":"e0dcf1293f9b4c1c967861c307a10fee","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f70dd3395ec6a193c476ee67962b60b6","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"60a8ce953a7b4c97a5883ce0545fe980","nonce":"e0dcf1293f9b4c1c967861c307a10fee"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 11:15:53.997 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 11:15:53.997 +03:00 [DBG] user_consent grant with value: spa|c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247 not found in store.
2019-07-11 11:15:53.998 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 11:15:53.999 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-11 11:15:53.999 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 11:15:53.999 +03:00 [DBG] Creating Implicit Flow response.
2019-07-11 11:15:54.000 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-11 11:15:54.000 +03:00 [DBG] Getting claims for access token for subject: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 11:15:54.000 +03:00 [DBG] Get profile called for subject c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-11 11:15:54.000 +03:00 [DBG] Issued claims: []
2019-07-11 11:15:54.025 +03:00 [DBG] Getting claims for identity token for subject: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247 and client: spa
2019-07-11 11:15:54.026 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-11 11:15:54.034 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Z5WQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****IZMA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO5P9FIKSGU:00000005","TimeStamp":"2019-07-11T08:15:54.0000000Z","ProcessId":12832,"LocalIpAddress":"127.0.0.1:41453","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-11 11:15:54.034 +03:00 [INF] Authorize endpoint response
{"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"60a8ce953a7b4c97a5883ce0545fe980","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-11 11:15:54.035 +03:00 [DBG] Augmenting SignInContext
2019-07-11 11:15:54.035 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-11 11:15:55.566 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 11:15:55.566 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 11:15:55.567 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 11:15:55.568 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 11:15:55.568 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 11:15:55.568 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 11:15:55.568 +03:00 [DBG] Start discovery request
2019-07-11 11:15:55.656 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-11 11:15:55.657 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 11:15:55.657 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 11:15:55.657 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-11 11:15:55.657 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-11 11:15:55.657 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-11 11:15:55.657 +03:00 [DBG] Start key discovery request
2019-07-11 11:15:55.720 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-11 11:15:55.720 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 11:15:55.720 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 11:15:55.730 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-11 11:15:55.730 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 11:15:55.730 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 11:15:55.731 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-11 11:15:55.733 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-11 11:15:55.733 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-11 11:15:55.750 +03:00 [DBG] Start userinfo request
2019-07-11 11:15:55.759 +03:00 [DBG] Bearer token found in header
2019-07-11 11:15:55.897 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 11:15:55.902 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 11:15:55.903 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-11 11:15:55.904 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-11 11:15:55.905 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562832954,"exp":1562836554,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","auth_time":1562832785,"idp":"Google","scope":["openid","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-11 11:15:55.909 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-11 11:15:55.918 +03:00 [DBG] Creating userinfo response
2019-07-11 11:15:55.923 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 11:15:55.926 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 11:15:55.930 +03:00 [DBG] Requested claim types: sub name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-11 11:15:55.930 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 11:15:55.931 +03:00 [DBG] Get profile called for subject c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-11 11:15:55.934 +03:00 [DBG] Issued claims: ["name","given_name","family_name"]
2019-07-11 11:15:55.934 +03:00 [INF] Profile service returned the following claim types: name given_name family_name
2019-07-11 11:15:55.934 +03:00 [DBG] End userinfo request
2019-07-11 11:15:55.966 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-11 11:15:55.968 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-11 11:15:55.969 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-11 11:15:55.971 +03:00 [DBG] Rendering check session result
2019-07-11 13:38:10.767 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 13:38:10.768 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 13:38:10.768 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 13:38:10.768 +03:00 [DBG] Start authorize request
2019-07-11 13:38:10.769 +03:00 [DBG] User in authorize request: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 13:38:10.770 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 13:38:10.771 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 13:38:10.772 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 13:38:10.773 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"f684a83511cb43949c5571b570fe8c92","UiLocales":null,"Nonce":"7dc14e3e33f94b9d95af9209c902c451","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f70dd3395ec6a193c476ee67962b60b6","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"f684a83511cb43949c5571b570fe8c92","nonce":"7dc14e3e33f94b9d95af9209c902c451"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 13:38:10.773 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 13:38:10.773 +03:00 [DBG] user_consent grant with value: spa|c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247 not found in store.
2019-07-11 13:38:10.773 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 13:38:10.773 +03:00 [INF] Showing consent: User has not yet consented
2019-07-11 13:38:10.788 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 13:38:10.788 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 13:38:10.788 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 13:38:10.789 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 13:38:13.496 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-11 13:38:13.496 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-11 13:38:13.496 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-11 13:38:13.496 +03:00 [DBG] Rendering check session result
2019-07-11 15:14:09.250 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-11 15:14:09.300 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-11 15:14:09.304 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-11 15:14:09.304 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-11 15:14:09.304 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-11 15:14:09.304 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-11 15:14:09.304 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-11 15:14:09.817 +03:00 [DBG] Login Url: /Account/Login
2019-07-11 15:14:09.820 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-11 15:14:09.821 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-11 15:14:09.821 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-11 15:14:09.821 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-11 15:14:09.821 +03:00 [DBG] Error Url: /home/error
2019-07-11 15:14:09.821 +03:00 [DBG] Error Id Parameter: errorId
2019-07-11 15:14:13.501 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-11 15:14:13.513 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-11 15:14:13.514 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-11 15:14:13.525 +03:00 [DBG] Processing signout callback request
2019-07-11 15:14:13.604 +03:00 [DBG] client configuration validation for client swagger succeeded.
2019-07-11 15:14:13.606 +03:00 [DBG] No client front-channel logout URLs
2019-07-11 15:14:13.606 +03:00 [DBG] No client back-channel logout URLs
2019-07-11 15:14:13.606 +03:00 [INF] Successful signout callback.
2019-07-11 15:14:13.606 +03:00 [DBG] No client front-channel iframe urls
2019-07-11 15:14:13.607 +03:00 [DBG] No client back-channel iframe urls
2019-07-11 15:14:17.652 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:14:17.656 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:14:17.657 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:14:17.665 +03:00 [DBG] Start discovery request
2019-07-11 15:14:46.647 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-11 15:14:46.650 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-11 15:14:46.651 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-11 15:14:46.666 +03:00 [DBG] Start userinfo request
2019-07-11 15:14:46.677 +03:00 [DBG] Bearer token not found
2019-07-11 15:14:46.677 +03:00 [ERR] No access token found.
2019-07-11 15:15:18.189 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-11 15:15:18.194 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-11 15:15:18.196 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-11 15:15:18.196 +03:00 [DBG] Start userinfo request
2019-07-11 15:15:18.196 +03:00 [DBG] Bearer token not found
2019-07-11 15:15:18.196 +03:00 [ERR] No access token found.
2019-07-11 15:37:47.360 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 15:37:47.375 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 15:37:47.375 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 15:37:47.383 +03:00 [DBG] Start authorize request
2019-07-11 15:37:47.400 +03:00 [DBG] User in authorize request: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 15:37:47.411 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:37:47.419 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:37:47.474 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:37:47.495 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"cd170bdc4eee44f0ae891e444aa1e833","UiLocales":null,"Nonce":"dd98c02d88b34c00b38baf7bebcf5305","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f70dd3395ec6a193c476ee67962b60b6","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"cd170bdc4eee44f0ae891e444aa1e833","nonce":"dd98c02d88b34c00b38baf7bebcf5305"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 15:37:47.528 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 15:37:47.530 +03:00 [INF] Showing login: User is not active
2019-07-11 15:37:47.598 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:37:47.599 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:37:47.599 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:37:47.607 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:38:11.560 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:38:11.574 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:38:11.574 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:38:11.578 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:38:11.578 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:38:11.578 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:38:11.579 +03:00 [DBG] Start discovery request
2019-07-11 15:38:11.601 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 15:38:11.603 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 15:38:11.603 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 15:38:11.603 +03:00 [DBG] Start authorize request
2019-07-11 15:38:11.604 +03:00 [DBG] User in authorize request: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 15:38:11.604 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:38:11.604 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:38:11.604 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:38:11.605 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"10ae1e3eefc04aa090ba70654848a482","UiLocales":null,"Nonce":"7005331a423a4c7690ac10b8f5a38573","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f70dd3395ec6a193c476ee67962b60b6","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"10ae1e3eefc04aa090ba70654848a482","nonce":"7005331a423a4c7690ac10b8f5a38573"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 15:38:11.605 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 15:38:11.605 +03:00 [INF] Showing login: User is not active
2019-07-11 15:38:11.625 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:38:11.625 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:38:11.626 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:38:11.626 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:38:14.234 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-11 15:38:14.235 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-11 15:38:14.235 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-11 15:38:14.240 +03:00 [DBG] Rendering check session result
2019-07-11 15:42:59.962 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 15:42:59.962 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 15:42:59.962 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 15:42:59.962 +03:00 [DBG] Start authorize request
2019-07-11 15:42:59.962 +03:00 [DBG] User in authorize request: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 15:42:59.963 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:42:59.963 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:42:59.963 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:42:59.964 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"8a8707534017407d9edeefa9fd85ba77","UiLocales":null,"Nonce":"6c15b5999c74403384da225533f36a98","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f70dd3395ec6a193c476ee67962b60b6","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"8a8707534017407d9edeefa9fd85ba77","nonce":"6c15b5999c74403384da225533f36a98"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 15:42:59.964 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 15:42:59.964 +03:00 [INF] Showing login: User is not active
2019-07-11 15:42:59.980 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:42:59.980 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:42:59.981 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:42:59.981 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:04.862 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:43:04.862 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:04.862 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:43:04.863 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:41.509 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:43:41.509 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:43:41.513 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:43:41.514 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:43:41.515 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:43:41.515 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:43:41.515 +03:00 [DBG] Start discovery request
2019-07-11 15:43:41.590 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 15:43:41.591 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 15:43:41.591 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 15:43:41.592 +03:00 [DBG] Start authorize request
2019-07-11 15:43:41.592 +03:00 [DBG] User in authorize request: c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247
2019-07-11 15:43:41.592 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:43:41.592 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:41.593 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:43:41.593 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"c96d58b121dc173326761c162339ce71f0e3f606ee0b4500892c7cddc1b72247","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"a813505eec6b4eca8bcf9b5618dd9cda","UiLocales":null,"Nonce":"ae34628aeaec416486d61b6967a0e538","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f70dd3395ec6a193c476ee67962b60b6","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"a813505eec6b4eca8bcf9b5618dd9cda","nonce":"ae34628aeaec416486d61b6967a0e538"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 15:43:41.593 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 15:43:41.593 +03:00 [INF] Showing login: User is not active
2019-07-11 15:43:41.628 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:43:41.628 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:41.629 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:43:41.630 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:46.876 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-11 15:43:49.494 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:43:49.494 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:49.495 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:43:49.495 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:53.162 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-11 15:43:53.213 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:43:53.213 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:53.215 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:43:53.229 +03:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"818727","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO5V53JVV8G:00000006","TimeStamp":"2019-07-11T12:43:53.0000000Z","ProcessId":10608,"LocalIpAddress":"127.0.0.1:44085","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-11 15:43:53.250 +03:00 [DBG] Augmenting SignInContext
2019-07-11 15:43:53.254 +03:00 [DBG] Adding idp claim with value: local
2019-07-11 15:43:53.254 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-11 15:43:53.269 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-11 15:43:53.270 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:53.280 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-11 15:43:53.282 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-11 15:43:53.282 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-11 15:43:53.292 +03:00 [DBG] Start authorize callback request
2019-07-11 15:43:53.300 +03:00 [DBG] User in authorize request: 818727
2019-07-11 15:43:53.300 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:43:53.300 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:53.300 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:43:53.301 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"a813505eec6b4eca8bcf9b5618dd9cda","UiLocales":null,"Nonce":"ae34628aeaec416486d61b6967a0e538","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8f704467a2b76c798b2d18acd78a504d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"a813505eec6b4eca8bcf9b5618dd9cda","nonce":"ae34628aeaec416486d61b6967a0e538"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 15:43:53.301 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 15:43:53.321 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-11 15:43:53.321 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 15:43:53.321 +03:00 [INF] Showing consent: User has not yet consented
2019-07-11 15:43:53.341 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:43:53.342 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:53.342 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:43:53.343 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:55.632 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-11 15:43:55.670 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:43:55.670 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:55.671 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:43:55.673 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO5V53JVV8G:00000008","TimeStamp":"2019-07-11T12:43:55.0000000Z","ProcessId":10608,"LocalIpAddress":"127.0.0.1:44085","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-11 15:43:55.700 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:55.711 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-11 15:43:55.712 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-11 15:43:55.712 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-11 15:43:55.712 +03:00 [DBG] Start authorize callback request
2019-07-11 15:43:55.715 +03:00 [DBG] User in authorize request: 818727
2019-07-11 15:43:55.715 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:43:55.715 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:55.716 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:43:55.716 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"a813505eec6b4eca8bcf9b5618dd9cda","UiLocales":null,"Nonce":"ae34628aeaec416486d61b6967a0e538","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8f704467a2b76c798b2d18acd78a504d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"a813505eec6b4eca8bcf9b5618dd9cda","nonce":"ae34628aeaec416486d61b6967a0e538"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 15:43:55.716 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 15:43:55.717 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-11 15:43:55.717 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 15:43:55.730 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-11 15:43:55.739 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-11 15:43:55.760 +03:00 [DBG] Creating Implicit Flow response.
2019-07-11 15:43:55.786 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-11 15:43:55.787 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-11 15:43:55.795 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-11 15:43:55.796 +03:00 [DBG] Issued claims: []
2019-07-11 15:43:55.917 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-11 15:43:55.917 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-11 15:43:55.934 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****TyNA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LNew","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO5V53JVV8C:00000009","TimeStamp":"2019-07-11T12:43:55.0000000Z","ProcessId":10608,"LocalIpAddress":"127.0.0.1:44085","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-11 15:43:55.937 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"a813505eec6b4eca8bcf9b5618dd9cda","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-11 15:43:55.956 +03:00 [DBG] Augmenting SignInContext
2019-07-11 15:43:55.957 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-11 15:43:58.077 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:43:58.086 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:43:58.086 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:43:58.086 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:43:58.087 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:43:58.087 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:43:58.087 +03:00 [DBG] Start discovery request
2019-07-11 15:43:58.180 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-11 15:43:58.180 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:43:58.180 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:43:58.181 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-11 15:43:58.187 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-11 15:43:58.187 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-11 15:43:58.198 +03:00 [DBG] Start key discovery request
2019-07-11 15:43:58.331 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-11 15:43:58.336 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:43:58.337 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:43:58.363 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-11 15:43:58.364 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:43:58.364 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:43:58.364 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-11 15:43:58.365 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-11 15:43:58.365 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-11 15:43:58.365 +03:00 [DBG] Start userinfo request
2019-07-11 15:43:58.365 +03:00 [DBG] Bearer token found in header
2019-07-11 15:43:58.539 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:58.550 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:43:58.552 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-11 15:43:58.553 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-11 15:43:58.555 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562849035,"exp":1562852635,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"818727","auth_time":1562849033,"idp":"local","scope":["openid","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-11 15:43:58.559 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-11 15:43:58.571 +03:00 [DBG] Creating userinfo response
2019-07-11 15:43:58.578 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 15:43:58.583 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 15:43:58.588 +03:00 [DBG] Requested claim types: sub name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-11 15:43:58.589 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 15:43:58.589 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-11 15:43:58.593 +03:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2019-07-11 15:43:58.593 +03:00 [INF] Profile service returned the following claim types: name given_name family_name website
2019-07-11 15:43:58.594 +03:00 [DBG] End userinfo request
2019-07-11 15:43:58.629 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-11 15:43:58.629 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-11 15:43:58.630 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-11 15:43:58.630 +03:00 [DBG] Rendering check session result
2019-07-11 15:48:01.200 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:48:01.201 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:48:01.201 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:48:01.201 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:48:01.202 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:48:01.202 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:48:01.202 +03:00 [DBG] Start discovery request
2019-07-11 15:48:01.205 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:48:01.205 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:48:01.205 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:48:01.206 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:48:01.206 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:48:01.206 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:48:01.206 +03:00 [DBG] Start discovery request
2019-07-11 15:48:01.309 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-11 15:48:01.310 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-11 15:48:01.310 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-11 15:48:01.310 +03:00 [DBG] Rendering check session result
2019-07-11 15:48:01.314 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 15:48:01.314 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 15:48:01.314 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 15:48:01.314 +03:00 [DBG] Start authorize request
2019-07-11 15:48:01.315 +03:00 [DBG] User in authorize request: 818727
2019-07-11 15:48:01.315 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:48:01.315 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:48:01.315 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:48:01.316 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"488413d27d104536b63291a958db72e4","UiLocales":null,"Nonce":"361891a417184f0b98d1713f630d34bc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8f704467a2b76c798b2d18acd78a504d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"488413d27d104536b63291a958db72e4","nonce":"361891a417184f0b98d1713f630d34bc"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 15:48:01.316 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 15:48:01.316 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-11 15:48:01.316 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 15:48:01.316 +03:00 [INF] Showing consent: User has not yet consented
2019-07-11 15:48:01.383 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:48:01.383 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:48:01.384 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:48:01.384 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:48:11.532 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-11 15:48:11.534 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:48:11.534 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:48:11.535 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:48:11.535 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO5V53JVV8L:00000002","TimeStamp":"2019-07-11T12:48:11.0000000Z","ProcessId":10608,"LocalIpAddress":"127.0.0.1:44085","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-11 15:48:11.536 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:48:11.551 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-11 15:48:11.552 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-11 15:48:11.552 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-11 15:48:11.552 +03:00 [DBG] Start authorize callback request
2019-07-11 15:48:11.552 +03:00 [DBG] User in authorize request: 818727
2019-07-11 15:48:11.553 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:48:11.553 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:48:11.554 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:48:11.554 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"488413d27d104536b63291a958db72e4","UiLocales":null,"Nonce":"361891a417184f0b98d1713f630d34bc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8f704467a2b76c798b2d18acd78a504d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"488413d27d104536b63291a958db72e4","nonce":"361891a417184f0b98d1713f630d34bc"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 15:48:11.554 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 15:48:11.554 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-11 15:48:11.554 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 15:48:11.555 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-11 15:48:11.555 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-11 15:48:11.555 +03:00 [DBG] Creating Implicit Flow response.
2019-07-11 15:48:11.555 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-11 15:48:11.555 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-11 15:48:11.555 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-11 15:48:11.556 +03:00 [DBG] Issued claims: []
2019-07-11 15:48:11.565 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-11 15:48:11.565 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-11 15:48:11.574 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3LrA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_Vng","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO5V53JVV8H:00000004","TimeStamp":"2019-07-11T12:48:11.0000000Z","ProcessId":10608,"LocalIpAddress":"127.0.0.1:44085","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-11 15:48:11.574 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"488413d27d104536b63291a958db72e4","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-11 15:48:14.134 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:48:14.135 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:48:14.135 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:48:14.135 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:48:14.136 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:48:14.136 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:48:14.136 +03:00 [DBG] Start discovery request
2019-07-11 15:48:14.197 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:48:14.197 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:48:14.197 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:48:14.198 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:48:14.198 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:48:14.199 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:48:14.199 +03:00 [DBG] Start discovery request
2019-07-11 15:48:14.208 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-11 15:48:14.208 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-11 15:48:14.208 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-11 15:48:14.209 +03:00 [DBG] Rendering check session result
2019-07-11 15:48:14.329 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-11 15:48:14.329 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:48:14.330 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:48:14.331 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-11 15:48:14.331 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-11 15:48:14.331 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-11 15:48:14.331 +03:00 [DBG] Start key discovery request
2019-07-11 15:48:14.473 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-11 15:48:14.474 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:48:14.474 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:48:14.499 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-11 15:48:14.499 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:48:14.499 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:48:14.500 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-11 15:48:14.500 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-11 15:48:14.500 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-11 15:48:14.500 +03:00 [DBG] Start userinfo request
2019-07-11 15:48:14.500 +03:00 [DBG] Bearer token found in header
2019-07-11 15:48:14.506 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:48:14.506 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:48:14.507 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-11 15:48:14.507 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-11 15:48:14.507 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562849291,"exp":1562852891,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"818727","auth_time":1562849033,"idp":"local","scope":["openid","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-11 15:48:14.507 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-11 15:48:14.507 +03:00 [DBG] Creating userinfo response
2019-07-11 15:48:14.507 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 15:48:14.508 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 15:48:14.508 +03:00 [DBG] Requested claim types: sub name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-11 15:48:14.508 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 15:48:14.508 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-11 15:48:14.508 +03:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2019-07-11 15:48:14.508 +03:00 [INF] Profile service returned the following claim types: name given_name family_name website
2019-07-11 15:48:14.508 +03:00 [DBG] End userinfo request
2019-07-11 15:48:39.317 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:48:39.319 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:48:39.319 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:48:39.319 +03:00 [DBG] Start discovery request
2019-07-11 15:48:39.599 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-11 15:48:39.599 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-11 15:48:39.599 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-11 15:48:39.599 +03:00 [DBG] Start key discovery request
2019-07-11 15:49:23.641 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:49:23.641 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:49:23.641 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:49:23.641 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:49:23.641 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:49:23.641 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:49:23.642 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:49:23.642 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:49:23.643 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:49:23.643 +03:00 [DBG] Start discovery request
2019-07-11 15:49:23.643 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:49:23.643 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:49:23.644 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:49:23.644 +03:00 [DBG] Start discovery request
2019-07-11 15:49:23.715 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-11 15:49:23.715 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-11 15:49:23.715 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-11 15:49:23.715 +03:00 [DBG] Rendering check session result
2019-07-11 15:49:23.737 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 15:49:23.740 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 15:49:23.741 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 15:49:23.744 +03:00 [DBG] Start authorize request
2019-07-11 15:49:23.745 +03:00 [DBG] User in authorize request: 818727
2019-07-11 15:49:23.745 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:49:23.745 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:49:23.746 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:49:23.746 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"c478241aa91b4d739fa9d6cd96794c7f","UiLocales":null,"Nonce":"d15c5144dc144473896c835f569d7dec","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8f704467a2b76c798b2d18acd78a504d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"c478241aa91b4d739fa9d6cd96794c7f","nonce":"d15c5144dc144473896c835f569d7dec"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 15:49:23.746 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 15:49:23.746 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-11 15:49:23.746 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 15:49:23.746 +03:00 [INF] Showing consent: User has not yet consented
2019-07-11 15:49:23.795 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:49:23.796 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:49:23.796 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:49:23.796 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:49:26.324 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-11 15:49:26.327 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:49:26.328 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:49:26.329 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:49:26.329 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO5V53JVV8N:00000002","TimeStamp":"2019-07-11T12:49:26.0000000Z","ProcessId":10608,"LocalIpAddress":"127.0.0.1:44085","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-11 15:49:26.330 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:49:26.345 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-11 15:49:26.345 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-11 15:49:26.345 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-11 15:49:26.346 +03:00 [DBG] Start authorize callback request
2019-07-11 15:49:26.346 +03:00 [DBG] User in authorize request: 818727
2019-07-11 15:49:26.346 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:49:26.346 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:49:26.347 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:49:26.347 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"c478241aa91b4d739fa9d6cd96794c7f","UiLocales":null,"Nonce":"d15c5144dc144473896c835f569d7dec","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8f704467a2b76c798b2d18acd78a504d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"c478241aa91b4d739fa9d6cd96794c7f","nonce":"d15c5144dc144473896c835f569d7dec"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 15:49:26.347 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 15:49:26.348 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-11 15:49:26.348 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 15:49:26.348 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-11 15:49:26.348 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-11 15:49:26.348 +03:00 [DBG] Creating Implicit Flow response.
2019-07-11 15:49:26.348 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-11 15:49:26.348 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-11 15:49:26.348 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-11 15:49:26.349 +03:00 [DBG] Issued claims: []
2019-07-11 15:49:26.357 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-11 15:49:26.358 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-11 15:49:26.367 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****SZkg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****jmhw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO5V53JVV8K:00000008","TimeStamp":"2019-07-11T12:49:26.0000000Z","ProcessId":10608,"LocalIpAddress":"127.0.0.1:44085","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-11 15:49:26.367 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"c478241aa91b4d739fa9d6cd96794c7f","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-11 15:49:28.777 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:49:28.779 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:49:28.779 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:49:28.779 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:49:28.780 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:49:28.780 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:49:28.780 +03:00 [DBG] Start discovery request
2019-07-11 15:49:28.904 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:49:28.904 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:49:28.905 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:49:28.905 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:49:28.906 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:49:28.906 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:49:28.906 +03:00 [DBG] Start discovery request
2019-07-11 15:49:28.938 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-11 15:49:28.944 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-11 15:49:28.944 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-11 15:49:28.944 +03:00 [DBG] Rendering check session result
2019-07-11 15:49:28.970 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-11 15:49:28.970 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:49:28.970 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:49:28.971 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-11 15:49:28.971 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-11 15:49:28.971 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-11 15:49:28.971 +03:00 [DBG] Start key discovery request
2019-07-11 15:49:29.109 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-11 15:49:29.111 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:49:29.111 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:49:29.129 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-11 15:49:29.129 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:49:29.129 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:49:29.129 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-11 15:49:29.130 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-11 15:49:29.130 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-11 15:49:29.130 +03:00 [DBG] Start userinfo request
2019-07-11 15:49:29.130 +03:00 [DBG] Bearer token found in header
2019-07-11 15:49:29.135 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:49:29.135 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:49:29.135 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-11 15:49:29.136 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-11 15:49:29.136 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562849366,"exp":1562852966,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"818727","auth_time":1562849033,"idp":"local","scope":["openid","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-11 15:49:29.136 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-11 15:49:29.136 +03:00 [DBG] Creating userinfo response
2019-07-11 15:49:29.136 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 15:49:29.136 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 15:49:29.136 +03:00 [DBG] Requested claim types: sub name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-11 15:49:29.136 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 15:49:29.137 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-11 15:49:29.137 +03:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2019-07-11 15:49:29.137 +03:00 [INF] Profile service returned the following claim types: name given_name family_name website
2019-07-11 15:49:29.137 +03:00 [DBG] End userinfo request
2019-07-11 15:51:35.217 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:51:35.217 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:51:35.217 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:51:35.218 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:51:35.218 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:51:35.218 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:51:35.219 +03:00 [DBG] Start discovery request
2019-07-11 15:51:35.244 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 15:51:35.245 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 15:51:35.245 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 15:51:35.245 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 15:51:35.245 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 15:51:35.245 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 15:51:35.245 +03:00 [DBG] Start discovery request
2019-07-11 15:51:35.278 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 15:51:35.279 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 15:51:35.279 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 15:51:35.279 +03:00 [DBG] Start authorize request
2019-07-11 15:51:35.279 +03:00 [DBG] User in authorize request: 818727
2019-07-11 15:51:35.279 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:51:35.279 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:51:35.280 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:51:35.280 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"05438bbcfa3d40e885743c636344ef62","UiLocales":null,"Nonce":"41375af8cbcf4c19a1219972969da78a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8f704467a2b76c798b2d18acd78a504d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"05438bbcfa3d40e885743c636344ef62","nonce":"41375af8cbcf4c19a1219972969da78a"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 15:51:35.280 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 15:51:35.280 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-11 15:51:35.281 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 15:51:35.281 +03:00 [INF] Showing consent: User has not yet consented
2019-07-11 15:51:35.283 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-11 15:51:35.283 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-11 15:51:35.283 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-11 15:51:35.283 +03:00 [DBG] Rendering check session result
2019-07-11 15:51:35.318 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 15:51:35.319 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 15:51:35.319 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 15:51:35.319 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:02:22.607 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-11 16:02:22.700 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-11 16:02:22.707 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-11 16:02:22.708 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-11 16:02:22.708 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-11 16:02:22.708 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-11 16:02:22.708 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-11 16:02:23.239 +03:00 [DBG] Login Url: /Account/Login
2019-07-11 16:02:23.242 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-11 16:02:23.242 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-11 16:02:23.242 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-11 16:02:23.243 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-11 16:02:23.243 +03:00 [DBG] Error Url: /home/error
2019-07-11 16:02:23.243 +03:00 [DBG] Error Id Parameter: errorId
2019-07-11 16:02:34.163 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 16:02:34.174 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:02:34.174 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:02:34.182 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:02:34.191 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:02:34.191 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:02:34.197 +03:00 [DBG] Start discovery request
2019-07-11 16:02:34.326 +03:00 [INF] {"Details":"System.Exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile\r\n   at IdentityServer4.Stores.IResourceStoreExtensions.Validate(IEnumerable`1 identity, IEnumerable`1 apiResources) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Extensions\\IResourceStoreExtensions.cs:line 58\r\n   at IdentityServer4.Stores.IResourceStoreExtensions.GetAllEnabledResourcesAsync(IResourceStore store) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Extensions\\IResourceStoreExtensions.cs:line 108\r\n   at IdentityServer4.ResponseHandling.DiscoveryResponseGenerator.CreateDiscoveryDocumentAsync(String baseUrl, String issuerUri) in C:\\local\\identity\\server4\\IdentityServer4\\src\\ResponseHandling\\Default\\DiscoveryResponseGenerator.cs:line 169\r\n   at IdentityServer4.Endpoints.DiscoveryEndpoint.ProcessAsync(HttpContext context) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Endpoints\\DiscoveryEndpoint.cs:line 58\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Hosting\\IdentityServerMiddleware.cs:line 54","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile","ActivityId":"0HLO6001TQT4E:00000002","TimeStamp":"2019-07-11T13:02:34.0000000Z","ProcessId":3336,"LocalIpAddress":"127.0.0.1:39220","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2019-07-11 16:02:34.339 +03:00 [FTL] Unhandled exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile
System.Exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile
   at IdentityServer4.Stores.IResourceStoreExtensions.Validate(IEnumerable`1 identity, IEnumerable`1 apiResources) in C:\local\identity\server4\IdentityServer4\src\Extensions\IResourceStoreExtensions.cs:line 58
   at IdentityServer4.Stores.IResourceStoreExtensions.GetAllEnabledResourcesAsync(IResourceStore store) in C:\local\identity\server4\IdentityServer4\src\Extensions\IResourceStoreExtensions.cs:line 108
   at IdentityServer4.ResponseHandling.DiscoveryResponseGenerator.CreateDiscoveryDocumentAsync(String baseUrl, String issuerUri) in C:\local\identity\server4\IdentityServer4\src\ResponseHandling\Default\DiscoveryResponseGenerator.cs:line 169
   at IdentityServer4.Endpoints.DiscoveryEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Endpoints\DiscoveryEndpoint.cs:line 58
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
2019-07-11 16:02:34.345 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile
   at IdentityServer4.Stores.IResourceStoreExtensions.Validate(IEnumerable`1 identity, IEnumerable`1 apiResources) in C:\local\identity\server4\IdentityServer4\src\Extensions\IResourceStoreExtensions.cs:line 58
   at IdentityServer4.Stores.IResourceStoreExtensions.GetAllEnabledResourcesAsync(IResourceStore store) in C:\local\identity\server4\IdentityServer4\src\Extensions\IResourceStoreExtensions.cs:line 108
   at IdentityServer4.ResponseHandling.DiscoveryResponseGenerator.CreateDiscoveryDocumentAsync(String baseUrl, String issuerUri) in C:\local\identity\server4\IdentityServer4\src\ResponseHandling\Default\DiscoveryResponseGenerator.cs:line 169
   at IdentityServer4.Endpoints.DiscoveryEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Endpoints\DiscoveryEndpoint.cs:line 58
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-11 16:02:38.609 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 16:02:38.609 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:02:38.612 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:02:38.613 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:02:38.613 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:02:38.613 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:02:38.614 +03:00 [DBG] Start discovery request
2019-07-11 16:02:38.615 +03:00 [INF] {"Details":"System.Exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile\r\n   at IdentityServer4.Stores.IResourceStoreExtensions.Validate(IEnumerable`1 identity, IEnumerable`1 apiResources) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Extensions\\IResourceStoreExtensions.cs:line 58\r\n   at IdentityServer4.Stores.IResourceStoreExtensions.GetAllEnabledResourcesAsync(IResourceStore store) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Extensions\\IResourceStoreExtensions.cs:line 108\r\n   at IdentityServer4.ResponseHandling.DiscoveryResponseGenerator.CreateDiscoveryDocumentAsync(String baseUrl, String issuerUri) in C:\\local\\identity\\server4\\IdentityServer4\\src\\ResponseHandling\\Default\\DiscoveryResponseGenerator.cs:line 169\r\n   at IdentityServer4.Endpoints.DiscoveryEndpoint.ProcessAsync(HttpContext context) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Endpoints\\DiscoveryEndpoint.cs:line 58\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Hosting\\IdentityServerMiddleware.cs:line 54","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile","ActivityId":"0HLO6001TQT4E:00000003","TimeStamp":"2019-07-11T13:02:38.0000000Z","ProcessId":3336,"LocalIpAddress":"127.0.0.1:39220","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2019-07-11 16:02:38.616 +03:00 [FTL] Unhandled exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile
System.Exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile
   at IdentityServer4.Stores.IResourceStoreExtensions.Validate(IEnumerable`1 identity, IEnumerable`1 apiResources) in C:\local\identity\server4\IdentityServer4\src\Extensions\IResourceStoreExtensions.cs:line 58
   at IdentityServer4.Stores.IResourceStoreExtensions.GetAllEnabledResourcesAsync(IResourceStore store) in C:\local\identity\server4\IdentityServer4\src\Extensions\IResourceStoreExtensions.cs:line 108
   at IdentityServer4.ResponseHandling.DiscoveryResponseGenerator.CreateDiscoveryDocumentAsync(String baseUrl, String issuerUri) in C:\local\identity\server4\IdentityServer4\src\ResponseHandling\Default\DiscoveryResponseGenerator.cs:line 169
   at IdentityServer4.Endpoints.DiscoveryEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Endpoints\DiscoveryEndpoint.cs:line 58
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
2019-07-11 16:02:38.618 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile
   at IdentityServer4.Stores.IResourceStoreExtensions.Validate(IEnumerable`1 identity, IEnumerable`1 apiResources) in C:\local\identity\server4\IdentityServer4\src\Extensions\IResourceStoreExtensions.cs:line 58
   at IdentityServer4.Stores.IResourceStoreExtensions.GetAllEnabledResourcesAsync(IResourceStore store) in C:\local\identity\server4\IdentityServer4\src\Extensions\IResourceStoreExtensions.cs:line 108
   at IdentityServer4.ResponseHandling.DiscoveryResponseGenerator.CreateDiscoveryDocumentAsync(String baseUrl, String issuerUri) in C:\local\identity\server4\IdentityServer4\src\ResponseHandling\Default\DiscoveryResponseGenerator.cs:line 169
   at IdentityServer4.Endpoints.DiscoveryEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Endpoints\DiscoveryEndpoint.cs:line 58
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-11 16:02:54.896 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 16:02:54.896 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:02:54.896 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:02:54.897 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:02:54.898 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:02:54.898 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:02:54.898 +03:00 [DBG] Start discovery request
2019-07-11 16:02:54.899 +03:00 [INF] {"Details":"System.Exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile\r\n   at IdentityServer4.Stores.IResourceStoreExtensions.Validate(IEnumerable`1 identity, IEnumerable`1 apiResources) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Extensions\\IResourceStoreExtensions.cs:line 58\r\n   at IdentityServer4.Stores.IResourceStoreExtensions.GetAllEnabledResourcesAsync(IResourceStore store) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Extensions\\IResourceStoreExtensions.cs:line 108\r\n   at IdentityServer4.ResponseHandling.DiscoveryResponseGenerator.CreateDiscoveryDocumentAsync(String baseUrl, String issuerUri) in C:\\local\\identity\\server4\\IdentityServer4\\src\\ResponseHandling\\Default\\DiscoveryResponseGenerator.cs:line 169\r\n   at IdentityServer4.Endpoints.DiscoveryEndpoint.ProcessAsync(HttpContext context) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Endpoints\\DiscoveryEndpoint.cs:line 58\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\\local\\identity\\server4\\IdentityServer4\\src\\Hosting\\IdentityServerMiddleware.cs:line 54","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile","ActivityId":"0HLO6001TQT4E:00000004","TimeStamp":"2019-07-11T13:02:54.0000000Z","ProcessId":3336,"LocalIpAddress":"127.0.0.1:39220","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2019-07-11 16:02:54.900 +03:00 [FTL] Unhandled exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile
System.Exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile
   at IdentityServer4.Stores.IResourceStoreExtensions.Validate(IEnumerable`1 identity, IEnumerable`1 apiResources) in C:\local\identity\server4\IdentityServer4\src\Extensions\IResourceStoreExtensions.cs:line 58
   at IdentityServer4.Stores.IResourceStoreExtensions.GetAllEnabledResourcesAsync(IResourceStore store) in C:\local\identity\server4\IdentityServer4\src\Extensions\IResourceStoreExtensions.cs:line 108
   at IdentityServer4.ResponseHandling.DiscoveryResponseGenerator.CreateDiscoveryDocumentAsync(String baseUrl, String issuerUri) in C:\local\identity\server4\IdentityServer4\src\ResponseHandling\Default\DiscoveryResponseGenerator.cs:line 169
   at IdentityServer4.Endpoints.DiscoveryEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Endpoints\DiscoveryEndpoint.cs:line 58
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
2019-07-11 16:02:54.902 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: profile
   at IdentityServer4.Stores.IResourceStoreExtensions.Validate(IEnumerable`1 identity, IEnumerable`1 apiResources) in C:\local\identity\server4\IdentityServer4\src\Extensions\IResourceStoreExtensions.cs:line 58
   at IdentityServer4.Stores.IResourceStoreExtensions.GetAllEnabledResourcesAsync(IResourceStore store) in C:\local\identity\server4\IdentityServer4\src\Extensions\IResourceStoreExtensions.cs:line 108
   at IdentityServer4.ResponseHandling.DiscoveryResponseGenerator.CreateDiscoveryDocumentAsync(String baseUrl, String issuerUri) in C:\local\identity\server4\IdentityServer4\src\ResponseHandling\Default\DiscoveryResponseGenerator.cs:line 169
   at IdentityServer4.Endpoints.DiscoveryEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Endpoints\DiscoveryEndpoint.cs:line 58
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-07-11 16:10:28.858 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-11 16:10:28.958 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-11 16:10:28.965 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-11 16:10:28.965 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-11 16:10:28.965 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-11 16:10:28.965 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-11 16:10:28.965 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-11 16:10:29.469 +03:00 [DBG] Login Url: /Account/Login
2019-07-11 16:10:29.474 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-11 16:10:29.474 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-11 16:10:29.474 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-11 16:10:29.475 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-11 16:10:29.475 +03:00 [DBG] Error Url: /home/error
2019-07-11 16:10:29.475 +03:00 [DBG] Error Id Parameter: errorId
2019-07-11 16:20:16.222 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 16:20:16.228 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:20:16.228 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:20:16.237 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:20:16.249 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:20:16.249 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:20:16.256 +03:00 [DBG] Start discovery request
2019-07-11 16:20:16.338 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 16:20:16.344 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 16:20:16.344 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 16:20:16.354 +03:00 [DBG] Start authorize request
2019-07-11 16:20:16.368 +03:00 [DBG] User in authorize request: 818727
2019-07-11 16:20:16.376 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:20:16.406 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:20:16.464 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:20:16.483 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"f1649601ffc04143ad263d91184172cc","UiLocales":null,"Nonce":"a9ddfe652eb34ae18049845d79fbc801","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8f704467a2b76c798b2d18acd78a504d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"f1649601ffc04143ad263d91184172cc","nonce":"a9ddfe652eb34ae18049845d79fbc801"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 16:20:16.513 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 16:20:16.533 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-11 16:20:16.533 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 16:20:16.533 +03:00 [INF] Showing consent: User has not yet consented
2019-07-11 16:20:16.648 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:20:16.649 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:20:16.650 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:20:16.655 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:20:19.291 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-11 16:20:19.368 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:20:19.368 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:20:19.369 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:20:19.385 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO604IQF96G:00000005","TimeStamp":"2019-07-11T13:20:19.0000000Z","ProcessId":5484,"LocalIpAddress":"127.0.0.1:15535","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-11 16:20:19.416 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:20:19.426 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-11 16:20:19.428 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-11 16:20:19.428 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-11 16:20:19.442 +03:00 [DBG] Start authorize callback request
2019-07-11 16:20:19.454 +03:00 [DBG] User in authorize request: 818727
2019-07-11 16:20:19.454 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:20:19.454 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:20:19.455 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:20:19.455 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"f1649601ffc04143ad263d91184172cc","UiLocales":null,"Nonce":"a9ddfe652eb34ae18049845d79fbc801","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8f704467a2b76c798b2d18acd78a504d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"f1649601ffc04143ad263d91184172cc","nonce":"a9ddfe652eb34ae18049845d79fbc801"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 16:20:19.455 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 16:20:19.455 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-11 16:20:19.456 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 16:20:19.466 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-11 16:20:19.471 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-11 16:20:19.494 +03:00 [DBG] Creating Implicit Flow response.
2019-07-11 16:20:19.520 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-11 16:20:19.521 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-11 16:20:19.530 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-11 16:20:19.532 +03:00 [DBG] Issued claims: []
2019-07-11 16:20:19.677 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-11 16:20:19.678 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-11 16:20:19.702 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****O88g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****4v5Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO604IQF96K:00000002","TimeStamp":"2019-07-11T13:20:19.0000000Z","ProcessId":5484,"LocalIpAddress":"127.0.0.1:15535","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-11 16:20:19.706 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"f1649601ffc04143ad263d91184172cc","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-11 16:20:22.056 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 16:20:22.057 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:20:22.057 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:20:22.057 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:20:22.058 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:20:22.058 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:20:22.058 +03:00 [DBG] Start discovery request
2019-07-11 16:20:22.137 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-11 16:20:22.137 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:20:22.137 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:20:22.137 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-11 16:20:22.138 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-11 16:20:22.138 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-11 16:20:22.146 +03:00 [DBG] Start key discovery request
2019-07-11 16:20:22.286 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-11 16:20:22.287 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:20:22.287 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:20:22.312 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-11 16:20:22.313 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:20:22.313 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:20:22.314 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-11 16:20:22.317 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-11 16:20:22.317 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-11 16:20:22.333 +03:00 [DBG] Start userinfo request
2019-07-11 16:20:22.343 +03:00 [DBG] Bearer token found in header
2019-07-11 16:20:22.498 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:20:22.506 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:20:22.507 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-11 16:20:22.508 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-11 16:20:22.510 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562851219,"exp":1562854819,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"818727","auth_time":1562849033,"idp":"local","scope":["openid","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-11 16:20:22.512 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-11 16:20:22.525 +03:00 [DBG] Creating userinfo response
2019-07-11 16:20:22.533 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 16:20:22.539 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 16:20:22.544 +03:00 [DBG] Requested claim types: sub name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-11 16:20:22.545 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 16:20:22.545 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-11 16:20:22.547 +03:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2019-07-11 16:20:22.547 +03:00 [INF] Profile service returned the following claim types: name given_name family_name website
2019-07-11 16:20:22.548 +03:00 [DBG] End userinfo request
2019-07-11 16:20:22.611 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-11 16:20:22.612 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-11 16:20:22.612 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-11 16:20:22.615 +03:00 [DBG] Rendering check session result
2019-07-11 16:20:37.329 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:20:37.331 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:20:37.331 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:20:37.331 +03:00 [DBG] Start discovery request
2019-07-11 16:20:37.593 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-11 16:20:37.593 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-11 16:20:37.594 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-11 16:20:37.594 +03:00 [DBG] Start key discovery request
2019-07-11 16:37:44.094 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-11 16:37:44.094 +03:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-11 16:37:44.094 +03:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-11 16:37:44.095 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:37:44.095 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:37:44.095 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:37:44.095 +03:00 [DBG] Start discovery request
2019-07-11 16:38:14.938 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-11 16:38:14.938 +03:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-11 16:38:14.938 +03:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-11 16:38:14.939 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:38:14.939 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:38:14.940 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:38:14.941 +03:00 [DBG] Start discovery request
2019-07-11 16:38:17.873 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-11 16:38:17.873 +03:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-11 16:38:17.874 +03:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-11 16:38:17.876 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:38:17.876 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:38:17.876 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:38:17.876 +03:00 [DBG] Start discovery request
2019-07-11 16:38:21.856 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-11 16:38:21.856 +03:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-11 16:38:21.856 +03:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-11 16:38:21.857 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:38:21.857 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:38:21.857 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:38:21.857 +03:00 [DBG] Start discovery request
2019-07-11 16:38:29.994 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-11 16:38:29.994 +03:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-11 16:38:29.994 +03:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-11 16:38:29.997 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:38:29.998 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:38:29.998 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:38:29.998 +03:00 [DBG] Start discovery request
2019-07-11 16:38:31.926 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-11 16:38:31.927 +03:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-11 16:38:31.927 +03:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-11 16:38:31.927 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:38:31.928 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:38:31.928 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:38:31.929 +03:00 [DBG] Start discovery request
2019-07-11 16:39:41.895 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-11 16:39:41.895 +03:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-11 16:39:41.895 +03:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-11 16:39:41.905 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:39:41.905 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:39:41.905 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:39:41.905 +03:00 [DBG] Start discovery request
2019-07-11 16:39:53.587 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-11 16:39:53.587 +03:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-11 16:39:53.587 +03:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-11 16:39:53.588 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:39:53.588 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:39:53.589 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:39:53.589 +03:00 [DBG] Start discovery request
2019-07-11 16:40:59.341 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 16:40:59.342 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:40:59.342 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:40:59.343 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:40:59.343 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:40:59.343 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:40:59.343 +03:00 [DBG] Start discovery request
2019-07-11 16:40:59.344 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 16:40:59.344 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:40:59.344 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:40:59.344 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:40:59.345 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:40:59.345 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:40:59.345 +03:00 [DBG] Start discovery request
2019-07-11 16:40:59.446 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 16:40:59.447 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 16:40:59.447 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 16:40:59.447 +03:00 [DBG] Start authorize request
2019-07-11 16:40:59.448 +03:00 [DBG] User in authorize request: 818727
2019-07-11 16:40:59.448 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:40:59.448 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:40:59.449 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:40:59.449 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"5768a67de13b447dba8f60af8da33a71","UiLocales":null,"Nonce":"1acb1ee02c4a4f60bde5591315e785f6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8f704467a2b76c798b2d18acd78a504d","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"5768a67de13b447dba8f60af8da33a71","nonce":"1acb1ee02c4a4f60bde5591315e785f6"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 16:40:59.449 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 16:40:59.449 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-11 16:40:59.450 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 16:40:59.450 +03:00 [INF] Showing consent: User has not yet consented
2019-07-11 16:40:59.450 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-11 16:40:59.450 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-11 16:40:59.450 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-11 16:40:59.450 +03:00 [DBG] Rendering check session result
2019-07-11 16:40:59.527 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:40:59.530 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:40:59.531 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:40:59.531 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:38.158 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 16:41:38.158 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:41:38.158 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:41:38.158 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:41:38.158 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:41:38.159 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:41:38.159 +03:00 [DBG] Start discovery request
2019-07-11 16:41:38.261 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-11 16:41:38.261 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-11 16:41:38.261 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-11 16:41:38.261 +03:00 [DBG] Start authorize request
2019-07-11 16:41:38.261 +03:00 [DBG] No user present in authorize request
2019-07-11 16:41:38.261 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:41:38.263 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:38.263 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:41:38.264 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"c9c9c16672ab45ce85e86ce0351e790a","UiLocales":null,"Nonce":"8314f2b2568e43759143f06378df0bbb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"c9c9c16672ab45ce85e86ce0351e790a","nonce":"8314f2b2568e43759143f06378df0bbb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 16:41:38.264 +03:00 [INF] Showing login: User is not authenticated
2019-07-11 16:41:38.301 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:41:38.301 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:38.302 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:41:38.305 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:49.819 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-11 16:41:49.892 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:41:49.892 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:49.893 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:41:49.901 +03:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"818727","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO604IQF96O:00000006","TimeStamp":"2019-07-11T13:41:49.0000000Z","ProcessId":5484,"LocalIpAddress":"127.0.0.1:15535","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-11 16:41:49.939 +03:00 [DBG] Augmenting SignInContext
2019-07-11 16:41:49.946 +03:00 [DBG] Adding idp claim with value: local
2019-07-11 16:41:49.946 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-11 16:41:49.958 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-11 16:41:49.959 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:49.970 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-11 16:41:49.970 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-11 16:41:49.970 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-11 16:41:49.971 +03:00 [DBG] Start authorize callback request
2019-07-11 16:41:49.971 +03:00 [DBG] User in authorize request: 818727
2019-07-11 16:41:49.971 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:41:49.971 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:49.971 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:41:49.972 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"c9c9c16672ab45ce85e86ce0351e790a","UiLocales":null,"Nonce":"8314f2b2568e43759143f06378df0bbb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"a850fd015b76d38adc285569cda48b4a","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"c9c9c16672ab45ce85e86ce0351e790a","nonce":"8314f2b2568e43759143f06378df0bbb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 16:41:49.972 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 16:41:49.972 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-11 16:41:49.972 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 16:41:49.972 +03:00 [INF] Showing consent: User has not yet consented
2019-07-11 16:41:50.035 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:41:50.035 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:50.036 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:41:50.036 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:54.252 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-11 16:41:54.260 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:41:54.260 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:54.261 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:41:54.264 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO604IQF96Q:00000005","TimeStamp":"2019-07-11T13:41:54.0000000Z","ProcessId":5484,"LocalIpAddress":"127.0.0.1:15535","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-11 16:41:54.267 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:54.314 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-11 16:41:54.314 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-11 16:41:54.314 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-11 16:41:54.314 +03:00 [DBG] Start authorize callback request
2019-07-11 16:41:54.316 +03:00 [DBG] User in authorize request: 818727
2019-07-11 16:41:54.317 +03:00 [DBG] Start authorize request protocol validation
2019-07-11 16:41:54.317 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:54.319 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-11 16:41:54.320 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"c9c9c16672ab45ce85e86ce0351e790a","UiLocales":null,"Nonce":"8314f2b2568e43759143f06378df0bbb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"a850fd015b76d38adc285569cda48b4a","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"c9c9c16672ab45ce85e86ce0351e790a","nonce":"8314f2b2568e43759143f06378df0bbb"},"$type":"AuthorizeRequestValidationLog"}
2019-07-11 16:41:54.320 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-11 16:41:54.321 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-11 16:41:54.321 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-11 16:41:54.322 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-11 16:41:54.322 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-11 16:41:54.322 +03:00 [DBG] Creating Implicit Flow response.
2019-07-11 16:41:54.323 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-11 16:41:54.323 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-11 16:41:54.323 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-11 16:41:54.323 +03:00 [DBG] Issued claims: []
2019-07-11 16:41:54.332 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-11 16:41:54.332 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-11 16:41:54.342 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****XXqg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****spnQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO604IQF96O:00000008","TimeStamp":"2019-07-11T13:41:54.0000000Z","ProcessId":5484,"LocalIpAddress":"127.0.0.1:15535","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-11 16:41:54.343 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"c9c9c16672ab45ce85e86ce0351e790a","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-11 16:41:54.355 +03:00 [DBG] Augmenting SignInContext
2019-07-11 16:41:54.356 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-11 16:41:56.854 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-11 16:41:56.855 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:41:56.855 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:41:56.855 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:41:56.856 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:41:56.856 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:41:56.856 +03:00 [DBG] Start discovery request
2019-07-11 16:41:56.914 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-11 16:41:56.915 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:41:56.915 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:41:56.916 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-11 16:41:56.916 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-11 16:41:56.916 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-11 16:41:56.916 +03:00 [DBG] Start key discovery request
2019-07-11 16:41:57.032 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-11 16:41:57.032 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:41:57.032 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:41:57.068 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-11 16:41:57.068 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-11 16:41:57.069 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-11 16:41:57.069 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-11 16:41:57.069 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-11 16:41:57.069 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-11 16:41:57.070 +03:00 [DBG] Start userinfo request
2019-07-11 16:41:57.070 +03:00 [DBG] Bearer token found in header
2019-07-11 16:41:57.076 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:57.077 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-11 16:41:57.077 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-11 16:41:57.077 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-11 16:41:57.078 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562852514,"exp":1562856114,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"818727","auth_time":1562852509,"idp":"local","scope":["openid","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-11 16:41:57.078 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-11 16:41:57.078 +03:00 [DBG] Creating userinfo response
2019-07-11 16:41:57.079 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 16:41:57.079 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 16:41:57.079 +03:00 [DBG] Requested claim types: sub name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-11 16:41:57.079 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-11 16:41:57.080 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-11 16:41:57.080 +03:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2019-07-11 16:41:57.080 +03:00 [INF] Profile service returned the following claim types: name given_name family_name website
2019-07-11 16:41:57.080 +03:00 [DBG] End userinfo request
2019-07-11 16:41:57.136 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-11 16:41:57.136 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-11 16:41:57.136 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-11 16:41:57.136 +03:00 [DBG] Rendering check session result
2019-07-11 16:43:21.329 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-11 16:43:21.329 +03:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-11 16:43:21.329 +03:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-11 16:43:21.329 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-11 16:43:21.330 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-11 16:43:21.330 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-11 16:43:21.330 +03:00 [DBG] Start discovery request
2019-07-12 10:39:55.811 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-12 10:39:56.028 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-12 10:39:56.034 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-12 10:39:56.035 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-12 10:39:56.035 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-12 10:39:56.036 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-12 10:39:56.036 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-12 10:39:57.285 +03:00 [DBG] Login Url: /Account/Login
2019-07-12 10:39:57.292 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-12 10:39:57.294 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-12 10:39:57.295 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-12 10:39:57.295 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-12 10:39:57.295 +03:00 [DBG] Error Url: /home/error
2019-07-12 10:39:57.295 +03:00 [DBG] Error Id Parameter: errorId
2019-07-12 11:15:55.253 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 11:15:55.280 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:15:55.280 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:15:55.286 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:15:55.295 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:15:55.296 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:15:55.310 +03:00 [DBG] Start discovery request
2019-07-12 11:15:55.620 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-12 11:15:55.629 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-12 11:15:55.629 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-12 11:15:55.639 +03:00 [DBG] Start authorize request
2019-07-12 11:15:55.699 +03:00 [DBG] No user present in authorize request
2019-07-12 11:15:55.757 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:15:55.826 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:15:55.944 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:15:56.001 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"55197028446e4d74aea7ae530152e141","UiLocales":null,"Nonce":"051b443081bc417f94dd648b846cacd0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"55197028446e4d74aea7ae530152e141","nonce":"051b443081bc417f94dd648b846cacd0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 11:15:56.052 +03:00 [INF] Showing login: User is not authenticated
2019-07-12 11:15:56.190 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:15:56.192 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:15:56.192 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:15:56.197 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:16:03.340 +03:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-12 11:16:03.546 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:16:03.546 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:16:03.546 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:16:03.586 +03:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"818727","DisplayName":"alice","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO6JGHGS22R:00000004","TimeStamp":"2019-07-12T08:16:03.0000000Z","ProcessId":11048,"LocalIpAddress":"127.0.0.1:5226","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-12 11:16:03.618 +03:00 [DBG] Augmenting SignInContext
2019-07-12 11:16:03.624 +03:00 [DBG] Adding idp claim with value: local
2019-07-12 11:16:03.624 +03:00 [DBG] Adding amr claim with value: pwd
2019-07-12 11:16:03.651 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 11:16:03.656 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:16:03.683 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 11:16:03.684 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 11:16:03.684 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 11:16:03.700 +03:00 [DBG] Start authorize callback request
2019-07-12 11:16:03.709 +03:00 [DBG] User in authorize request: 818727
2019-07-12 11:16:03.710 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:16:03.710 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:16:03.710 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:16:03.711 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"55197028446e4d74aea7ae530152e141","UiLocales":null,"Nonce":"051b443081bc417f94dd648b846cacd0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"20881faeed3195798394115a13a0852e","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"55197028446e4d74aea7ae530152e141","nonce":"051b443081bc417f94dd648b846cacd0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 11:16:03.713 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 11:16:03.737 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-12 11:16:03.737 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 11:16:03.737 +03:00 [INF] Showing consent: User has not yet consented
2019-07-12 11:16:03.780 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:16:03.783 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:16:03.784 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:16:03.785 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:16:06.296 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-12 11:16:06.322 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:16:06.323 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:16:06.323 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:16:06.325 +03:00 [INF] {"SubjectId":"818727","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO6JGHGS22R:00000008","TimeStamp":"2019-07-12T08:16:06.0000000Z","ProcessId":11048,"LocalIpAddress":"127.0.0.1:5226","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-12 11:16:06.348 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:16:06.356 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 11:16:06.357 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 11:16:06.357 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 11:16:06.357 +03:00 [DBG] Start authorize callback request
2019-07-12 11:16:06.364 +03:00 [DBG] User in authorize request: 818727
2019-07-12 11:16:06.365 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:16:06.365 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:16:06.365 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:16:06.366 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"818727","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"55197028446e4d74aea7ae530152e141","UiLocales":null,"Nonce":"051b443081bc417f94dd648b846cacd0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"20881faeed3195798394115a13a0852e","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"55197028446e4d74aea7ae530152e141","nonce":"051b443081bc417f94dd648b846cacd0"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 11:16:06.366 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 11:16:06.366 +03:00 [DBG] user_consent grant with value: spa|818727 not found in store.
2019-07-12 11:16:06.366 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 11:16:06.378 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-12 11:16:06.386 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 818727
2019-07-12 11:16:06.404 +03:00 [DBG] Creating Implicit Flow response.
2019-07-12 11:16:06.420 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-12 11:16:06.421 +03:00 [DBG] Getting claims for access token for subject: 818727
2019-07-12 11:16:06.426 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-12 11:16:06.428 +03:00 [DBG] Issued claims: []
2019-07-12 11:16:06.545 +03:00 [DBG] Getting claims for identity token for subject: 818727 and client: spa
2019-07-12 11:16:06.546 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-12 11:16:06.560 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"818727","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****kyGA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LDsQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO6JGHGS22R:00000009","TimeStamp":"2019-07-12T08:16:06.0000000Z","ProcessId":11048,"LocalIpAddress":"127.0.0.1:5226","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-12 11:16:06.562 +03:00 [INF] Authorize endpoint response
{"SubjectId":"818727","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"55197028446e4d74aea7ae530152e141","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-12 11:16:06.585 +03:00 [DBG] Augmenting SignInContext
2019-07-12 11:16:06.586 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 11:16:07.798 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 11:16:07.803 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:16:07.809 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:16:07.810 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:16:07.811 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:16:07.811 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:16:07.812 +03:00 [DBG] Start discovery request
2019-07-12 11:16:07.868 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-12 11:16:07.868 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:16:07.868 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:16:07.869 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-12 11:16:07.870 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-12 11:16:07.873 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-12 11:16:07.883 +03:00 [DBG] Start key discovery request
2019-07-12 11:16:07.961 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 11:16:07.961 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:16:07.961 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:16:07.970 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 11:16:07.970 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:16:07.971 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:16:07.971 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-12 11:16:07.975 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-12 11:16:07.975 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-12 11:16:07.988 +03:00 [DBG] Start userinfo request
2019-07-12 11:16:07.996 +03:00 [DBG] Bearer token found in header
2019-07-12 11:16:08.125 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:16:08.133 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:16:08.134 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-12 11:16:08.134 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-12 11:16:08.137 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562919366,"exp":1562922966,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"818727","auth_time":1562919363,"idp":"local","scope":["openid","profile","pyatnashki_api"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-12 11:16:08.140 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-12 11:16:08.152 +03:00 [DBG] Creating userinfo response
2019-07-12 11:16:08.161 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-12 11:16:08.168 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-12 11:16:08.179 +03:00 [DBG] Requested claim types: sub name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-12 11:16:08.180 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-12 11:16:08.181 +03:00 [DBG] Get profile called for subject 818727 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-12 11:16:08.184 +03:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2019-07-12 11:16:08.184 +03:00 [INF] Profile service returned the following claim types: name given_name family_name website
2019-07-12 11:16:08.185 +03:00 [DBG] End userinfo request
2019-07-12 11:16:08.240 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-12 11:16:08.241 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-12 11:16:08.241 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-12 11:16:08.244 +03:00 [DBG] Rendering check session result
2019-07-12 11:16:18.178 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:16:18.180 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:16:18.180 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:16:18.180 +03:00 [DBG] Start discovery request
2019-07-12 11:16:18.475 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-12 11:16:18.475 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-12 11:16:18.475 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-12 11:16:18.475 +03:00 [DBG] Start key discovery request
2019-07-12 11:19:58.357 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 11:19:58.359 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:19:58.360 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:19:58.361 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:19:58.361 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:19:58.361 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:19:58.362 +03:00 [DBG] Start discovery request
2019-07-12 11:19:58.490 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-12 11:19:58.496 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-12 11:19:58.496 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-12 11:19:58.496 +03:00 [DBG] Rendering check session result
2019-07-12 11:21:36.550 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 11:21:36.551 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:21:36.551 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:21:36.552 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:21:36.552 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:21:36.552 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:21:36.552 +03:00 [DBG] Start discovery request
2019-07-12 11:21:36.606 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-12 11:21:36.608 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-12 11:21:36.608 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-12 11:21:36.608 +03:00 [DBG] Start authorize request
2019-07-12 11:21:36.608 +03:00 [DBG] No user present in authorize request
2019-07-12 11:21:36.608 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:21:36.609 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:36.609 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:21:36.609 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"e721c2dfbb25451b8165259d8c83fa39","UiLocales":null,"Nonce":"847c36b7ea374c599470a4e4b11b945d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"e721c2dfbb25451b8165259d8c83fa39","nonce":"847c36b7ea374c599470a4e4b11b945d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 11:21:36.610 +03:00 [INF] Showing login: User is not authenticated
2019-07-12 11:21:36.638 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:21:36.638 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:36.639 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:21:36.639 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:38.996 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-12 11:21:41.752 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-12 11:21:41.786 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO6JGHGS22T:00000006","TimeStamp":"2019-07-12T08:21:41.0000000Z","ProcessId":11048,"LocalIpAddress":"127.0.0.1:5226","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-12 11:21:41.789 +03:00 [DBG] Augmenting SignInContext
2019-07-12 11:21:41.789 +03:00 [DBG] Adding amr claim with value: external
2019-07-12 11:21:41.790 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 11:21:41.799 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-12 11:21:41.799 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:21:41.800 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:41.800 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:21:41.800 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:41.808 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 11:21:41.808 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 11:21:41.808 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 11:21:41.808 +03:00 [DBG] Start authorize callback request
2019-07-12 11:21:41.808 +03:00 [DBG] User in authorize request: f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e
2019-07-12 11:21:41.809 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:21:41.809 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:41.809 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:21:41.810 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"e721c2dfbb25451b8165259d8c83fa39","UiLocales":null,"Nonce":"847c36b7ea374c599470a4e4b11b945d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4ba9947d0ede10ffc5d62e72fdd81988","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"e721c2dfbb25451b8165259d8c83fa39","nonce":"847c36b7ea374c599470a4e4b11b945d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 11:21:41.810 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 11:21:41.810 +03:00 [DBG] user_consent grant with value: spa|f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e not found in store.
2019-07-12 11:21:41.811 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 11:21:41.812 +03:00 [INF] Showing consent: User has not yet consented
2019-07-12 11:21:41.822 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:21:41.823 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:41.824 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:21:41.824 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:43.662 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-12 11:21:43.664 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:21:43.664 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:43.665 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:21:43.666 +03:00 [INF] {"SubjectId":"f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e","ClientId":"spa","RequestedScopes":["openid","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO6JGHGS22T:00000009","TimeStamp":"2019-07-12T08:21:43.0000000Z","ProcessId":11048,"LocalIpAddress":"127.0.0.1:5226","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-12 11:21:43.667 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:43.677 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 11:21:43.677 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 11:21:43.678 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 11:21:43.678 +03:00 [DBG] Start authorize callback request
2019-07-12 11:21:43.679 +03:00 [DBG] User in authorize request: f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e
2019-07-12 11:21:43.679 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:21:43.679 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:43.679 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:21:43.679 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile pyatnashki_api","State":"e721c2dfbb25451b8165259d8c83fa39","UiLocales":null,"Nonce":"847c36b7ea374c599470a4e4b11b945d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4ba9947d0ede10ffc5d62e72fdd81988","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile pyatnashki_api","state":"e721c2dfbb25451b8165259d8c83fa39","nonce":"847c36b7ea374c599470a4e4b11b945d"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 11:21:43.680 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 11:21:43.680 +03:00 [DBG] user_consent grant with value: spa|f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e not found in store.
2019-07-12 11:21:43.680 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 11:21:43.680 +03:00 [INF] User consented to scopes: ["openid","profile","pyatnashki_api"]
2019-07-12 11:21:43.681 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e
2019-07-12 11:21:43.681 +03:00 [DBG] Creating Implicit Flow response.
2019-07-12 11:21:43.681 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-12 11:21:43.681 +03:00 [DBG] Getting claims for access token for subject: f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e
2019-07-12 11:21:43.681 +03:00 [DBG] Get profile called for subject f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-12 11:21:43.682 +03:00 [DBG] Issued claims: []
2019-07-12 11:21:43.690 +03:00 [DBG] Getting claims for identity token for subject: f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e and client: spa
2019-07-12 11:21:43.691 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-12 11:21:43.700 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e","Scopes":"openid profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****IJXQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****o6cA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO6JGHGS22T:0000000A","TimeStamp":"2019-07-12T08:21:43.0000000Z","ProcessId":11048,"LocalIpAddress":"127.0.0.1:5226","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-12 11:21:43.700 +03:00 [INF] Authorize endpoint response
{"SubjectId":"f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"e721c2dfbb25451b8165259d8c83fa39","Scope":"openid profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-12 11:21:43.701 +03:00 [DBG] Augmenting SignInContext
2019-07-12 11:21:43.702 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 11:21:44.538 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 11:21:44.538 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:21:44.538 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:21:44.540 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:21:44.541 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:21:44.541 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:21:44.541 +03:00 [DBG] Start discovery request
2019-07-12 11:21:44.617 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-12 11:21:44.617 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:21:44.617 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:21:44.618 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-12 11:21:44.618 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-12 11:21:44.618 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-12 11:21:44.618 +03:00 [DBG] Start key discovery request
2019-07-12 11:21:44.684 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 11:21:44.684 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:21:44.684 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:21:44.694 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 11:21:44.694 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:21:44.694 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:21:44.694 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-12 11:21:44.695 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-12 11:21:44.695 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-12 11:21:44.695 +03:00 [DBG] Start userinfo request
2019-07-12 11:21:44.695 +03:00 [DBG] Bearer token found in header
2019-07-12 11:21:44.701 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:44.702 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:21:44.702 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-12 11:21:44.702 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-12 11:21:44.703 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562919703,"exp":1562923303,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e","auth_time":1562919701,"idp":"Facebook","scope":["openid","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-12 11:21:44.703 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-12 11:21:44.703 +03:00 [DBG] Creating userinfo response
2019-07-12 11:21:44.703 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-12 11:21:44.703 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-12 11:21:44.704 +03:00 [DBG] Requested claim types: sub name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-12 11:21:44.704 +03:00 [DBG] Scopes in access token: openid profile pyatnashki_api
2019-07-12 11:21:44.704 +03:00 [DBG] Get profile called for subject f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-12 11:21:44.704 +03:00 [DBG] Issued claims: ["name","given_name","family_name"]
2019-07-12 11:21:44.704 +03:00 [INF] Profile service returned the following claim types: name given_name family_name
2019-07-12 11:21:44.704 +03:00 [DBG] End userinfo request
2019-07-12 11:21:44.757 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-12 11:21:44.758 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-12 11:21:44.758 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-12 11:21:44.758 +03:00 [DBG] Rendering check session result
2019-07-12 11:29:54.347 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 11:29:54.347 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:29:54.347 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:29:54.347 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:29:54.348 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:29:54.348 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:29:54.348 +03:00 [DBG] Start discovery request
2019-07-12 11:29:54.530 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-12 11:29:54.531 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-12 11:29:54.531 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-12 11:29:54.531 +03:00 [DBG] Rendering check session result
2019-07-12 11:44:00.849 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-12 11:44:00.902 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-12 11:44:00.906 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-12 11:44:00.907 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-12 11:44:00.907 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-12 11:44:00.907 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-12 11:44:00.907 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-12 11:44:01.194 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 11:44:01.205 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:44:01.205 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:44:01.262 +03:00 [DBG] Login Url: /Account/Login
2019-07-12 11:44:01.262 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-12 11:44:01.262 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-12 11:44:01.262 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-12 11:44:01.262 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-12 11:44:01.262 +03:00 [DBG] Error Url: /home/error
2019-07-12 11:44:01.262 +03:00 [DBG] Error Id Parameter: errorId
2019-07-12 11:44:01.292 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:44:01.296 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:44:01.296 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:44:01.301 +03:00 [DBG] Start discovery request
2019-07-12 11:44:01.397 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-12 11:44:01.409 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-12 11:44:01.409 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-12 11:44:01.417 +03:00 [DBG] Start authorize request
2019-07-12 11:44:01.436 +03:00 [DBG] User in authorize request: f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e
2019-07-12 11:44:01.453 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:44:01.482 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:44:01.518 +03:00 [ERR] Invalid scope: email
2019-07-12 11:44:01.522 +03:00 [ERR] Request validation failed
2019-07-12 11:44:01.545 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"06b2ca2c8e94461e9f4a1e22f47b766a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"06b2ca2c8e94461e9f4a1e22f47b766a","nonce":"5fac065d557f4c9a8db6368152c19aa8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 11:44:01.586 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Error":"invalid_scope","ErrorDescription":"Invalid scope","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLO6KKB5OB5M:00000002","TimeStamp":"2019-07-12T08:44:01.0000000Z","ProcessId":13324,"LocalIpAddress":"127.0.0.1:5779","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-12 11:44:19.110 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-12 11:44:19.213 +03:00 [INF] AuthenticationScheme: idsrv signed out.
2019-07-12 11:44:19.214 +03:00 [INF] {"SubjectId":"f410946f8d043b29c53fbe82a160452a7f4d03299cf77f0dc8b2d76cff0ed49e","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLO6KKB5OB5M:00000005","TimeStamp":"2019-07-12T08:44:19.0000000Z","ProcessId":13324,"LocalIpAddress":"127.0.0.1:5779","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-12 11:44:19.268 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-12 11:44:19.276 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-12 11:44:19.276 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-12 11:44:19.287 +03:00 [DBG] Processing signout callback request
2019-07-12 11:44:19.314 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:44:19.315 +03:00 [DBG] No client front-channel logout URLs
2019-07-12 11:44:19.315 +03:00 [DBG] No client back-channel logout URLs
2019-07-12 11:44:19.316 +03:00 [INF] Successful signout callback.
2019-07-12 11:44:19.316 +03:00 [DBG] No client front-channel iframe urls
2019-07-12 11:44:19.316 +03:00 [DBG] No client back-channel iframe urls
2019-07-12 11:46:37.842 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-12 11:46:37.927 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-12 11:46:37.934 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-12 11:46:37.935 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-12 11:46:37.936 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-12 11:46:37.936 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-12 11:46:37.936 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-12 11:46:38.448 +03:00 [DBG] Login Url: /Account/Login
2019-07-12 11:46:38.451 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-12 11:46:38.451 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-12 11:46:38.451 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-12 11:46:38.451 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-12 11:46:38.451 +03:00 [DBG] Error Url: /home/error
2019-07-12 11:46:38.451 +03:00 [DBG] Error Id Parameter: errorId
2019-07-12 11:47:10.476 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 11:47:10.482 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:47:10.482 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:47:10.485 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:47:10.492 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:47:10.492 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:47:10.499 +03:00 [DBG] Start discovery request
2019-07-12 11:47:10.566 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-12 11:47:10.570 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-12 11:47:10.570 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-12 11:47:10.578 +03:00 [DBG] Start authorize request
2019-07-12 11:47:10.590 +03:00 [DBG] No user present in authorize request
2019-07-12 11:47:10.598 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:47:10.622 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:47:10.653 +03:00 [ERR] Invalid scope: email
2019-07-12 11:47:10.658 +03:00 [ERR] Request validation failed
2019-07-12 11:47:10.680 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"b1de8e856f7e4fa9ab530fd0422acb73","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"b1de8e856f7e4fa9ab530fd0422acb73","nonce":"58a2717946d04d778e55dc6ed15ba115"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 11:47:10.713 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Error":"invalid_scope","ErrorDescription":"Invalid scope","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLO6KLQ0TSKD:00000003","TimeStamp":"2019-07-12T08:47:10.0000000Z","ProcessId":9296,"LocalIpAddress":"127.0.0.1:30087","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-07-12 11:52:20.429 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-12 11:52:20.506 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-12 11:52:20.512 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-12 11:52:20.512 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-12 11:52:20.512 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-12 11:52:20.512 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-12 11:52:20.512 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-12 11:52:21.055 +03:00 [DBG] Login Url: /Account/Login
2019-07-12 11:52:21.059 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-12 11:52:21.059 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-12 11:52:21.059 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-12 11:52:21.059 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-12 11:52:21.059 +03:00 [DBG] Error Url: /home/error
2019-07-12 11:52:21.059 +03:00 [DBG] Error Id Parameter: errorId
2019-07-12 11:52:56.686 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 11:52:56.692 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:52:56.692 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:52:56.696 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:52:56.714 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:52:56.715 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:52:56.737 +03:00 [DBG] Start discovery request
2019-07-12 11:52:56.820 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-12 11:52:56.826 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-12 11:52:56.826 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-12 11:52:56.837 +03:00 [DBG] Start authorize request
2019-07-12 11:52:56.848 +03:00 [DBG] No user present in authorize request
2019-07-12 11:52:56.856 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:52:56.879 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:52:56.930 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:52:56.950 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a92ea2001cda4b0cbab7aa1e11d15095","UiLocales":null,"Nonce":"e889dee523934615a54b7e3ad4a22834","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a92ea2001cda4b0cbab7aa1e11d15095","nonce":"e889dee523934615a54b7e3ad4a22834"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 11:52:56.983 +03:00 [INF] Showing login: User is not authenticated
2019-07-12 11:52:57.062 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:52:57.062 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:52:57.064 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:52:57.069 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:52:59.842 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-12 11:53:01.953 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-12 11:53:02.017 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO6KP04BAC3:00000002","TimeStamp":"2019-07-12T08:53:02.0000000Z","ProcessId":10452,"LocalIpAddress":"127.0.0.1:47878","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-12 11:53:02.037 +03:00 [DBG] Augmenting SignInContext
2019-07-12 11:53:02.041 +03:00 [DBG] Adding amr claim with value: external
2019-07-12 11:53:02.050 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 11:53:02.060 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-12 11:53:02.060 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:53:02.060 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:53:02.061 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:53:02.063 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:53:02.074 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 11:53:02.075 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 11:53:02.075 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 11:53:02.087 +03:00 [DBG] Start authorize callback request
2019-07-12 11:53:02.092 +03:00 [DBG] User in authorize request: 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226
2019-07-12 11:53:02.093 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:53:02.093 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:53:02.093 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:53:02.094 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a92ea2001cda4b0cbab7aa1e11d15095","UiLocales":null,"Nonce":"e889dee523934615a54b7e3ad4a22834","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"325504146504c4ad47ca58ebdae9ec5a","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a92ea2001cda4b0cbab7aa1e11d15095","nonce":"e889dee523934615a54b7e3ad4a22834"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 11:53:02.096 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 11:53:02.117 +03:00 [DBG] user_consent grant with value: spa|512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226 not found in store.
2019-07-12 11:53:02.117 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 11:53:02.117 +03:00 [INF] Showing consent: User has not yet consented
2019-07-12 11:53:02.153 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:53:02.153 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:53:02.154 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:53:02.154 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:53:04.918 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-12 11:53:04.974 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:53:04.974 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:53:04.975 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:53:04.977 +03:00 [INF] {"SubjectId":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO6KP04BAC2:00000005","TimeStamp":"2019-07-12T08:53:04.0000000Z","ProcessId":10452,"LocalIpAddress":"127.0.0.1:47878","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-12 11:53:04.996 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:53:05.005 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 11:53:05.006 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 11:53:05.006 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 11:53:05.006 +03:00 [DBG] Start authorize callback request
2019-07-12 11:53:05.016 +03:00 [DBG] User in authorize request: 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226
2019-07-12 11:53:05.016 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 11:53:05.016 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:53:05.021 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 11:53:05.021 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"a92ea2001cda4b0cbab7aa1e11d15095","UiLocales":null,"Nonce":"e889dee523934615a54b7e3ad4a22834","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"325504146504c4ad47ca58ebdae9ec5a","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"a92ea2001cda4b0cbab7aa1e11d15095","nonce":"e889dee523934615a54b7e3ad4a22834"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 11:53:05.022 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 11:53:05.022 +03:00 [DBG] user_consent grant with value: spa|512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226 not found in store.
2019-07-12 11:53:05.022 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 11:53:05.031 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-12 11:53:05.037 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226
2019-07-12 11:53:05.048 +03:00 [DBG] Creating Implicit Flow response.
2019-07-12 11:53:05.064 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-12 11:53:05.065 +03:00 [DBG] Getting claims for access token for subject: 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226
2019-07-12 11:53:05.071 +03:00 [DBG] Get profile called for subject 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-12 11:53:05.073 +03:00 [DBG] Issued claims: []
2019-07-12 11:53:05.165 +03:00 [DBG] Getting claims for identity token for subject: 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226 and client: spa
2019-07-12 11:53:05.166 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-12 11:53:05.180 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****XlCA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****jMSw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO6KP04BAC4:00000004","TimeStamp":"2019-07-12T08:53:05.0000000Z","ProcessId":10452,"LocalIpAddress":"127.0.0.1:47878","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-12 11:53:05.182 +03:00 [INF] Authorize endpoint response
{"SubjectId":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"a92ea2001cda4b0cbab7aa1e11d15095","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-12 11:53:05.208 +03:00 [DBG] Augmenting SignInContext
2019-07-12 11:53:05.208 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 11:53:07.345 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 11:53:07.346 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:53:07.346 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:53:07.347 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:53:07.347 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:53:07.348 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:53:07.348 +03:00 [DBG] Start discovery request
2019-07-12 11:53:07.426 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-12 11:53:07.427 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:53:07.428 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:53:07.428 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-12 11:53:07.429 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-12 11:53:07.429 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-12 11:53:07.436 +03:00 [DBG] Start key discovery request
2019-07-12 11:53:07.524 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 11:53:07.524 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:53:07.525 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:53:07.538 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 11:53:07.538 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:53:07.538 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:53:07.539 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-12 11:53:07.542 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-12 11:53:07.542 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-12 11:53:07.556 +03:00 [DBG] Start userinfo request
2019-07-12 11:53:07.565 +03:00 [DBG] Bearer token found in header
2019-07-12 11:53:07.695 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:53:07.705 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 11:53:07.707 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-12 11:53:07.709 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-12 11:53:07.711 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562921585,"exp":1562925185,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","auth_time":1562921582,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-12 11:53:07.713 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-12 11:53:07.722 +03:00 [DBG] Creating userinfo response
2019-07-12 11:53:07.731 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 11:53:07.735 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 11:53:07.742 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-12 11:53:07.744 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 11:53:07.744 +03:00 [DBG] Get profile called for subject 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226 from client SPA Client with claim types ["sub","email","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-12 11:53:07.747 +03:00 [DBG] Issued claims: ["email","name","given_name","family_name"]
2019-07-12 11:53:07.747 +03:00 [INF] Profile service returned the following claim types: email name given_name family_name
2019-07-12 11:53:07.747 +03:00 [DBG] End userinfo request
2019-07-12 11:53:07.782 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-12 11:53:07.783 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-12 11:53:07.783 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-12 11:53:07.785 +03:00 [DBG] Rendering check session result
2019-07-12 11:55:12.045 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:55:12.045 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:55:12.046 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:55:12.046 +03:00 [DBG] Start discovery request
2019-07-12 11:55:12.352 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-12 11:55:12.353 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-12 11:55:12.353 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-12 11:55:12.353 +03:00 [DBG] Start key discovery request
2019-07-12 11:57:56.533 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 11:57:56.534 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 11:57:56.534 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 11:57:56.534 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 11:57:56.535 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 11:57:56.535 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 11:57:56.535 +03:00 [DBG] Start discovery request
2019-07-12 11:57:56.682 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-12 11:57:56.683 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-12 11:57:56.683 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-12 11:57:56.683 +03:00 [DBG] Rendering check session result
2019-07-12 12:04:42.985 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 12:04:42.985 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:04:42.985 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:04:42.986 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 12:04:42.986 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 12:04:42.986 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 12:04:42.987 +03:00 [DBG] Start discovery request
2019-07-12 12:04:43.033 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-12 12:04:43.034 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-12 12:04:43.034 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-12 12:04:43.034 +03:00 [DBG] Start authorize request
2019-07-12 12:04:43.035 +03:00 [DBG] No user present in authorize request
2019-07-12 12:04:43.035 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:04:43.035 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:04:43.035 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:04:43.036 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"7c96be114a85400fb890d7ca92eceb81","UiLocales":null,"Nonce":"be67897de0fe4113933c41582dcbf8be","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"7c96be114a85400fb890d7ca92eceb81","nonce":"be67897de0fe4113933c41582dcbf8be"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:04:43.036 +03:00 [INF] Showing login: User is not authenticated
2019-07-12 12:04:43.062 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:04:43.063 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:04:43.063 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:04:43.063 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:04:45.620 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-12 12:04:47.680 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-12 12:04:47.690 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO6KP04BAC7:00000006","TimeStamp":"2019-07-12T09:04:47.0000000Z","ProcessId":10452,"LocalIpAddress":"127.0.0.1:47878","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-12 12:04:47.691 +03:00 [DBG] Augmenting SignInContext
2019-07-12 12:04:47.691 +03:00 [DBG] Adding amr claim with value: external
2019-07-12 12:04:47.691 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 12:04:47.692 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-12 12:04:47.692 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:04:47.692 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:04:47.693 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:04:47.693 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:04:47.702 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 12:04:47.702 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 12:04:47.703 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 12:04:47.703 +03:00 [DBG] Start authorize callback request
2019-07-12 12:04:47.703 +03:00 [DBG] User in authorize request: 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226
2019-07-12 12:04:47.703 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:04:47.703 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:04:47.704 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:04:47.704 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"7c96be114a85400fb890d7ca92eceb81","UiLocales":null,"Nonce":"be67897de0fe4113933c41582dcbf8be","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"81a594fb314b39329fbc04c81fe23fc2","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"7c96be114a85400fb890d7ca92eceb81","nonce":"be67897de0fe4113933c41582dcbf8be"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:04:47.704 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 12:04:47.704 +03:00 [DBG] user_consent grant with value: spa|512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226 not found in store.
2019-07-12 12:04:47.704 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 12:04:47.704 +03:00 [INF] Showing consent: User has not yet consented
2019-07-12 12:04:47.713 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:04:47.713 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:04:47.714 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:04:47.714 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:04:58.962 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-12 12:04:58.968 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:04:58.968 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:04:58.968 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:04:58.969 +03:00 [INF] {"SubjectId":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO6KP04BAC7:00000009","TimeStamp":"2019-07-12T09:04:58.0000000Z","ProcessId":10452,"LocalIpAddress":"127.0.0.1:47878","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-12 12:04:58.970 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:04:58.984 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 12:04:58.984 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 12:04:58.984 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 12:04:58.985 +03:00 [DBG] Start authorize callback request
2019-07-12 12:04:58.985 +03:00 [DBG] User in authorize request: 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226
2019-07-12 12:04:58.985 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:04:58.985 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:04:58.986 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:04:58.986 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"7c96be114a85400fb890d7ca92eceb81","UiLocales":null,"Nonce":"be67897de0fe4113933c41582dcbf8be","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"81a594fb314b39329fbc04c81fe23fc2","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"7c96be114a85400fb890d7ca92eceb81","nonce":"be67897de0fe4113933c41582dcbf8be"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:04:58.986 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 12:04:58.986 +03:00 [DBG] user_consent grant with value: spa|512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226 not found in store.
2019-07-12 12:04:58.987 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 12:04:58.987 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-12 12:04:58.987 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226
2019-07-12 12:04:58.987 +03:00 [DBG] Creating Implicit Flow response.
2019-07-12 12:04:58.987 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-12 12:04:58.987 +03:00 [DBG] Getting claims for access token for subject: 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226
2019-07-12 12:04:58.987 +03:00 [DBG] Get profile called for subject 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-12 12:04:58.988 +03:00 [DBG] Issued claims: []
2019-07-12 12:04:59.003 +03:00 [DBG] Getting claims for identity token for subject: 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226 and client: spa
2019-07-12 12:04:59.004 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-12 12:04:59.013 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****6AnA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****xRVw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO6KP04BAC7:0000000A","TimeStamp":"2019-07-12T09:04:59.0000000Z","ProcessId":10452,"LocalIpAddress":"127.0.0.1:47878","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-12 12:04:59.013 +03:00 [INF] Authorize endpoint response
{"SubjectId":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"7c96be114a85400fb890d7ca92eceb81","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-12 12:04:59.014 +03:00 [DBG] Augmenting SignInContext
2019-07-12 12:04:59.014 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 12:05:00.381 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 12:05:00.381 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:05:00.381 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:05:00.382 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 12:05:00.382 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 12:05:00.382 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 12:05:00.382 +03:00 [DBG] Start discovery request
2019-07-12 12:05:00.458 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-12 12:05:00.458 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:05:00.458 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:05:00.459 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-12 12:05:00.459 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-12 12:05:00.459 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-12 12:05:00.459 +03:00 [DBG] Start key discovery request
2019-07-12 12:05:00.520 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 12:05:00.520 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:05:00.520 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:05:00.535 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 12:05:00.535 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:05:00.536 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:05:00.536 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-12 12:05:00.537 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-12 12:05:00.537 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-12 12:05:00.537 +03:00 [DBG] Start userinfo request
2019-07-12 12:05:00.537 +03:00 [DBG] Bearer token found in header
2019-07-12 12:05:00.543 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:00.543 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:00.543 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-12 12:05:00.543 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-12 12:05:00.544 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562922298,"exp":1562925898,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226","auth_time":1562922287,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-12 12:05:00.544 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-12 12:05:00.545 +03:00 [DBG] Creating userinfo response
2019-07-12 12:05:00.545 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 12:05:00.545 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 12:05:00.545 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-12 12:05:00.545 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 12:05:00.545 +03:00 [DBG] Get profile called for subject 512d5fc62e162d4a6a30a682695a78f3d644d5e59ead147337e8379daf5ec226 from client SPA Client with claim types ["sub","email","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-12 12:05:00.545 +03:00 [DBG] Issued claims: ["email","name","given_name","family_name"]
2019-07-12 12:05:00.545 +03:00 [INF] Profile service returned the following claim types: email name given_name family_name
2019-07-12 12:05:00.546 +03:00 [DBG] End userinfo request
2019-07-12 12:05:00.585 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-12 12:05:00.586 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-12 12:05:00.586 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-12 12:05:00.586 +03:00 [DBG] Rendering check session result
2019-07-12 12:05:28.419 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 12:05:28.419 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:05:28.420 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:05:28.420 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 12:05:28.420 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 12:05:28.420 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 12:05:28.421 +03:00 [DBG] Start discovery request
2019-07-12 12:05:28.471 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-12 12:05:28.472 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-12 12:05:28.472 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-12 12:05:28.472 +03:00 [DBG] Start authorize request
2019-07-12 12:05:28.473 +03:00 [DBG] No user present in authorize request
2019-07-12 12:05:28.473 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:05:28.473 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:28.473 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:05:28.474 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"7764587c41c24a59b21071c82e00b388","UiLocales":null,"Nonce":"78ce6e3e2aba466f94390865fa6278f2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"7764587c41c24a59b21071c82e00b388","nonce":"78ce6e3e2aba466f94390865fa6278f2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:05:28.474 +03:00 [INF] Showing login: User is not authenticated
2019-07-12 12:05:28.491 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:05:28.492 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:28.492 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:05:28.492 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:30.428 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-12 12:05:36.162 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-12 12:05:36.172 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO6KP04BAC7:00000015","TimeStamp":"2019-07-12T09:05:36.0000000Z","ProcessId":10452,"LocalIpAddress":"127.0.0.1:47878","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-12 12:05:36.173 +03:00 [DBG] Augmenting SignInContext
2019-07-12 12:05:36.173 +03:00 [DBG] Adding amr claim with value: external
2019-07-12 12:05:36.174 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 12:05:36.174 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-12 12:05:36.174 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:05:36.174 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:36.175 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:05:36.175 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:36.186 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 12:05:36.186 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 12:05:36.186 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 12:05:36.186 +03:00 [DBG] Start authorize callback request
2019-07-12 12:05:36.186 +03:00 [DBG] User in authorize request: e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4
2019-07-12 12:05:36.187 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:05:36.187 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:36.190 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:05:36.191 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"7764587c41c24a59b21071c82e00b388","UiLocales":null,"Nonce":"78ce6e3e2aba466f94390865fa6278f2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"cfaa37a1ef038ce114cc95ea62917341","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"7764587c41c24a59b21071c82e00b388","nonce":"78ce6e3e2aba466f94390865fa6278f2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:05:36.191 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 12:05:36.191 +03:00 [DBG] user_consent grant with value: spa|e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4 not found in store.
2019-07-12 12:05:36.191 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 12:05:36.192 +03:00 [INF] Showing consent: User has not yet consented
2019-07-12 12:05:36.211 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:05:36.211 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:36.212 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:05:36.212 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:40.463 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-12 12:05:40.467 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:05:40.468 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:40.468 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:05:40.469 +03:00 [INF] {"SubjectId":"e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO6KP04BAC7:00000018","TimeStamp":"2019-07-12T09:05:40.0000000Z","ProcessId":10452,"LocalIpAddress":"127.0.0.1:47878","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-12 12:05:40.473 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:40.482 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 12:05:40.482 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 12:05:40.482 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 12:05:40.483 +03:00 [DBG] Start authorize callback request
2019-07-12 12:05:40.483 +03:00 [DBG] User in authorize request: e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4
2019-07-12 12:05:40.483 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:05:40.483 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:40.484 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:05:40.484 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"7764587c41c24a59b21071c82e00b388","UiLocales":null,"Nonce":"78ce6e3e2aba466f94390865fa6278f2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"cfaa37a1ef038ce114cc95ea62917341","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"7764587c41c24a59b21071c82e00b388","nonce":"78ce6e3e2aba466f94390865fa6278f2"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:05:40.484 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 12:05:40.485 +03:00 [DBG] user_consent grant with value: spa|e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4 not found in store.
2019-07-12 12:05:40.485 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 12:05:40.485 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-12 12:05:40.486 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4
2019-07-12 12:05:40.486 +03:00 [DBG] Creating Implicit Flow response.
2019-07-12 12:05:40.486 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-12 12:05:40.486 +03:00 [DBG] Getting claims for access token for subject: e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4
2019-07-12 12:05:40.487 +03:00 [DBG] Get profile called for subject e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-12 12:05:40.487 +03:00 [DBG] Issued claims: []
2019-07-12 12:05:40.495 +03:00 [DBG] Getting claims for identity token for subject: e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4 and client: spa
2019-07-12 12:05:40.496 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-12 12:05:40.504 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****43rQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gUIA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO6KP04BAC7:00000019","TimeStamp":"2019-07-12T09:05:40.0000000Z","ProcessId":10452,"LocalIpAddress":"127.0.0.1:47878","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-12 12:05:40.504 +03:00 [INF] Authorize endpoint response
{"SubjectId":"e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"7764587c41c24a59b21071c82e00b388","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-12 12:05:40.505 +03:00 [DBG] Augmenting SignInContext
2019-07-12 12:05:40.505 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 12:05:41.781 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 12:05:41.782 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:05:41.782 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:05:41.782 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 12:05:41.783 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 12:05:41.783 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 12:05:41.783 +03:00 [DBG] Start discovery request
2019-07-12 12:05:41.853 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-12 12:05:41.854 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:05:41.861 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:05:41.862 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-12 12:05:41.862 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-12 12:05:41.862 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-12 12:05:41.862 +03:00 [DBG] Start key discovery request
2019-07-12 12:05:41.950 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 12:05:41.950 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:05:41.950 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:05:41.963 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 12:05:41.964 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:05:41.964 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:05:41.964 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-12 12:05:41.964 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-12 12:05:41.964 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-12 12:05:41.965 +03:00 [DBG] Start userinfo request
2019-07-12 12:05:41.965 +03:00 [DBG] Bearer token found in header
2019-07-12 12:05:41.970 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:41.970 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:05:41.970 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-12 12:05:41.970 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-12 12:05:41.971 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562922340,"exp":1562925940,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4","auth_time":1562922336,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-12 12:05:41.971 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-12 12:05:41.971 +03:00 [DBG] Creating userinfo response
2019-07-12 12:05:41.971 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 12:05:41.971 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 12:05:41.971 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-12 12:05:41.971 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 12:05:41.971 +03:00 [DBG] Get profile called for subject e9dd07a54783b842e5eedd737bc729abdc3b21e5c83c29c668bf58f3a522e9f4 from client SPA Client with claim types ["sub","email","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-12 12:05:41.971 +03:00 [DBG] Issued claims: ["name","given_name","family_name","email"]
2019-07-12 12:05:41.972 +03:00 [INF] Profile service returned the following claim types: name given_name family_name email
2019-07-12 12:05:41.972 +03:00 [DBG] End userinfo request
2019-07-12 12:05:42.009 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-12 12:05:42.009 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-12 12:05:42.009 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-12 12:05:42.009 +03:00 [DBG] Rendering check session result
2019-07-12 12:07:39.875 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-12 12:07:39.930 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-12 12:07:39.934 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-12 12:07:39.934 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-12 12:07:39.934 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-12 12:07:39.935 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-12 12:07:39.935 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-12 12:07:40.636 +03:00 [DBG] Login Url: /Account/Login
2019-07-12 12:07:40.641 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-12 12:07:40.641 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-12 12:07:40.641 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-12 12:07:40.641 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-12 12:07:40.641 +03:00 [DBG] Error Url: /home/error
2019-07-12 12:07:40.641 +03:00 [DBG] Error Id Parameter: errorId
2019-07-12 12:09:05.516 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 12:09:05.524 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 12:09:05.524 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 12:09:05.533 +03:00 [DBG] Start discovery request
2019-07-12 12:09:05.858 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-12 12:09:05.859 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-12 12:09:05.859 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-12 12:09:05.866 +03:00 [DBG] Start key discovery request
2019-07-12 12:09:44.815 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 12:09:44.821 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:09:44.823 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:09:44.829 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 12:09:44.830 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 12:09:44.830 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 12:09:44.830 +03:00 [DBG] Start discovery request
2019-07-12 12:09:44.860 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-12 12:09:44.867 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-12 12:09:44.867 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-12 12:09:44.874 +03:00 [DBG] Start authorize request
2019-07-12 12:09:44.895 +03:00 [DBG] No user present in authorize request
2019-07-12 12:09:44.902 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:09:44.933 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:09:44.990 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:09:45.010 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f46e45cca3b94bcb905b28f974efa17c","UiLocales":null,"Nonce":"0c474c4b5e404039b1c326f23739beae","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f46e45cca3b94bcb905b28f974efa17c","nonce":"0c474c4b5e404039b1c326f23739beae"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:09:45.038 +03:00 [INF] Showing login: User is not authenticated
2019-07-12 12:09:45.116 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:09:45.116 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:09:45.117 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:09:45.121 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:09:55.310 +03:00 [INF] AuthenticationScheme: Facebook was challenged.
2019-07-12 12:09:59.480 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-12 12:09:59.529 +03:00 [INF] {"Username":null,"Provider":"Facebook","ProviderUserId":"2370052413088710","SubjectId":"96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO6L1I5DSI7:00000008","TimeStamp":"2019-07-12T09:09:59.0000000Z","ProcessId":6168,"LocalIpAddress":"127.0.0.1:44619","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-12 12:09:59.542 +03:00 [DBG] Augmenting SignInContext
2019-07-12 12:09:59.546 +03:00 [DBG] Adding amr claim with value: external
2019-07-12 12:09:59.553 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 12:09:59.563 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-12 12:09:59.564 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:09:59.564 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:09:59.567 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:09:59.569 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:09:59.577 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 12:09:59.578 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 12:09:59.579 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 12:09:59.589 +03:00 [DBG] Start authorize callback request
2019-07-12 12:09:59.595 +03:00 [DBG] User in authorize request: 96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355
2019-07-12 12:09:59.595 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:09:59.596 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:09:59.596 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:09:59.596 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f46e45cca3b94bcb905b28f974efa17c","UiLocales":null,"Nonce":"0c474c4b5e404039b1c326f23739beae","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"716e43e543cf4639da944e825fd99952","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f46e45cca3b94bcb905b28f974efa17c","nonce":"0c474c4b5e404039b1c326f23739beae"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:09:59.598 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 12:09:59.618 +03:00 [DBG] user_consent grant with value: spa|96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355 not found in store.
2019-07-12 12:09:59.619 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 12:09:59.619 +03:00 [INF] Showing consent: User has not yet consented
2019-07-12 12:09:59.657 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:09:59.657 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:09:59.657 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:09:59.658 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:10:25.606 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-12 12:10:25.668 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:10:25.669 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:10:25.669 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:10:25.671 +03:00 [INF] {"SubjectId":"96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO6L1I5DSI7:0000000B","TimeStamp":"2019-07-12T09:10:25.0000000Z","ProcessId":6168,"LocalIpAddress":"127.0.0.1:44619","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-12 12:10:25.688 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:10:25.703 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 12:10:25.703 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 12:10:25.704 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 12:10:25.704 +03:00 [DBG] Start authorize callback request
2019-07-12 12:10:25.709 +03:00 [DBG] User in authorize request: 96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355
2019-07-12 12:10:25.709 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:10:25.709 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:10:25.710 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:10:25.710 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f46e45cca3b94bcb905b28f974efa17c","UiLocales":null,"Nonce":"0c474c4b5e404039b1c326f23739beae","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"716e43e543cf4639da944e825fd99952","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f46e45cca3b94bcb905b28f974efa17c","nonce":"0c474c4b5e404039b1c326f23739beae"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:10:25.714 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 12:10:25.715 +03:00 [DBG] user_consent grant with value: spa|96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355 not found in store.
2019-07-12 12:10:25.715 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 12:10:25.731 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-12 12:10:25.739 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: 96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355
2019-07-12 12:10:25.759 +03:00 [DBG] Creating Implicit Flow response.
2019-07-12 12:10:25.782 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-12 12:10:25.784 +03:00 [DBG] Getting claims for access token for subject: 96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355
2019-07-12 12:10:25.791 +03:00 [DBG] Get profile called for subject 96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-12 12:10:25.793 +03:00 [DBG] Issued claims: []
2019-07-12 12:10:25.898 +03:00 [DBG] Getting claims for identity token for subject: 96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355 and client: spa
2019-07-12 12:10:25.898 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-12 12:10:25.917 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****rn-Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****4s_w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO6L1I5DSI7:0000000C","TimeStamp":"2019-07-12T09:10:25.0000000Z","ProcessId":6168,"LocalIpAddress":"127.0.0.1:44619","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-12 12:10:25.920 +03:00 [INF] Authorize endpoint response
{"SubjectId":"96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"f46e45cca3b94bcb905b28f974efa17c","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-12 12:10:25.958 +03:00 [DBG] Augmenting SignInContext
2019-07-12 12:10:25.959 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 12:10:27.360 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 12:10:27.363 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:10:27.363 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:10:27.364 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 12:10:27.364 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 12:10:27.379 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 12:10:27.380 +03:00 [DBG] Start discovery request
2019-07-12 12:10:27.432 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-12 12:10:27.436 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:10:27.436 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:10:27.436 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-12 12:10:27.436 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-12 12:10:27.436 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-12 12:10:27.437 +03:00 [DBG] Start key discovery request
2019-07-12 12:10:27.513 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 12:10:27.514 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:10:27.514 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:10:27.527 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 12:10:27.527 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:10:27.527 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:10:27.528 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-12 12:10:27.531 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-12 12:10:27.531 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-12 12:10:27.546 +03:00 [DBG] Start userinfo request
2019-07-12 12:10:27.551 +03:00 [DBG] Bearer token found in header
2019-07-12 12:10:27.645 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:10:27.648 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:10:27.649 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-12 12:10:27.650 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-12 12:10:27.653 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562922625,"exp":1562926225,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355","auth_time":1562922599,"idp":"Facebook","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-12 12:10:27.656 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-12 12:10:27.667 +03:00 [DBG] Creating userinfo response
2019-07-12 12:10:27.674 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 12:10:27.678 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 12:10:27.686 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-12 12:10:27.686 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 12:10:27.687 +03:00 [DBG] Get profile called for subject 96c200bc84937b181cdef3099613fe414a6916290717983c845e9a9e22386355 from client SPA Client with claim types ["sub","email","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-12 12:10:27.689 +03:00 [DBG] Issued claims: ["email","name","given_name","family_name"]
2019-07-12 12:10:27.696 +03:00 [INF] Profile service returned the following claim types: email name given_name family_name
2019-07-12 12:10:27.696 +03:00 [DBG] End userinfo request
2019-07-12 12:10:27.766 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-12 12:10:27.767 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-12 12:10:27.768 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-12 12:10:27.771 +03:00 [DBG] Rendering check session result
2019-07-12 12:17:53.636 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 12:17:53.636 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:17:53.637 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:17:53.638 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 12:17:53.638 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 12:17:53.639 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 12:17:53.639 +03:00 [DBG] Start discovery request
2019-07-12 12:17:53.677 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-12 12:17:53.678 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-12 12:17:53.678 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-12 12:17:53.678 +03:00 [DBG] Start authorize request
2019-07-12 12:17:53.678 +03:00 [DBG] No user present in authorize request
2019-07-12 12:17:53.678 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:17:53.679 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:17:53.679 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:17:53.679 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"ff900f3be05141758cc662908ac81bbc","UiLocales":null,"Nonce":"ecb2df84a1c94a1eb6801e7e25d52e34","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"ff900f3be05141758cc662908ac81bbc","nonce":"ecb2df84a1c94a1eb6801e7e25d52e34"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:17:53.679 +03:00 [INF] Showing login: User is not authenticated
2019-07-12 12:17:53.697 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:17:53.698 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:17:53.698 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:17:53.698 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:19:28.313 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:19:28.314 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:19:28.315 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:19:28.315 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:19:55.870 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-12 12:20:04.878 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-12 12:20:04.893 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO6L1I5DSIA:00000002","TimeStamp":"2019-07-12T09:20:04.0000000Z","ProcessId":6168,"LocalIpAddress":"127.0.0.1:44619","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-12 12:20:04.894 +03:00 [DBG] Augmenting SignInContext
2019-07-12 12:20:04.894 +03:00 [DBG] Adding amr claim with value: external
2019-07-12 12:20:04.894 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 12:20:04.895 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-12 12:20:28.163 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-12 12:20:28.186 +03:00 [INF] AuthenticationScheme: idsrv signed out.
2019-07-12 12:20:28.187 +03:00 [INF] {"SubjectId":"b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLO6L1I5DSIC:00000004","TimeStamp":"2019-07-12T09:20:28.0000000Z","ProcessId":6168,"LocalIpAddress":"127.0.0.1:44619","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-12 12:20:30.945 +03:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-07-12 12:20:38.070 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 12:20:38.071 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:20:38.071 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:20:38.071 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 12:20:38.072 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 12:20:38.072 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 12:20:38.072 +03:00 [DBG] Start discovery request
2019-07-12 12:20:38.112 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-12 12:20:38.113 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-12 12:20:38.113 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-12 12:20:38.113 +03:00 [DBG] Start authorize request
2019-07-12 12:20:38.113 +03:00 [DBG] No user present in authorize request
2019-07-12 12:20:38.113 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:20:38.113 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:20:38.114 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:20:38.114 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"dc7e7a8649194778bf88da3b0cb8dede","UiLocales":null,"Nonce":"d3bcd53c60ff4bdc8d963a846d8f0233","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"dc7e7a8649194778bf88da3b0cb8dede","nonce":"d3bcd53c60ff4bdc8d963a846d8f0233"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:20:38.114 +03:00 [INF] Showing login: User is not authenticated
2019-07-12 12:20:38.141 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:20:38.142 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:20:38.143 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:20:38.143 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:20:57.125 +03:00 [INF] AuthenticationScheme: Google was challenged.
2019-07-12 12:21:01.467 +03:00 [INF] AuthenticationScheme: idsrv.external signed in.
2019-07-12 12:21:01.476 +03:00 [INF] {"Username":null,"Provider":"Google","ProviderUserId":"101570060797612121276","SubjectId":"b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d","DisplayName":"Илья Шершунович","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLO6L1I5DSIB:00000005","TimeStamp":"2019-07-12T09:21:01.0000000Z","ProcessId":6168,"LocalIpAddress":"127.0.0.1:44619","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-07-12 12:21:01.476 +03:00 [DBG] Augmenting SignInContext
2019-07-12 12:21:01.476 +03:00 [DBG] Adding amr claim with value: external
2019-07-12 12:21:01.477 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 12:21:01.477 +03:00 [INF] AuthenticationScheme: idsrv.external signed out.
2019-07-12 12:21:01.477 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:21:01.477 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:21:01.478 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:21:01.478 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:21:01.491 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 12:21:01.491 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 12:21:01.491 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 12:21:01.491 +03:00 [DBG] Start authorize callback request
2019-07-12 12:21:01.491 +03:00 [DBG] User in authorize request: b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d
2019-07-12 12:21:01.492 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:21:01.492 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:21:01.492 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:21:01.492 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"dc7e7a8649194778bf88da3b0cb8dede","UiLocales":null,"Nonce":"d3bcd53c60ff4bdc8d963a846d8f0233","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0c4b133299c06abda4a0ba25bcebc9bc","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"dc7e7a8649194778bf88da3b0cb8dede","nonce":"d3bcd53c60ff4bdc8d963a846d8f0233"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:21:01.493 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 12:21:01.493 +03:00 [DBG] user_consent grant with value: spa|b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d not found in store.
2019-07-12 12:21:01.493 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 12:21:01.493 +03:00 [INF] Showing consent: User has not yet consented
2019-07-12 12:21:01.506 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:21:01.506 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:21:01.507 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:21:01.507 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:21:05.050 +03:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-12 12:21:05.053 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:21:05.053 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:21:05.054 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:21:05.054 +03:00 [INF] {"SubjectId":"b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d","ClientId":"spa","RequestedScopes":["openid","email","profile","pyatnashki_api"],"GrantedScopes":["openid","profile","email","pyatnashki_api"],"ConsentRemembered":false,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLO6L1I5DSIC:00000006","TimeStamp":"2019-07-12T09:21:05.0000000Z","ProcessId":6168,"LocalIpAddress":"127.0.0.1:44619","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-07-12 12:21:05.055 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:21:05.069 +03:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-12 12:21:05.069 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-12 12:21:05.069 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-12 12:21:05.069 +03:00 [DBG] Start authorize callback request
2019-07-12 12:21:05.070 +03:00 [DBG] User in authorize request: b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d
2019-07-12 12:21:05.070 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 12:21:05.070 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:21:05.071 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 12:21:05.071 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"dc7e7a8649194778bf88da3b0cb8dede","UiLocales":null,"Nonce":"d3bcd53c60ff4bdc8d963a846d8f0233","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0c4b133299c06abda4a0ba25bcebc9bc","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"dc7e7a8649194778bf88da3b0cb8dede","nonce":"d3bcd53c60ff4bdc8d963a846d8f0233"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 12:21:05.071 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 12:21:05.071 +03:00 [DBG] user_consent grant with value: spa|b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d not found in store.
2019-07-12 12:21:05.071 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 12:21:05.071 +03:00 [INF] User consented to scopes: ["openid","profile","email","pyatnashki_api"]
2019-07-12 12:21:05.072 +03:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d
2019-07-12 12:21:05.072 +03:00 [DBG] Creating Implicit Flow response.
2019-07-12 12:21:05.072 +03:00 [DBG] Getting claims for access token for client: spa
2019-07-12 12:21:05.072 +03:00 [DBG] Getting claims for access token for subject: b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d
2019-07-12 12:21:05.072 +03:00 [DBG] Get profile called for subject b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d from client SPA Client with claim types [] via ClaimsProviderAccessToken
2019-07-12 12:21:05.072 +03:00 [DBG] Issued claims: []
2019-07-12 12:21:05.081 +03:00 [DBG] Getting claims for identity token for subject: b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d and client: spa
2019-07-12 12:21:05.082 +03:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-12 12:21:05.090 +03:00 [INF] {"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d","Scopes":"openid email profile pyatnashki_api","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3qWw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aubQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLO6L1I5DSI9:00000007","TimeStamp":"2019-07-12T09:21:05.0000000Z","ProcessId":6168,"LocalIpAddress":"127.0.0.1:44619","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-07-12 12:21:05.091 +03:00 [INF] Authorize endpoint response
{"SubjectId":"b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d","ClientId":"spa","RedirectUri":"http://localhost:4200/auth-callback","State":"dc7e7a8649194778bf88da3b0cb8dede","Scope":"openid email profile pyatnashki_api","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-12 12:21:05.091 +03:00 [DBG] Augmenting SignInContext
2019-07-12 12:21:05.092 +03:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-12 12:21:06.398 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-12 12:21:06.398 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:21:06.399 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:21:06.399 +03:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-12 12:21:06.399 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-12 12:21:06.399 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-12 12:21:06.399 +03:00 [DBG] Start discovery request
2019-07-12 12:21:06.479 +03:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-12 12:21:06.480 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:21:06.480 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:21:06.480 +03:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-12 12:21:06.481 +03:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-12 12:21:06.481 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-12 12:21:06.481 +03:00 [DBG] Start key discovery request
2019-07-12 12:21:06.567 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 12:21:06.567 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:21:06.567 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:21:06.573 +03:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-12 12:21:06.574 +03:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-12 12:21:06.574 +03:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-12 12:21:06.574 +03:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-12 12:21:06.574 +03:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-12 12:21:06.575 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-12 12:21:06.575 +03:00 [DBG] Start userinfo request
2019-07-12 12:21:06.575 +03:00 [DBG] Bearer token found in header
2019-07-12 12:21:06.582 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:21:06.583 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 12:21:06.583 +03:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-12 12:21:06.583 +03:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-12 12:21:06.583 +03:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1562923265,"exp":1562926865,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","pyatnashki_api"],"client_id":"spa","sub":"b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d","auth_time":1562923261,"idp":"Google","scope":["openid","email","profile","pyatnashki_api"],"amr":"external"},"$type":"TokenValidationLog"}
2019-07-12 12:21:06.583 +03:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-12 12:21:06.584 +03:00 [DBG] Creating userinfo response
2019-07-12 12:21:06.584 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 12:21:06.584 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 12:21:06.584 +03:00 [DBG] Requested claim types: sub email name family_name given_name middle_name preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-07-12 12:21:06.584 +03:00 [DBG] Scopes in access token: openid email profile pyatnashki_api
2019-07-12 12:21:06.584 +03:00 [DBG] Get profile called for subject b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d from client SPA Client with claim types ["sub","email","name","family_name","given_name","middle_name","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2019-07-12 12:21:06.584 +03:00 [DBG] Issued claims: ["name","given_name","family_name","email"]
2019-07-12 12:21:06.584 +03:00 [INF] Profile service returned the following claim types: name given_name family_name email
2019-07-12 12:21:06.585 +03:00 [DBG] End userinfo request
2019-07-12 12:21:06.609 +03:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-12 12:21:06.609 +03:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-12 12:21:06.610 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-12 12:21:06.610 +03:00 [DBG] Rendering check session result
2019-07-12 14:34:34.956 +03:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-12 14:34:34.957 +03:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-12 14:34:34.957 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-12 14:34:34.957 +03:00 [DBG] Start authorize request
2019-07-12 14:34:34.957 +03:00 [DBG] User in authorize request: b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d
2019-07-12 14:34:34.957 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 14:34:34.957 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 14:34:34.958 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 14:34:34.958 +03:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid email profile pyatnashki_api","State":"f167ebc9af2548519c4b4820758c4910","UiLocales":null,"Nonce":"f3c876a7b3e74d839dcbca9ebc1910ec","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0c4b133299c06abda4a0ba25bcebc9bc","Raw":{"client_id":"spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid email profile pyatnashki_api","state":"f167ebc9af2548519c4b4820758c4910","nonce":"f3c876a7b3e74d839dcbca9ebc1910ec"},"$type":"AuthorizeRequestValidationLog"}
2019-07-12 14:34:34.958 +03:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-12 14:34:34.958 +03:00 [DBG] user_consent grant with value: spa|b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d not found in store.
2019-07-12 14:34:34.958 +03:00 [DBG] Found no prior consent from consent store, consent is required
2019-07-12 14:34:34.958 +03:00 [INF] Showing consent: User has not yet consented
2019-07-12 14:34:34.970 +03:00 [DBG] Start authorize request protocol validation
2019-07-12 14:34:34.971 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 14:34:34.971 +03:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-12 14:34:34.971 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 14:35:25.115 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-12 14:35:25.184 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-12 14:35:25.191 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-12 14:35:25.191 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-12 14:35:25.191 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-12 14:35:25.191 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-12 14:35:25.191 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-12 14:35:25.721 +03:00 [DBG] Login Url: /Account/Login
2019-07-12 14:35:25.724 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-12 14:35:25.724 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-12 14:35:25.724 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-12 14:35:25.724 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-12 14:35:25.724 +03:00 [DBG] Error Url: /home/error
2019-07-12 14:35:25.724 +03:00 [DBG] Error Id Parameter: errorId
2019-07-12 14:38:11.336 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-12 14:38:11.393 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-12 14:38:11.397 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-12 14:38:11.397 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-12 14:38:11.397 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-12 14:38:11.398 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-12 14:38:11.398 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-12 14:38:11.787 +03:00 [DBG] Login Url: /Account/Login
2019-07-12 14:38:11.790 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-12 14:38:11.790 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-12 14:38:11.790 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-12 14:38:11.790 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-12 14:38:11.790 +03:00 [DBG] Error Url: /home/error
2019-07-12 14:38:11.790 +03:00 [DBG] Error Id Parameter: errorId
2019-07-12 14:38:20.459 +03:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-12 14:38:20.529 +03:00 [INF] AuthenticationScheme: idsrv signed out.
2019-07-12 14:38:20.547 +03:00 [INF] {"SubjectId":"b51108abed3e7e2e40e24d35c56f7460d023737c6f3e269c9fa147d8d3fb559d","DisplayName":"Илья Шершунович","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLO6NLLLTQRR:00000004","TimeStamp":"2019-07-12T11:38:20.0000000Z","ProcessId":9164,"LocalIpAddress":"127.0.0.1:18654","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-07-12 14:38:20.616 +03:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-12 14:38:20.624 +03:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-12 14:38:20.624 +03:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-12 14:38:20.634 +03:00 [DBG] Processing signout callback request
2019-07-12 14:38:20.692 +03:00 [DBG] client configuration validation for client spa succeeded.
2019-07-12 14:38:20.693 +03:00 [DBG] No client front-channel logout URLs
2019-07-12 14:38:20.693 +03:00 [DBG] No client back-channel logout URLs
2019-07-12 14:38:20.693 +03:00 [INF] Successful signout callback.
2019-07-12 14:38:20.693 +03:00 [DBG] No client front-channel iframe urls
2019-07-12 14:38:20.693 +03:00 [DBG] No client back-channel iframe urls
2019-07-12 14:38:23.765 +03:00 [INF] AuthenticationScheme: idsrv was challenged.
2019-07-12 14:54:42.190 +03:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-12 14:54:42.241 +03:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-12 14:54:42.247 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-12 14:54:42.247 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-12 14:54:42.247 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-12 14:54:42.247 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-12 14:54:42.247 +03:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-12 14:54:42.868 +03:00 [DBG] Login Url: /Account/Login
2019-07-12 14:54:42.871 +03:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-12 14:54:42.871 +03:00 [DBG] Logout Url: /Account/Logout
2019-07-12 14:54:42.871 +03:00 [DBG] ConsentUrl Url: /consent
2019-07-12 14:54:42.871 +03:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-12 14:54:42.872 +03:00 [DBG] Error Url: /home/error
2019-07-12 14:54:42.872 +03:00 [DBG] Error Id Parameter: errorId
