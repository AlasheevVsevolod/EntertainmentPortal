<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EP.Sudoku.Web</name>
    </assembly>
    <members>
        <member name="T:EP.Sudoku.Web.Controllers.AuthController">
             <summary>
            Here are operations with local server authentication and registration.
             </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.AuthController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser},EP.Sudoku.Logic.Services.IEmailSenderService,Microsoft.Extensions.Logging.ILogger{EP.Sudoku.Web.Controllers.AuthController})">
             <summary>
            AuthController constructor.
             </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.AuthController.GetToken(Microsoft.AspNetCore.Identity.IdentityUser)">
             <summary>
            Creates JWT.
             </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.AuthController.RegisterWithToken(EP.Sudoku.Logic.Models.User)">
             <summary>
            Registration with JWT.
             </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.AuthController.LoginWithToken(EP.Sudoku.Logic.Models.User)">
             <summary>
            Login with JWT.
             </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.AuthController.Register(EP.Sudoku.Logic.Models.User)">
             <summary>
            Registration without JWT.
             </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.AuthController.Login(EP.Sudoku.Logic.Models.User)">
             <summary>
            Login without JWT.
             </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.AuthController.Logout">
             <summary>
            Logout with JWT.
             </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.AuthController.RegisterByEmail(EP.Sudoku.Logic.Models.User)">
             <summary>
            Registration by Email without MailKit.
             </summary>
        </member>
        <member name="T:EP.Sudoku.Web.Controllers.FacebookController">
            <summary>
            (OAuth) Facebook controller.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.FacebookController.Index">
            <summary>
            Method Index of (OAuth) Facebook controller (CallbackPath).
            </summary>
        </member>
        <member name="T:EP.Sudoku.Web.Controllers.GoogleController">
            <summary>
            (OAuth) Google controller.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.GoogleController.Index">
            <summary>
            Method Index of (OAuth) Google controller (CallbackPath).
            </summary>
        </member>
        <member name="T:EP.Sudoku.Web.Controllers.PlayersController">
            <summary>
            Here are CRUD operations that touch upon players of the game.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.PlayersController.#ctor(MediatR.IMediator,Microsoft.Extensions.Logging.ILogger{EP.Sudoku.Web.Controllers.PlayersController})">
            <summary>
            Is used for DI usage.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.PlayersController.GetAllPlayerAsync">
            <summary>
            Fetches all registered players from the Db.
            </summary>  
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.PlayersController.GetPlayerByUserIdAsync(System.String)">
            <summary>
            Fetches a player of the game from the Db by the unique UserId.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.PlayersController.GetPlayerByIdAsync(System.Int32)">
            <summary>
            Fetches a player of the game from the Db by the unique Id.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.PlayersController.CreatePlayer(EP.Sudoku.Logic.Commands.CreatePlayerCommand)">
            <summary>
            Creates a new player and saves information in the Db.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.PlayersController.EditPlayer(EP.Sudoku.Logic.Commands.UpdatePlayerCommand)">
            <summary>
            Changes the known information about a chosen player and saves it in the Db.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.PlayersController.DeletePlayer(System.Int32)">
            <summary>
            Removes the whole information about a chosen player from the Db.
            </summary>
        </member>
        <member name="T:EP.Sudoku.Web.Controllers.SessionsController">
            <summary>
            Here are CRUD operations that touch upon the game itself.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.SessionsController.#ctor(MediatR.IMediator,Microsoft.Extensions.Logging.ILogger{EP.Sudoku.Web.Controllers.SessionsController})">
            <summary>
            Is used for DI usage.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.SessionsController.GetSessionByIdAsync(System.Int32)">
            <summary>
            Fetches a gamesession from the Db by the unique Id.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.SessionsController.CreateSession(EP.Sudoku.Logic.Commands.CreateSessionCommand)">
            <summary>
            Creates a new gamesession due to the set parametrs and saves it in the Db.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.SessionsController.EditSession(EP.Sudoku.Logic.Commands.UpdateSessionCommand)">
            <summary>
            Changes the known information about a gamesession and saves it in the Db.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.SessionsController.SetCellValue(EP.Sudoku.Logic.Commands.SetCellValueCommand)">
            <summary>
            Changes the value of a cell durring a gamesession and saves it in the Db.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Controllers.SessionsController.GetHint(EP.Sudoku.Logic.Commands.GetHintCommand)">
            <summary>    
            Changes the value of a cell after each of three possibilies to get automatically set values durring the game as prompts and saves it in the Db.
            </summary>
        </member>
        <member name="T:EP.Sudoku.Web.Filters.GlobalExceptionFilter">
            <summary>
            Class GlobalExceptionFilter.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Filters.GlobalExceptionFilter.#ctor(Microsoft.Extensions.Logging.ILogger{EP.Sudoku.Web.Filters.GlobalExceptionFilter})">
            <summary>
            GlobalExceptionFilter constructor.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Filters.GlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            Method OnException (GEF options).
            </summary>
        </member>
        <member name="T:EP.Sudoku.Web.Hubs.SudokuHub">
            <summary>
            Class SudokuHub for SingleR usage.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Hubs.SudokuHub.#ctor(Microsoft.Extensions.Logging.ILogger{EP.Sudoku.Web.Hubs.SudokuHub})">
             <summary>
            SudokuHub constructor.
             </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Hubs.SudokuHub.GetMes(EP.Sudoku.Logic.Models.ChatMessage)">
            <summary>
            Catches messages fron UI 
            </summary>
        </member>
        <member name="T:EP.Sudoku.Web.Program">
            <summary>
            Class Program
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Program.Main(System.String[])">
            <summary>
            Method Main
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Method CreateWebHostBuilder
            </summary>
        </member>
        <member name="T:EP.Sudoku.Web.Startup">
            <summary>
            This class uses by the runtime. Used to configure services.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Used to configure services.
            </summary>
        </member>
        <member name="P:EP.Sudoku.Web.Startup.Configuration">
            <summary>
            Represents a set of key/value application configuration properties.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
        </member>
        <member name="M:EP.Sudoku.Web.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,MediatR.IMediator)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
        </member>
        <member name="T:EP.Sudoku.Web.SudokuConstants">
            <summary>
            Here are the values of TVP (Token Validation Parameters) constants for it's (JWT's) local creating.
            </summary>
        </member>
        <member name="F:EP.Sudoku.Web.SudokuConstants.ISSUER_NAME">
            <summary>
            Here is the values of ISSUER_NAME.
            </summary>
        </member>
        <member name="F:EP.Sudoku.Web.SudokuConstants.AUDIENCE_NAME">
            <summary>
            Here is the values of AUDIENCE_NAME.
            </summary>
        </member>
        <member name="F:EP.Sudoku.Web.SudokuConstants.SECRET">
            <summary>
            Here is the values of SECRET.
            </summary>
        </member>
    </members>
</doc>
